<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visualization on Guangchuang Yu</title>
    <link>http://guangchuangyu.github.io/categories/visualization/</link>
    <description>Recent content in Visualization on Guangchuang Yu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Mar 2016 10:50:00 +0800</lastBuildDate>
    <atom:link href="http://guangchuangyu.github.io/categories/visualization/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>embed images in ggplot2 via subview and annotate a phylogenetic tree with images using inset function</title>
      <link>http://guangchuangyu.github.io/2016/03/embed-images-in-ggplot2-via-subview-and-annotate-a-phylogenetic-tree-with-images-using-inset-function/</link>
      <pubDate>Sun, 20 Mar 2016 10:50:00 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2016/03/embed-images-in-ggplot2-via-subview-and-annotate-a-phylogenetic-tree-with-images-using-inset-function/</guid>
      <description>&lt;p&gt;I extended the &lt;a href=&#34;http://guangchuangyu.github.io/2015/08/subview/&#34;&gt;subview&lt;/a&gt; function to support embed image file in a &lt;code&gt;ggplot&lt;/code&gt; object.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set.seed(123)
d = data.frame(x=rnorm(10), y=rnorm(10))

imgfile &amp;lt;- tempfile(, fileext=&amp;quot;.png&amp;quot;)
download.file(&amp;quot;https://avatars1.githubusercontent.com/u/626539?v=3&amp;amp;u=e731426406dd3f45a73d96dd604bc45ae2e7c36f&amp;amp;s=140&amp;quot;,
              destfile=imgfile, mode=&#39;wb&#39;)

p = ggplot(d, aes(x, y))
subview(p, imgfile, x=d$x[1], y=d$y[1]) + geom_point(size=5)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/subview_img.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In &lt;a href=&#34;http://guangchuangyu.github.io/2015/08/ggtree-annotate-phylogenetic-tree-with-local-images/&#34;&gt;previous post&lt;/a&gt;, I have introduced using &lt;code&gt;annotation_image&lt;/code&gt; function for annotating tips with local images.&lt;/p&gt;

&lt;p&gt;Now with the updated &lt;code&gt;subview&lt;/code&gt; function, we can use &lt;a href=&#34;http://guangchuangyu.github.io/2016/01/annotate-a-phylogenetic-tree-with-insets/&#34;&gt;inset&lt;/a&gt; function to annotate nodes/tips with image files and/or subplots.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set.seed(2015-12-31)
tr &amp;lt;- rtree(15)
p &amp;lt;- ggtree(tr)

img &amp;lt;- list(imgfile, imgfile)
names(img) &amp;lt;- c(&amp;quot;18&amp;quot;, &amp;quot;22&amp;quot;)
inset(p, img)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/inset_with_img.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;PS: As I got more and more emails from ggtree users, I created a forum, &lt;a href=&#34;https://groups.google.com/forum/#!forum/bioc-ggtree&#34;&gt;https://groups.google.com/forum/#!forum/bioc-ggtree&lt;/a&gt;. With this forum, &lt;code&gt;ggtree&lt;/code&gt; users can help each others and also solutions posted in the forum can help other peoples when they google search their questions. Please join the forum and post your questions if you have any.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Font Awesome supported in emojifont</title>
      <link>http://guangchuangyu.github.io/2016/03/font-awesome-supported-in-emojifont/</link>
      <pubDate>Mon, 14 Mar 2016 16:21:11 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2016/03/font-awesome-supported-in-emojifont/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://cran.r-project.org/package=emojifont&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/emojifont&#34; alt=&#34;CRAN_Status_Badge&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/emojifont/index.html&#34;&gt;&lt;code&gt;emojifont&lt;/code&gt;&lt;/a&gt; is available in CRAN, you can use the following command to install it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;emojifont&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An example of using emoji font in R plot is showed below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2016/douban_emoji.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;More examples can be found in &lt;a href=&#34;http://guangchuangyu.github.io/2015/12/use-emoji-font-in-r/&#34;&gt;the post&lt;/a&gt; and online &lt;a href=&#34;https://cran.r-project.org/web/packages/emojifont/vignettes/emojifont.html&#34;&gt;vignette&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I found &lt;a href=&#34;http://fontawesome.io/cheatsheet/&#34;&gt;FontAwesome&lt;/a&gt; is quite interesting especially in technical world. In &lt;code&gt;emojifont&lt;/code&gt; (version &amp;gt;= 0.3), I have packed the &lt;code&gt;Font Awesome&lt;/code&gt;. So that we can use this fancy font in both base and ggplot2 graphics.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;load.fontawesome()

set.seed(2016-03-09)
fa &amp;lt;- fontawesome(c(&#39;fa-github&#39;, &#39;fa-weibo&#39;, &#39;fa-twitter&#39;, &#39;fa-android&#39;, &#39;fa-coffee&#39;))
d &amp;lt;- data.frame(x=rnorm(20), 
                y=rnorm(20), 
                label=sample(fa, 20, replace=T))

ggplot(d, aes(x, y, color=label)) + 
    geom_text(aes(label=label), family=&#39;fontawesome-webfont&#39;)+
    xlab(NULL)+ylab(NULL)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/emojifont/master/vignettes/figures/fontawesome.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Have fun with &lt;code&gt;emojifont&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/drob&#34;&gt;@drob&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/guangchuangyu&#34;&gt;@guangchuangyu&lt;/a&gt;, this is data surfing (air quality data from Lima, Peru) / fun with your cool pkgs. Thx! &lt;a href=&#34;https://t.co/ikinjxDDZL&#34;&gt;pic.twitter.com/ikinjxDDZL&lt;/a&gt;&lt;/p&gt;&amp;mdash; MaÃ«lle Salmon (@ma_salmon) &lt;a href=&#34;https://twitter.com/ma_salmon/status/706490090609106944&#34;&gt;March 6, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>covplot supports GRangesList</title>
      <link>http://guangchuangyu.github.io/2016/02/covplot-supports-grangeslist/</link>
      <pubDate>Mon, 29 Feb 2016 11:45:08 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2016/02/covplot-supports-grangeslist/</guid>
      <description>&lt;p&gt;To answer the &lt;a href=&#34;https://github.com/GuangchuangYu/ChIPseeker/issues/27&#34;&gt;issue&lt;/a&gt;, I extend the &lt;code&gt;covplot&lt;/code&gt; function to support viewing coverage of a list of &lt;code&gt;GRanges&lt;/code&gt; objects or &lt;code&gt;bed&lt;/code&gt; files.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(ChIPseeker)
files &amp;lt;- getSampleFiles()
peak=GenomicRanges::GRangesList(CBX6=readPeakFile(files[[4]]),
                                CBX7=readPeakFile(files[[5]]))

p &amp;lt;- covplot(peak)
print(p)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ChIPseeker/2016_ChIPseeker_covplot_files/unnamed-chunk-1-2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;By default, The coverage plots are merged together with different colors. Users can separate them to different panels using &lt;code&gt;facet_grid&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(ggplot2)
col &amp;lt;- c(CBX6=&#39;red&#39;, CBX7=&#39;green&#39;)
p + facet_grid(chr ~ .id) + scale_color_manual(values=col) + scale_fill_manual(values=col)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ChIPseeker/2016_ChIPseeker_covplot_files/unnamed-chunk-2-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>use emoji font in R</title>
      <link>http://guangchuangyu.github.io/2015/12/use-emoji-font-in-r/</link>
      <pubDate>Wed, 16 Dec 2015 11:11:11 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/12/use-emoji-font-in-r/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2015/Screenshot 2015-12-16 10.55.49.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I have played with emoji in &lt;code&gt;R&lt;/code&gt; for a while. My solution of using it is different from what implemented in &lt;a href=&#34;https://github.com/dill/emoGG/&#34;&gt;emoGG&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;emoGG&lt;/code&gt; is a good attemp to add &lt;code&gt;emoji&lt;/code&gt; in &lt;code&gt;ggplot2&lt;/code&gt;. It render &lt;code&gt;emoji&lt;/code&gt; picture (png) and creat a layer, &lt;code&gt;geom_emoji&lt;/code&gt;, to add emoji.&lt;/p&gt;

&lt;p&gt;In my opinion, &lt;code&gt;emoji&lt;/code&gt; should be treated as ordinary font in user interface, albeit it maynot be true internally.&lt;/p&gt;

&lt;p&gt;It would be more flexible if we can use emoji as ordinary font and in this way user don&amp;rsquo;t need to learn extra stuff.&lt;/p&gt;

&lt;p&gt;I implemented my solution of using &lt;code&gt;emoji&lt;/code&gt; in the R package &lt;a href=&#34;https://github.com/GuangchuangYu/emojifont&#34;&gt;emojifont&lt;/a&gt;. The package is very simple, pack some emoji fonts (currently only &lt;a href=&#34;https://github.com/MorbZ/OpenSansEmoji&#34;&gt;OpenSansEmoji.ttf&lt;/a&gt;) and use &lt;a href=&#34;https://github.com/yixuan/showtext&#34;&gt;showtext&lt;/a&gt; to render the fonts, then we can use the font in either base plot or ggplot2.&lt;/p&gt;

&lt;h1 id=&#34;emojifont:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;emojifont&lt;/h1&gt;

&lt;h2 id=&#34;installation:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;Installation&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;devtools::install_github(&amp;quot;GuangchuangYu/emojifont&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;load-emoji-font:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;load Emoji font&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;library(emojifont)
## list available emoji fonts
list.emojifonts()

## [1] &amp;quot;OpenSansEmoji.ttf&amp;quot;

## load selected emoji font
load.emojifont(&#39;OpenSansEmoji.ttf&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;emoji-characters:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;Emoji characters&lt;/h1&gt;

&lt;p&gt;To use &lt;code&gt;emoji&lt;/code&gt;, we need to use their corresponding unicode. Emoji unicode can be found in &lt;a href=&#34;http://apps.timwhitlock.info/emoji/tables/unicode&#34;&gt;http://apps.timwhitlock.info/emoji/tables/unicode&lt;/a&gt;, or searched using &lt;a href=&#34;https://github.com/richfitz/remoji&#34;&gt;remoji&lt;/a&gt; package.&lt;/p&gt;

&lt;h1 id=&#34;emoji-in-r-plot:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;Emoji in R plot&lt;/h1&gt;

&lt;h2 id=&#34;base-plot:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;base plot&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;require(remoji)
set.seed(123)
x &amp;lt;- rnorm(10)
set.seed(321)
y &amp;lt;- rnorm(10)
plot(x, y, cex=0)
text(x, y, labels=emoji(&#39;cow&#39;), cex=1.5, col=&#39;steelblue&#39;, family=&#39;OpenSansEmoji&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/emojifont/master/vignettes/figures/base_emoji-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;ggplot2:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;ggplot2&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;d &amp;lt;- data.frame(x=x, y=y,
     label = sample(c(emoji(&#39;cow&#39;), emoji(&#39;camel&#39;)), 10, replace=TRUE),
     type = sample(LETTERS[1:3], 10, replace=TRUE))
require(ggplot2)
ggplot(d, aes(x, y, color=type, label=label)) + 
    geom_text(family=&amp;quot;OpenSansEmoji&amp;quot;, size=5)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/emojifont/master/vignettes/figures/ggplot_emoji-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We can also use &lt;code&gt;emoji&lt;/code&gt; in title, legend or axis label.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dd=data.frame(x=emoji(c(&amp;quot;satisfied&amp;quot;, &amp;quot;disapointed&amp;quot;)), y=c(50, 10))
emoji_text=element_text(family=&amp;quot;OpenSansEmoji&amp;quot;, size=20)
ggplot(dd, aes(x, y)) + geom_bar(stat=&#39;identity&#39;, aes(fill=x)) + 
     ggtitle(paste(emoji(c(&amp;quot;+1&amp;quot;, &amp;quot;-1&amp;quot;)), collapse=&amp;quot; &amp;quot;))+ 
        theme(axis.text.x = emoji_text, legend.text=emoji_text, title=emoji_text) + 
            xlab(NULL)+ylab(NULL)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2015/Screenshot 2015-12-16 11.10.51.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;ggtree:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;ggtree&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;require(ggtree)
require(colorspace)

tree_text=paste0(
    &amp;quot;(&amp;quot;,&amp;quot;(&amp;quot;,&amp;quot;(&amp;quot;,
       &amp;quot;(&amp;quot;,
            &amp;quot;(&amp;quot;,
               emoji(&amp;quot;cow&amp;quot;), &amp;quot;,&amp;quot;,
               &amp;quot;(&amp;quot;,
                  emoji(&amp;quot;whale&amp;quot;),&amp;quot;,&amp;quot;,
                  emoji(&amp;quot;dolphin&amp;quot;),
               &amp;quot;)&amp;quot;,
            &amp;quot;),&amp;quot;,
            &amp;quot;(&amp;quot;,
               emoji(&#39;pig2&#39;),&amp;quot;,&amp;quot;,
               emoji(&#39;boar&#39;),
            &amp;quot;)&amp;quot;,
       &amp;quot;),&amp;quot;,
       emoji(&amp;quot;camel&amp;quot;),
    &amp;quot;),&amp;quot;, emoji(&amp;quot;fish&amp;quot;), &amp;quot;),&amp;quot;, 
emoji(&amp;quot;seedling&amp;quot;), &amp;quot;);&amp;quot;)

ggtree(read.tree(text=tree_text)) + xlim(NA, 7) +
   geom_tiplab(family=&amp;quot;OpenSansEmoji&amp;quot;, size=10,
               color=rainbow_hcl(8))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/emojifont/master/vignettes/figures/ggtree_emoji-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;apple-color-emoji:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;Apple Color Emoji&lt;/h1&gt;

&lt;p&gt;Although &lt;code&gt;R&lt;/code&gt;&amp;rsquo;s graphical devices don&amp;rsquo;t support &lt;code&gt;AppleColorEmoji&lt;/code&gt; font, it&amp;rsquo;s still possible to use it. We can export the &lt;code&gt;plot&lt;/code&gt; to &lt;code&gt;svg&lt;/code&gt; file and render it in &lt;code&gt;Safari&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(gridSVG)
p &amp;lt;-  ggtree(read.tree(text=tree_text), size=2) + geom_tiplab(size=20)
p &amp;lt;- p %&amp;gt;% phylopic(&amp;quot;79ad5f09-cf21-4c89-8e7d-0c82a00ce728&amp;quot;, color=&amp;quot;firebrick&amp;quot;, alpha = .3)
p &amp;lt;- p + xlim(NA, 7) + ylim(NA, 8.5)
p
ps = grid.export(&amp;quot;emoji.svg&amp;quot;, addClass=T)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/emojifont/master/vignettes/figures/apple_emoji.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>use simplify to remove redundancy of enriched GO terms</title>
      <link>http://guangchuangyu.github.io/2015/10/use-simplify-to-remove-redundancy-of-enriched-go-terms/</link>
      <pubDate>Wed, 21 Oct 2015 09:37:11 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/10/use-simplify-to-remove-redundancy-of-enriched-go-terms/</guid>
      <description>&lt;p&gt;To simplify enriched GO result, we can use slim version of GO and use
&lt;em&gt;&lt;a href=&#34;http://guangchuangyu.github.io/2015/05/use-clusterprofiler-as-an-universal-enrichment-analysis-tool/&#34;&gt;enricher&lt;/a&gt;&lt;/em&gt;
function to analyze.&lt;/p&gt;

&lt;p&gt;Another strategy is to use
&lt;a href=&#34;http://www.bioconductor.org/packages/GOSemSim&#34;&gt;GOSemSim&lt;/a&gt; to calculate
similarity of GO terms and remove those highly similar terms by keeping
one representative term. To make this feature available to
&lt;a href=&#34;http://www.bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt;
users, I develop a &lt;em&gt;simplify&lt;/em&gt; method to reduce redundant GO terms from
output of &lt;em&gt;enrichGO&lt;/em&gt; function.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require(clusterProfiler)
data(geneList, package=&amp;quot;DOSE&amp;quot;)
de &amp;lt;- names(geneList)[abs(geneList) &amp;gt; 2]
bp &amp;lt;- enrichGO(de, ont=&amp;quot;BP&amp;quot;)
enrichMap(bp)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/clusterProfiler/bp1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;enrichMap&lt;/em&gt; doesn&amp;rsquo;t display the whole picture as we use the default
value &lt;em&gt;n=50&lt;/em&gt; to only show 50 highly significant terms. In the
&lt;em&gt;enrichMap&lt;/em&gt;, we can found that there are many redundant terms form a
highly condense network.&lt;/p&gt;

&lt;p&gt;Now with the &lt;em&gt;simplify&lt;/em&gt; method, we can remove redundant terms.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lang=&amp;quot;rsplus&amp;quot;&#34;&gt;bp2 &amp;lt;- simplify(bp, cutoff=0.7, by=&amp;quot;p.adjust&amp;quot;, select_fun=min)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;em&gt;simplify&lt;/em&gt; method apply &lt;em&gt;&amp;lsquo;select_fun&amp;rsquo;&lt;/em&gt; (which can be a user defined
function) to feature &amp;lsquo;&lt;em&gt;by&lt;/em&gt;&amp;rsquo; to select one representative terms from
redundant terms (which have similarity higher than &amp;lsquo;&lt;em&gt;cutoff&lt;/em&gt;&amp;rsquo;).
&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/clusterProfiler/bp2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The simplified version of enriched result is more clear and give us a
more comprehensive view of the whole story.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;enrichGO&lt;/em&gt; test the whole GO corpus and enriched result may contains
very general terms.
&lt;em&gt;&lt;a href=&#34;http://www.bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt;&lt;/em&gt;
contains a &lt;em&gt;dropGO&lt;/em&gt; function to remove specific GO terms or GO level,
see &lt;a href=&#34;https://github.com/GuangchuangYu/clusterProfiler/issues/26&#34;&gt;the
issue&lt;/a&gt;. With
&lt;em&gt;simplify&lt;/em&gt; and &lt;em&gt;dropGO&lt;/em&gt;, enriched result can be more specific and more
easy to interpret. Both of these functions work fine with outputs
obtained from both &lt;em&gt;enrichGO&lt;/em&gt; and &lt;em&gt;compareCluster&lt;/em&gt;.ð»&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>subview</title>
      <link>http://guangchuangyu.github.io/2015/08/subview/</link>
      <pubDate>Mon, 31 Aug 2015 03:17:48 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/08/subview/</guid>
      <description>&lt;p&gt;I implemented a function, &lt;em&gt;subview&lt;/em&gt;, in
&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/ggtree.html&#34;&gt;ggtree&lt;/a&gt;
that make it easy to embed a subplot in ggplot.&lt;/p&gt;

&lt;p&gt;An example is shown below:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(ggplot2)
library(ggtree)

dd &amp;lt;- data.frame(x=LETTERS[1:3], y=1:3)
pie &amp;lt;- ggplot(dd, aes(x=1, y, fill=x)) + 
geom_bar(stat=&amp;quot;identity&amp;quot;, width=1) + 
coord_polar(theta=&amp;quot;y&amp;quot;) + theme_tree() + 
xlab(NULL) + ylab(NULL) + 
theme_transparent()

x &amp;lt;- sample(2:9)
y &amp;lt;- sample(2:9)
width &amp;lt;- sample(seq(0.05, 0.15, length.out=length(x)))
height &amp;lt;- width

p &amp;lt;- ggplot(data=data.frame(x=c(0, 10), y=c(0, 10)), aes(x, y))+geom_blank()
print(p)
for (i in seq_along(x)) {
p %&amp;lt;&amp;gt;% subview(pie, x[i], y[i], width[i], height[i])
print(p)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/subview.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;With this function, we can plot a specific clade and add a subplot of
the whole topology; we can also add relative statistic graph above the
tree or to a specific node. It&amp;rsquo;s not specific to phylogenetic tree, it
works with all ggplot objects as demonstrated in the example.&lt;/p&gt;

&lt;p&gt;PS: &lt;a href=&#34;http://www.bioconductor.org/packages/ggtree&#34;&gt;ggtree&lt;/a&gt; is now
presented in &lt;a href=&#34;https://cran.r-project.org/web/views/Phylogenetics.html&#34;&gt;CRAN Task View:
Phylogenetics&lt;/a&gt;.
&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/taskview_cran.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;AND get its first citation.
&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/Screenshot%202015-08-04%2021.49.27.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>upsetplot in ChIPseeker</title>
      <link>http://guangchuangyu.github.io/2015/07/upsetplot-in-chipseeker/</link>
      <pubDate>Tue, 28 Jul 2015 06:45:01 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/07/upsetplot-in-chipseeker/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://guangchuangyu.github.io/2015/07/chipseeker-an-r/bioconductor-package-for-chip-peak-annotation-comparison-and-visualization/&#34;&gt;ChIPseeker&lt;/a&gt;
is an R package for ChIP peak annotation, comparison and visualization.&lt;/p&gt;

&lt;p&gt;We have implemented &lt;a href=&#34;http://guangchuangyu.github.io/2014/04/visualization-methods-in-chipseeker/&#34;&gt;several visualization methods&lt;/a&gt;,
including
&lt;em&gt;&lt;a href=&#34;http://guangchuangyu.github.io/2014/10/multiple-annotation-in-chipseeker/&#34;&gt;vennpie&lt;/a&gt;&lt;/em&gt;
that was designed for viewing annotation overlap as shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/10/2014-09-30-142735_471x303_scrot.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Not all overlap information can be demonstrated in vennpie.
&lt;a href=&#34;http://www.nature.com/nmeth/journal/v11/n8/full/nmeth.3033.html&#34;&gt;Upset&lt;/a&gt;
is an effective way to visualize sets and intersections. We import
&lt;em&gt;upset&lt;/em&gt; function from &lt;a href=&#34;https://github.com/cran/UpSetR&#34;&gt;UpSetR&lt;/a&gt; package
and implement &lt;em&gt;upsetplot&lt;/em&gt; function, that can visualize ChIP annotation
overlap directly with output of &lt;em&gt;annotatePeak&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(ChIPseeker)
peak_file &amp;lt;- getSampleFiles()[[4]]
x &amp;lt;- annotatePeak(peak_file)
upsetplot(x)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ChIPseeker/upset.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We add a new parameter, &lt;em&gt;vennpie=FALSE&lt;/em&gt;, in upsetplot. If vennpie=TRUE,
a vennpie will be added as show below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ChIPseeker/upset_vennpie.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Although upset contains more information, vennpie is more intuitive and
the final figure is more compact. More information is available at the
&lt;a href=&#34;http://www.bioconductor.org/packages/3.2/bioc/vignettes/ChIPseeker/inst/doc/ChIPseeker.html&#34;&gt;online vignette&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;reference:07e5a5bc7f123188a27a1c1e28238bcc&#34;&gt;Reference&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Alexander Lex, and Gehlenborg Nils. âPoints of View: Sets and
Intersections.â Nature Methods 11, no. 8 (August 2014): 779â779.
doi:&lt;a href=&#34;http://doi.org/10.1038/nmeth.3033&#34;&gt;10.1038/nmeth.3033&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Guangchuang Yu, Li-Gen Wang, and Qing-Yu He. âChIPseeker: An
R/Bioconductor Package for ChIP Peak Annotation, Comparison and
Visualization.â Bioinformatics 31, no. 14 (July 15, 2015): 2382â83.
doi:&lt;a href=&#34;http://doi.org/10.1093/bioinformatics/btv145&#34;&gt;10.1093/bioinformatics/btv145&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Conway Jake, and Gehlenborg Nils, &amp;ldquo;UpSetR&amp;rdquo;,
&lt;a href=&#34;https://github.com/cran/UpSetR&#34;&gt;https://github.com/cran/UpSetR&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>dotplot for enrichment result</title>
      <link>http://guangchuangyu.github.io/2015/06/dotplot-for-enrichment-result/</link>
      <pubDate>Tue, 23 Jun 2015 05:37:09 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/06/dotplot-for-enrichment-result/</guid>
      <description>&lt;p&gt;This is a feature request from &lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/clusterProfiler.html&#34;&gt;clusterProfiler&lt;/a&gt;
user. It&amp;rsquo;s similar to what I implemented in
&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/clusterProfiler.html&#34;&gt;clusterProfiler&lt;/a&gt;
for comparing biological themes. For comparing different enrichment
results, the x-axis represent different gene clusters while for a single
enrichment result, the x-axis can be gene count or gene ratio. This is
actually similar to traditional barplot, with dot position as bar height
and dot color as bar color. But dotplot can represent one more feature
nicely by dot size and it can be a good alternative to barplot.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(DOSE)
deg = names(geneList)[abs(geneList) &amp;gt; 1]
do = enrichDO(deg)
dotplot(do, showCategory=20)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/DOSE/dotplot_geneRatio.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We can set the x-axis to use gene count and dot color by one of
&amp;lsquo;pvalue&amp;rsquo;, &amp;lsquo;p.adjust&amp;rsquo; or &amp;lsquo;qvalue&amp;rsquo;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dotplot(do, x=&amp;quot;count&amp;quot;, showCategory=20, colorBy=&amp;quot;qvalue&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/DOSE/dotplot_count.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The dotplot function is also available in &lt;a href=&#34;http://www.bioconductor.org/packages/devel/bioc/html/clusterProfiler.html&#34;&gt;clusterProfiler&lt;/a&gt; and &lt;a href=&#34;http://www.bioconductor.org/packages/devel/bioc/html/ReactomePA.html&#34;&gt;ReactomePA&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>an example of drawing beast tree using ggtree</title>
      <link>http://guangchuangyu.github.io/2015/04/an-example-of-drawing-beast-tree-using-ggtree/</link>
      <pubDate>Wed, 01 Apr 2015 01:50:04 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/04/an-example-of-drawing-beast-tree-using-ggtree/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://beast.bio.ed.ac.uk/figtree&#34;&gt;FigTree&lt;/a&gt; is designed for viewing
beast output as demonstrated by their example data:
&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2015/Screenshot%202015-03-10%2018.15.57.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;BEAST output is well supported by
&lt;a href=&#34;https://github.com/GuangchuangYu/ggtree&#34;&gt;ggtree&lt;/a&gt; and it&amp;rsquo;s easy to
reproduce such a tree view.
&lt;a href=&#34;https://github.com/GuangchuangYu/ggtree&#34;&gt;ggtree&lt;/a&gt; supports parsing beast
output by read.beast function. We can visualize the tree directly by
using ggtree function. Since this is a time scale tree, we can set the
parameter &lt;strong&gt;&lt;em&gt;mrsd&lt;/em&gt;&lt;/strong&gt; to most recent sampling date.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require(ggplot2)
require(ggtree)
x &amp;lt;- read.beast(&amp;quot;/Applications/FigTree/influenza.tree&amp;quot;)
cols &amp;lt;- scale_color(x, by=&amp;quot;height&amp;quot;)
ggtree(x, right=TRUE, mrsd=&amp;quot;2005-04-02&amp;quot;, color=cols) + theme_tree2() +
    geom_text(aes(x=max(x), label=label), size=1, color=cols, hjust=-.3) +
        scale_x_continuous(breaks=c(1992, 1995, 1997, 2000, 2002, 2005), minor_breaks=seq(1992, 2005, 1)) +
            geom_segment(aes(xend=max(x)+.20, yend=y), linetype=&amp;quot;dotted&amp;quot;, size=.1, color=cols) +
                theme(panel.grid.major   = element_line(color=&amp;quot;black&amp;quot;, size=.2),
                      panel.grid.minor   = element_line(color=&amp;quot;grey&amp;quot;, size=.2),
                      panel.grid.major.y = element_blank(),
                      panel.grid.minor.y = element_blank()) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2015/Screenshot%202015-03-10%2018.16.14.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>viewing and annotating phylogenetic tree with ggtree</title>
      <link>http://guangchuangyu.github.io/2014/12/viewing-and-annotating-phylogenetic-tree-with-ggtree/</link>
      <pubDate>Sun, 21 Dec 2014 08:00:08 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2014/12/viewing-and-annotating-phylogenetic-tree-with-ggtree/</guid>
      <description>&lt;p&gt;When I need to annotate nucleotide substitutions in the phylogenetic
tree, I found that all the software are designed to display the tree but
not annotating it. Some of them may support annotating the tree with
specific data such as bootstrap values, but they are restricted to a few
supported data types. It is hard/impossible to inject user specific
data.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/12/2014-12-21-145753_579x436_scrot.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I decided to implement my own one by extending the ggplot2 package.
There are other R packages that implemented tree viewer using ggplot2,
including OutbreakTools, phyloseq and ggphylo, but all of them only
create complex tree view function for their specific needs. They are
just classical tree viewers that only viewing the tree or annotating a
specific data type. The good parts of ggplot2 are not available in these
packages. They lack of flexibilities of annotating phylogenetic tree by
diverse user inputs. I develop ggtree, which is based on grammar of
graphics and will takes all the good parts of ggplot2.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nwk &amp;lt;- system.file(&amp;quot;extdata&amp;quot;, &amp;quot;sample.nwk&amp;quot;, package = &amp;quot;ggtree&amp;quot;)
library(ape)
tree &amp;lt;- read.tree(nwk)
library(ggplot2)
library(ggtree)
ggplot(tree, aes(x, y)) + geom_tree() + theme_tree() + xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It extends ggplot2 to support tree objects and implements a geom_tree()
layer to draw the tree.&lt;/p&gt;

&lt;p&gt;The ggtree package provides a function, ggtree, for shortcut of
&lt;code&gt;ggplot()+geom_tree()+theme_tree()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It supports several tree objects including phylo that defined in ape,
phylo4 that defined in phylobase and jplace that defined within the
ggtree package.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p1 &amp;lt;- ggtree(tree) + ggtitle(&amp;quot;tree of phylo object&amp;quot;)
tr2 &amp;lt;- as(tree, &amp;quot;phylo4&amp;quot;)
p2 &amp;lt;- ggtree(tr2) + ggtitle(&amp;quot;tree of phylo4 object&amp;quot;)
jpf &amp;lt;- system.file(&amp;quot;extdata&amp;quot;, &amp;quot;sample.jplace&amp;quot;, package=&amp;quot;ggtree&amp;quot;)
jp &amp;lt;- read.jplace(jpf)
p3 &amp;lt;- ggtree(jp) + ggtitle(&amp;quot;tree of jplace object&amp;quot;)
library(gridExtra)
grid.arrange(p1, p2, p3, ncol=3)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/12/tree_objects.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;With this implementation, it is possible to inject user input. But is it
easy? The answer is yes and no. It may depends on user&amp;rsquo;s ggplot2
experiences. To place the input data at the correct position, you should
know how the tree was layout. It may be easy for an experienced user,
but hard for newbie. Most of us are impatient and reluctant to learn, so
I should create a way that is easy to follow. It&amp;rsquo;s not a good idea to
implement unnecessary geom_XXX layer, for it violates the great idea of
taking all the good parts of ggplot2, and it will violate the consistent
function calls of &lt;code&gt;geom_XXX&lt;/code&gt;. Thanks to my sleep disorder, I came out
with an operator &lt;strong&gt;&lt;code&gt;%&amp;lt;+%&lt;/code&gt;&lt;/strong&gt; for injecting input data to the tree view.
After the injection, the data is visible to all the geom_XXX layers.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggtree(tree)

print(dd)
taxa    place   value
M   NA  55.9
A   GZ  65.6
C   GZ  59.3
I   CZ  78.5
E   GZ  62.9
D   GZ  64.1
J   CZ  62.3
K   CZ  79.1
B   GZ  89.0
L   CZ  57.1
G   HK  66.4
H   HK  61.6
F   HK  59.9
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Suppose we have a tree view p, and input data dd, we can attach the data
to the tree and add a layer of tip labels and colored by place.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- p %&amp;lt;+% dd + geom_text(aes(color=place, label=label), hjust=-0.5)
print(p)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/12/tree_place.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Once the data is attached, it is always attached, and we can add more
layers easily.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p + geom_text(aes(color=place, label=place), hjust=1, vjust=-0.4, size=3) +
  geom_text(aes(color=place, label=value), hjust=1, vjust=1.4, size=3)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/12/tree_place2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The package is now available via github,
&lt;a href=&#34;https://github.com/GuangchuangYu/ggtree&#34;&gt;https://github.com/GuangchuangYu/ggtree&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Suggestions, comments and feature request are all welcome. Let&amp;rsquo;s make it
an easy to use and feature-riched package for viewing and annotating
phylogenetic trees.&lt;/p&gt;

&lt;p&gt;At last, wish you a merry christmas :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/12/IMG_5755.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>multiple annotation in ChIPseeker</title>
      <link>http://guangchuangyu.github.io/2014/10/multiple-annotation-in-chipseeker/</link>
      <pubDate>Wed, 01 Oct 2014 13:00:33 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2014/10/multiple-annotation-in-chipseeker/</guid>
      <description>

&lt;h3 id=&#34;nearest-gene-annotation:211662300f8731372460bacaae7937b5&#34;&gt;Nearest gene annotation&lt;/h3&gt;

&lt;p&gt;Almost all annotation software calculate the distance of a peak to the
nearest TSS and assign the peak to that gene. This can be misleading, as
binding sites might be located between two start sites of different
genes or hit different genes which have the same TSS location in the
genome.&lt;/p&gt;

&lt;p&gt;The function &lt;em&gt;annotatePeak&lt;/em&gt; provides option to assign genes with a max
distance cutoff and all genes within this distance were reported for
each peak.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; anno = annotatePeak(getSampleFiles()[[4]], addFlankGeneInfo=TRUE, flankDistance=5000)
&amp;gt;&amp;gt; loading peak file...              2014-09-30 01:12:09 PM 
&amp;gt;&amp;gt; preparing features information...         2014-09-30 01:12:09 PM 
&amp;gt;&amp;gt; identifying nearest features...       2014-09-30 01:12:10 PM 
&amp;gt;&amp;gt; calculating distance from peak to TSS...  2014-09-30 01:12:11 PM 
&amp;gt;&amp;gt; assigning genomic annotation...       2014-09-30 01:12:11 PM 
&amp;gt;&amp;gt; adding flank feature information from peaks...2014-09-30 01:12:37 PM 
&amp;gt;&amp;gt; assigning chromosome lengths          2014-09-30 01:12:39 PM 
&amp;gt;&amp;gt; done...                   2014-09-30 01:12:39 PM 
&amp;gt; head(as.GRanges(anno))
GRanges object with 6 ranges and 14 metadata columns:
      seqnames             ranges strand |          V4        V5
                      |     
  [1]     chr1 [ 815092,  817883]      * | MACS_peak_1    295.76
  [2]     chr1 [1243287, 1244338]      * | MACS_peak_2     63.19
  [3]     chr1 [2979976, 2981228]      * | MACS_peak_3    100.16
  [4]     chr1 [3566181, 3567876]      * | MACS_peak_4    558.89
  [5]     chr1 [3816545, 3818111]      * | MACS_peak_5     57.57
  [6]     chr1 [6304864, 6305704]      * | MACS_peak_6     54.57
             annotation  geneChr geneStart   geneEnd geneLength geneStrand
                    
  [1] Distal Intergenic     chr1    803451    812182       8732          -
  [2]  Promoter (&amp;lt;=1kb)     chr1   1243994   1247057       3064          +
  [3]  Promoter (&amp;lt;=1kb)     chr1   2976181   2980350       4170          -
  [4]  Promoter (&amp;lt;=1kb)     chr1   3547331   3566671      19341          -
  [5]  Promoter (&amp;lt;=1kb)     chr1   3816968   3832011      15044          +
  [6]  Promoter (1-2kb)     chr1   6304252   6305638       1387          +
           geneId transcriptId distanceToTSS
             
  [1]      284593   uc001abt.4         -5701
  [2]      126789   uc001aed.3             0
  [3]      440556   uc001aka.3             0
  [4]       49856   uc001ako.3             0
  [5]   100133612   uc001alg.3             0
  [6]      390992   uc009vly.2          1452
                                                                                                                                                               flank_txIds
                                                                                                                                                               
  [1]                                                                                                                                                           uc001abt.4
  [2] uc001aea.2;uc001aeb.2;uc001aec.1;uc001aed.3;uc010nyi.2;uc009vjx.3;uc009vjy.1;uc001aee.2;uc001aef.2;uc001aeg.2;uc001aeh.2;uc001aei.2;uc001aek.2;uc009vjz.2;uc010nyj.2
  [3]                                                                                                    uc001aka.3;uc010nzg.1;uc001akc.3;uc001ake.3;uc001akf.3;uc009vlh.3
  [4]                                                                   uc001ako.3;uc001akn.3;uc010nzi.2;uc001akp.3;uc021ofb.1;uc021ofc.1;uc021ofd.1;uc021ofe.1;uc021off.1
  [5]                                                                                                    uc001alg.3;uc010nzo.2;uc001alh.4;uc001alf.3;uc009vls.3;uc031pkz.1
  [6]                                                                                                                                                uc001amp.2;uc009vly.2
                                                                                        flank_geneIds
                                                                                          
  [1]                                                                                          284593
  [2] 116983;116983;116983;126789;126789;126789;54973;54973;54973;54973;54973;54973;54973;54973;54973
  [3]                                                           440556;440556;63976;63976;63976;63976
  [4]                                                 49856;49856;49856;7161;7161;7161;7161;7161;7161
  [5]                                              100133612;100133612;100133612;339448;339448;339448
  [6]                                                                                   387509;390992
                                                           flank_gene_distances
                                                                    
  [1]                                                                     -2910
  [2] -1978;-18;0;0;0;-128;8492;15729;15729;15729;15729;15729;15729;15729;15729
  [3]                                               0;0;-4514;-4514;-4514;-4514
  [4]                                 0;0;0;-1253;-1253;-1253;-1253;-1253;-1253
  [5]                                                               0;0;0;0;0;0
  [6]                                                                   15331;0
  -------
  seqinfo: 24 sequences from hg19 genome
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Three extra columns, &lt;em&gt;flank_txIds&lt;/em&gt;, &lt;em&gt;flank_geneIds&lt;/em&gt;,
&lt;em&gt;flank_gene_distances&lt;/em&gt; were added if parameter &lt;em&gt;addFlankGeneInfo&lt;/em&gt; is
set to &lt;em&gt;TRUE&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;genomic-annotation:211662300f8731372460bacaae7937b5&#34;&gt;Genomic annotation&lt;/h3&gt;

&lt;p&gt;The annotation column annotates the genomic location of a given peak.
Since some annotations overlap, they are assigned based on the following
priority.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Promoter (defined by tssRegion parameter)&lt;/li&gt;
&lt;li&gt;5&amp;rsquo; UTR&lt;/li&gt;
&lt;li&gt;3&amp;rsquo; UTR&lt;/li&gt;
&lt;li&gt;Exon&lt;/li&gt;
&lt;li&gt;Intron&lt;/li&gt;
&lt;li&gt;Downstream (immediate downstream of a gene, within 3kb)&lt;/li&gt;
&lt;li&gt;Distal Intergenic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have implemented &lt;a href=&#34;http://guangchuangyu.github.io/2014/04/visualization-methods-in-chipseeker/&#34;&gt;plotAnnoPie and plotAnnoBar&lt;/a&gt;
to visualize their distribution. I am wondering how to visualize the
annotation overlap and found &lt;a href=&#34;http://onetipperday.blogspot.hk/2014/09/how-to-draw-venn-pie-agram-multi-layer.html&#34;&gt;venn pie-agram&lt;/a&gt;
can partially solve this issue. It&amp;rsquo;s hard/impossible to visualize all
the overlap information within one vennpie plot.&lt;/p&gt;

&lt;p&gt;I employed the vennpie to ChIPseeker, and now with the vennpie function,
we can visualize some of the overlap annotations.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vennpie(anno)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/10/2014-09-30-142735_471x303_scrot.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In order to manage complex data, &lt;em&gt;annotatePeak&lt;/em&gt; now output a S4 object.
Users can use &lt;em&gt;as.GRanges&lt;/em&gt; to convert it to &lt;em&gt;as.GRanges&lt;/em&gt; object or
&lt;em&gt;as.data.frame&lt;/em&gt; to convert it to &lt;em&gt;data.frame&lt;/em&gt; and then the output can be
exported by &lt;em&gt;write.table&lt;/em&gt; function.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>enrichment map</title>
      <link>http://guangchuangyu.github.io/2014/08/enrichment-map/</link>
      <pubDate>Sun, 03 Aug 2014 12:48:15 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2014/08/enrichment-map/</guid>
      <description>&lt;p&gt;In &lt;a href=&#34;http://www.plob.org/&#34;&gt;PLOB&lt;/a&gt;&amp;rsquo;s QQ group, someone asked how to change
the color of enrichment map in &lt;a href=&#34;http://cytoscape.org/&#34;&gt;Cytoscape&lt;/a&gt;. I am
very curious how enrichment map can helps to interpret enrichment
results. It took me 2 hours to implement it using R and I am surprised
that the enrichment map is better than anticipated.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/08/Screenshot-2014-07-30-22.20.07.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now in the development version of
&lt;a href=&#34;http://bioconductor.org/packages/devel/bioc/html/clusterProfiler.html&#34;&gt;clusterProfiler&lt;/a&gt;,
&lt;a href=&#34;http://bioconductor.org/packages/devel/bioc/html/DOSE.html&#34;&gt;DOSE&lt;/a&gt;, and
&lt;a href=&#34;http://bioconductor.org/packages/devel/bioc/html/ReactomePA.html&#34;&gt;ReactomePA&lt;/a&gt;,
you can use &lt;strong&gt;&lt;em&gt;enrichmap&lt;/em&gt;&lt;/strong&gt; function to generate the enrichment map of
enrichment results obtained by &lt;a href=&#34;http://guangchuangyu.github.io/2012/04/enrichment-analysis/&#34;&gt;hypergeometric
test&lt;/a&gt; or gene set
enrichment analysis.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use ggplot2</title>
      <link>http://guangchuangyu.github.io/2014/05/use-ggplot2/</link>
      <pubDate>Sun, 11 May 2014 06:17:56 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2014/05/use-ggplot2/</guid>
      <description>

&lt;h3 id=&#34;why-use-ggplot2:c38c63fac86d2290b6bc01da39216614&#34;&gt;Why use ggplot2&lt;/h3&gt;

&lt;p&gt;ggplot2æ¯æè§è¿æhuman friendlyçç»å¾è½¯ä»¶ï¼è¿å¾çäºLeland
Wilkinsonå¨ä»çèä½ã&lt;a href=&#34;http://book.douban.com/subject/10123863/&#34;&gt;The Grammar of
Graphics&lt;/a&gt;ãä¸­æåºäºä¸å¥å¾å½¢è¯­æ³ï¼æå¾å½¢åç´ æ½è±¡æå¯ä»¥èªç±ç»åçæåï¼Hadley
Wickhamæè¿å¥æ³æ³å¨Rä¸­å®ç°ã&lt;/p&gt;

&lt;p&gt;ä¸ºä»ä¹è¦å­¦ä¹ ggplot2ï¼å¯ä»¥åè&lt;a href=&#34;http://book.douban.com/subject/24527091/&#34;&gt;ggplot2: æ°æ®åæä¸å¾å½¢èºæ¯&lt;/a&gt;ç&lt;a href=&#34;https://github.com/cosname/ggplot2-translation/blob/master/preface.md&#34;&gt;åºè¨&lt;/a&gt;ï¼btw:
å¨åºè¨çæåï¼æè¢«è´è°¢äºï¼ã&lt;/p&gt;

&lt;p&gt;Hadley
Wickhamä¹ç»åº&lt;a href=&#34;https://github.com/hadley/ggplot2/wiki/Why-use-ggplot2&#34;&gt;ä¸å çç±&lt;/a&gt;è®©æä»¬è¯´æèªå·±ï¼ææ³åè¡¥åä¸ç¹ï¼Hadley
Wickhamæ¯å­¦å»åºèº«çï¼åä¸ºå­¦çç©åºèº«çäººæä»ä¹çç±ä¸æ¯æå¢:)&lt;/p&gt;

&lt;p&gt;ggplot2åºæ¬è¦ç´ &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;æ°æ®ï¼Dataï¼åæ å°ï¼Mappingï¼&lt;/li&gt;
&lt;li&gt;å ä½å¯¹è±¡ï¼Geometricï¼&lt;/li&gt;
&lt;li&gt;æ å°ºï¼Scaleï¼&lt;/li&gt;
&lt;li&gt;ç»è®¡åæ¢ï¼Statisticsï¼&lt;/li&gt;
&lt;li&gt;åæ ç³»ç»ï¼Coordinanteï¼&lt;/li&gt;
&lt;li&gt;å¾å±ï¼Layerï¼&lt;/li&gt;
&lt;li&gt;åé¢ï¼Facetï¼&lt;/li&gt;
&lt;li&gt;ä¸»é¢ï¼Themeï¼&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;è¿éå°ä»è¿äºåºæ¬è¦ç´ å¯¹ggplot2è¿è¡ä»ç»ã&lt;/p&gt;

&lt;h3 id=&#34;æ°æ®-data-åæ å°-mapping:c38c63fac86d2290b6bc01da39216614&#34;&gt;æ°æ®ï¼Dataï¼åæ å°ï¼Mapping)&lt;/h3&gt;

&lt;p&gt;ä¸é¢ä»¥ä¸ä»½é»ç³çæ°æ®ä¸ºä¾ï¼è¿ä»½æ°æ®éå¸¸å¤§ï¼éæºåä¸ä¸ªå­éæ¥ç»å¾ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require(ggplot2)
data(diamonds)
set.seed(42)
small &amp;lt;- diamonds[sample(nrow(diamonds), 1000), ]
head(small)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##       carat       cut color clarity depth table price    x    y    z
## 49345  0.71 Very Good     H     SI1  62.5    60  2096 5.68 5.75 3.57
## 50545  0.79   Premium     H     SI1  61.8    59  2275 5.97 5.91 3.67
## 15434  1.03     Ideal     F     SI1  62.4    57  6178 6.48 6.44 4.03
## 44792  0.50     Ideal     E     VS2  62.2    54  1624 5.08 5.11 3.17
## 34614  0.27     Ideal     E     VS1  61.6    56   470 4.14 4.17 2.56
## 27998  0.30   Premium     E     VS2  61.7    58   658 4.32 4.34 2.67
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;summary(small)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##      carat              cut      color      clarity        depth     
##  Min.   :0.220   Fair     : 28   D:121   SI1    :258   Min.   :55.2  
##  1st Qu.:0.400   Good     : 88   E:186   VS2    :231   1st Qu.:61.0  
##  Median :0.710   Very Good:227   F:164   SI2    :175   Median :61.8  
##  Mean   :0.819   Premium  :257   G:216   VS1    :141   Mean   :61.7  
##  3rd Qu.:1.070   Ideal    :400   H:154   VVS2   : 91   3rd Qu.:62.5  
##  Max.   :2.660                   I:106   VVS1   : 67   Max.   :72.2  
##                                  J: 53   (Other): 37                 
##      table          price             x              y       
##  Min.   :50.1   Min.   :  342   Min.   :3.85   Min.   :3.84  
##  1st Qu.:56.0   1st Qu.:  990   1st Qu.:4.74   1st Qu.:4.76  
##  Median :57.0   Median : 2595   Median :5.75   Median :5.78  
##  Mean   :57.4   Mean   : 4111   Mean   :5.79   Mean   :5.79  
##  3rd Qu.:59.0   3rd Qu.: 5495   3rd Qu.:6.60   3rd Qu.:6.61  
##  Max.   :65.0   Max.   :18795   Max.   :8.83   Max.   :8.87  
##                                                              
##        z       
##  Min.   :2.33  
##  1st Qu.:2.92  
##  Median :3.55  
##  Mean   :3.57  
##  3rd Qu.:4.07  
##  Max.   :5.58  
## 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ç»å¾å®éä¸æ¯ææ°æ®ä¸­çåéæ å°å°å¾å½¢å±æ§ä¸ãä»¥åæ(carat)æ°ä¸ºXè½´åéï¼ä»·æ ¼(price)ä¸ºYè½´åéã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(data = small, mapping = aes(x = carat, y = price))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ä¸é¢è¿è¡ä»£ç ææ°æ®æ å°XYåæ è½´ä¸ï¼éè¦åè¯ggplot2ï¼è¿äºæ°æ®è¦æ å°æä»ä¹æ ·çå ä½å¯¹è±¡ï¼ä¸é¢ä»¥æ£ç¹ä¸ºä¾ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p + geom_point()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;å ä½å¯¹è±¡å°å¨ä¸é¢çå°èä»ç»ï¼è¿ä¸èï¼å³æ³¨çæ¯æ°æ®åå¾å½¢å±æ§ä¹é´çæ å°ã&lt;/p&gt;

&lt;p&gt;å¦ææ³å°åå·¥ï¼cutï¼æ å°å°å½¢ç¶å±æ§ãåªéè¦ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(data=small, mapping=aes(x=carat, y=price, shape=cut))
p+geom_point()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;åæ¯å¦ææ³å°é»ç³çé¢è²ï¼colorï¼æ å°é¢è²å±æ§ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(data=small, mapping=aes(x=carat, y=price, shape=cut, colour=color))
p+geom_point()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;å ä½å¯¹è±¡-geometric:c38c63fac86d2290b6bc01da39216614&#34;&gt;å ä½å¯¹è±¡ï¼Geometricï¼&lt;/h3&gt;

&lt;p&gt;å¨ä¸é¢çä¾å­ä¸­ï¼åç§å±æ§æ å°ç±ggplotå½æ°æ§è¡ï¼åªéè¦å ä¸ä¸ªå¾å±ï¼ä½¿ç¨geom_point()åè¯ggplotè¦ç»æ£ç¹ï¼äºæ¯ææçå±æ§é½æ å°å°æ£ç¹ä¸ã&lt;/p&gt;

&lt;p&gt;geom_point()å®æçå°±æ¯å ä½å¯¹è±¡çæ å°ï¼ggplot2æä¾äºåç§å ä½å¯¹è±¡æ å°ï¼å¦geom_histogramç¨äºç´æ¹å¾ï¼geom_barç¨äºç»æ±ç¶å¾ï¼geom_boxplotç¨äºç»ç®±å¼å¾ç­ç­ã&lt;/p&gt;

&lt;p&gt;ä¸åçå ä½å¯¹è±¡ï¼è¦æ±çå±æ§ä¼æäºä¸åï¼è¿äºå±æ§ä¹å¯ä»¥å¨å ä½å¯¹è±¡æ å°æ¶æä¾ï¼æ¯å¦ä¸ä¸å¾ï¼ä¹å¯ä»¥ç¨ä»¥ä¸è¯­æ³æ¥ç»ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(small)
p+geom_point(aes(x=carat, y=price, shape=cut, colour=color))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ggplot2æ¯æå¾å±ï¼æéå¸¸æä¸åçå¾å±ä¸­å±ç¨çæ å°æä¾ç»ggplotå½æ°ï¼èæä¸å ä½å¯¹è±¡æéè¦çæ å°åæ°æä¾ç»geom_xxxå½æ°ã&lt;/p&gt;

&lt;p&gt;è¿ä¸å°èæä»¬æ¥çä¸ä¸åç§å¸¸ç¨çå ä½å¯¹è±¡ã&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ç´æ¹å¾&lt;/strong&gt; ç´æ¹å¾æå®¹æï¼æä¾ä¸ä¸ªxåéï¼ç»åºæ°æ®çåå¸ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_histogram(aes(x=price))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;åæ ·å¯ä»¥æ ¹æ®å¦å¤çåéç»å®å¡«åé¢è²ï¼æ¯å¦æä¸åçåå·¥ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_histogram(aes(x=price, fill=cut))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ä¹å¯ä»¥å°å¶åå¼ï¼side-by-sideå°ç»ç´æ¹å¾ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_histogram(aes(x=price, fill=cut), position=&amp;quot;dodge&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;è¿å¯ä»¥ä½¿ç¨position=&amp;ldquo;fill&amp;rdquo;ï¼æç§ç¸å¯¹æ¯ä¾æ¥ç»ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_histogram(aes(x=price, fill=cut), position=&amp;quot;fill&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;æ±ç¶å¾&lt;/strong&gt;
æ±ç¶å¾éå¸¸éåäºç»åç±»åéãå¨è¿éä»¥éæåº¦ï¼clarityï¼åéä¸ºä¾ãæç§ä¸åéæåº¦çé»ç³çæ°ç®ç»æ±ç¶å¾ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_bar(aes(x=clarity))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig8.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;æ±ç¶å¾ä¸¤ä¸ªè¦ç´ ï¼ä¸ä¸ªæ¯åç±»åéï¼ä¸ä¸ªæ¯æ°ç®ï¼ä¹å°±æ¯æ±å­çé«åº¦ãæ°ç®å¨è¿éä¸ç¨æä¾ï¼å ä¸ºggplot2ä¼éè¿xåéè®¡ç®åä¸ªåç±»çæ°ç®ã&lt;/p&gt;

&lt;p&gt;å½ç¶ä½ æ³æä¾ä¹æ¯å¯ä»¥çï¼éè¿statåæ°ï¼å¯ä»¥è®©geom_barææå®é«åº¦ç»å¾ï¼æ¯å¦ä»¥ä¸ä»£ç ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot()+geom_bar(aes(x=c(LETTERS[1:3]),y=1:3), stat=&amp;quot;identity&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig24.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;æ±ç¶å¾åç´æ¹å¾æ¯å¾åçï¼ç´æ¹å¾æè¿ç»­åçæ°æ®æç§ä¸ä¸ªä¸ªç­é¿çååºï¼binï¼æ¥ååï¼ç¶åè®¡æ°ï¼ç»æ±ç¶å¾ãèæ±ç¶å¾æ¯åç±»æ°æ®ï¼æç±»å«è®¡æ°ãæä»¬å¯ä»¥ç¨åé¢ç´æ¹å¾çåæ°æ¥ç»side-by-sideçæ±ç¶å¾ï¼å¡«åé¢è²æèææ¯ä¾ç»å¾ï¼å®ä»¬æ¯é«åº¦ä¸è´çã&lt;/p&gt;

&lt;p&gt;æ±ç¶å¾æ¯ç¨æ¥è¡¨ç¤ºè®¡æ°æ°æ®çï¼ä½å¨çç©çå´è¢«ç»å¸¸æ¿æ¥è¡¨ç¤ºåå¼ï¼å ä¸è¯¯å·®æ¥è¡¨ç¤ºæ°æ®åå¸ï¼è¿å¯ä»¥éå¸¸å¾å±æ¥å®ç°ï¼æå°å¨å¾å±ä¸èä¸­ç»åºå®ä¾ã&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;å¯åº¦å½æ°å¾&lt;/strong&gt;
è¯´å°ç´æ¹å¾ï¼å°±ä¸å¾ä¸è¯´å¯åº¦å½æ°å¾ï¼æ°æ®åæ å°åç´æ¹å¾æ¯ä¸æ ·çï¼å¯ä¸ä¸åçæ¯å ä½å¯¹è±¡ï¼geom_histogramåè¯ggplotè¦ç»ç´æ¹å¾ï¼ègeom_densityåè¯´æä»¬è¦ç»å¯åº¦å½æ°å¾ï¼å¨æä»¬çæåé¢è¯­æ³çæåµä¸ï¼å¾å®¹æç»åºï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_density(aes(x=price, colour=cut))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig9.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_density(aes(x=price,fill=clarity))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig10.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;colouråæ°æå®çæ¯æ²çº¿çé¢è²ï¼èfillæ¯å¾æ²çº¿ä¸é¢å¡«åé¢è²ã&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ç®±å¼å¾&lt;/strong&gt;
æ°æ®éæ¯è¾å¤§çæ¶åï¼ç¨ç´æ¹å¾åå¯åº¦å½æ°å¾æ¯è¡¨ç¤ºæ°æ®åå¸çå¥½æ¹æ³ï¼èå¨æ°æ®éè¾å°çæ¶åï¼æ¯å¦å¾å¤ççç©å®éªï¼å¾å¤æ¶åå¤§å®¶é½æ¯ä½¿ç¨æ±ç¶å¾+errorbarçå½¢å¼æ¥è¡¨ç¤ºï¼ä¸è¿è¿ç§æ¹æ³çä¿¡æ¯ééå¸¸ä½ï¼è¢«&lt;a href=&#34;http://guangchuangyu.github.io/2014/03/boxplot/&#34;&gt;Nature Methodsåæ§½&lt;/a&gt;ï¼è¿ç§æåµæ¨èä½¿ç¨boxplotã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_boxplot(aes(x=cut, y=price,fill=color))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;geom_boxplotå°æ°æ®æ å°å°ç®±å¼å¾ä¸ï¼ä¸é¢çä»£ç ï¼æä»¬åºè¯¥å¾çæäºï¼æåå·¥(cut)åç±»ï¼å¯¹ä»·æ ¼(price)åéç»ç®±å¼å¾ï¼ååå¼æç§coloråéå¡«åé¢è²ã&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig11.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ggplot2æä¾äºå¾å¤çgeom_xxxå½æ°ï¼å¯ä»¥æ»¡è¶³æä»¬å¯¹åç§å¾å½¢ç»å¶çéæ±ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;geom_abline     geom_area   
geom_bar        geom_bin2d
geom_blank      geom_boxplot    
geom_contour    geom_crossbar
geom_density    geom_density2d  
geom_dotplot    geom_errorbar
geom_errorbarh  geom_freqpoly   
geom_hex        geom_histogram
geom_hline      geom_jitter     
geom_line       geom_linerange
geom_map        geom_path   
geom_point      geom_pointrange
geom_polygon    geom_quantile   
geom_raster     geom_rect
geom_ribbon     geom_rug    
geom_segment    geom_smooth
geom_step       geom_text   
geom_tile       geom_violin
geom_vline
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;æ å°º-scale:c38c63fac86d2290b6bc01da39216614&#34;&gt;æ å°ºï¼Scaleï¼&lt;/h3&gt;

&lt;p&gt;åé¢æä»¬å·²ç»çå°äºï¼ç»å¾å°±æ¯å¨åæ å°ï¼ä¸ç®¡æ¯æ å°å°ä¸åçå ä½å¯¹è±¡ä¸ï¼è¿æ¯æ å°åç§å¾å½¢å±æ§ãè¿ä¸å°èä»ç»æ å°ºï¼å¨å¯¹å¾å½¢å±æ§è¿è¡æ å°ä¹åï¼ä½¿ç¨æ å°ºå¯ä»¥æ§å¶è¿äºå±æ§çæ¾ç¤ºæ¹å¼ï¼æ¯å¦åæ å»åº¦ï¼å¯è½éè¿æ å°ºï¼å°åæ è¿è¡å¯¹æ°åæ¢ï¼æ¯å¦é¢è²å±æ§ï¼ä¹å¯ä»¥éè¿æ å°ºï¼è¿è¡æ¹åã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_point(aes(x=carat, y=price, shape=cut, colour=color))+scale_y_log10()+scale_colour_manual(values=rainbow(7))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig12.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ä»¥æ°æ®ï¼Dataï¼åæ å°ï¼Mapping)ä¸èä¸­æç»æ£ç¹å¾ä¸ºä¾ï¼å°Yè½´åæ è¿è¡log10åæ¢ï¼åèªå·±å®ä¹é¢è²ä¸ºå½©è¹è²ã&lt;/p&gt;

&lt;h3 id=&#34;ç»è®¡åæ¢-statistics:c38c63fac86d2290b6bc01da39216614&#34;&gt;ç»è®¡åæ¢ï¼Statisticsï¼&lt;/h3&gt;

&lt;p&gt;ç»è®¡åæ¢å¯¹åå§æ°æ®è¿è¡æç§è®¡ç®ï¼ç¶åå¨å¾ä¸è¡¨ç¤ºåºæ¥ï¼ä¾å¦å¯¹æ£ç¹å¾ä¸å ä¸æ¡åå½çº¿ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small, aes(x=carat, y=price))+geom_point()+scale_y_log10()+stat_smooth()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig13.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;è¿éå°±ä¸æé¢è²ãåå·¥æ¥åäºï¼ä¸ç¶ggplotä¼æä¸åçåç±»åéåå«ååå½ï¼å¾å°±å¾ä¹±ï¼å¦ææä»¬éè¦è¿æ ·åï¼æä»¬å¯ä»¥ä½¿ç¨åé¢ï¼è¿ä¸ªå°å¨åé¢ä»ç»ã&lt;/p&gt;

&lt;p&gt;è¿éï¼aesææä¾çåæ°ï¼å°±éè¿ggplotæä¾ï¼èä¸æ¯æä¾ç»geom_pointï¼å ä¸ºggplotéçåæ°ï¼ç¸å½äºå¨å±åéï¼geom_point()åstat_smooth()é½ç¥éx,yçæ å°ï¼å¦æåªæä¾ç»geom_point()ï¼åç¸å½äºæ¯å±é¨åéï¼geom_pointç¥éè¿ç§æ å°ï¼èstat_smoothä¸ç¥éï¼å½ç¶ä½ åç»stat_smoothä¹æä¾x,yçæ å°ï¼ä¸è¿å±ç¨çæ å°ï¼è¿æ¯æä¾ç»ggplotå¥½ã
ggplot2æä¾äºå¤ç§ç»è®¡åæ¢æ¹å¼ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stat_abline       stat_contour      stat_identity     stat_summary
stat_bin          stat_density      stat_qq           stat_summary2d
stat_bin2d        stat_density2d    stat_quantile     stat_summary_hex
stat_bindot       stat_ecdf         stat_smooth       stat_unique
stat_binhex       stat_function     stat_spoke        stat_vline
stat_boxplot      stat_hline        stat_sum          stat_ydensity
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ç»è®¡åæ¢æ¯éå¸¸éè¦çåè½ï¼æä»¬å¯ä»¥èªå·±åå½æ°ï¼åºäºåå§æ°æ®åæç§è®¡ç®ï¼å¹¶å¨å¾ä¸è¡¨ç°åºæ¥ï¼ä¹å¯ä»¥éè¿å®æ¹ågeom_xxxå½æ°ç»å¾çé»è®¤ç»è®¡åæ°ã
æ¯å¦æå¨&lt;a href=&#34;http://www.sciencedirect.com/science/article/pii/S1874391912007567&#34;&gt;Proteomic investigation of the interactome of FMNL1 in hematopoietic cells unveils a role in calcium-dependent membrane plasticity&lt;/a&gt;çå¾ä¸ä¸­ï¼å°±æboxplotçä¸­ä½çº¿æ¿æ¢æäºå¹³åå¼æ¥ä½å¾ã&lt;/p&gt;

&lt;h3 id=&#34;åæ ç³»ç»-coordinante:c38c63fac86d2290b6bc01da39216614&#34;&gt;åæ ç³»ç»ï¼Coordinanteï¼&lt;/h3&gt;

&lt;p&gt;åæ ç³»ç»æ§å¶åæ è½´ï¼å¯ä»¥è¿è¡åæ¢ï¼ä¾å¦XYè½´ç¿»è½¬ï¼ç¬å¡å°åæ åæåæ è½¬æ¢ï¼ä»¥æ»¡è¶³æä»¬çåç§éæ±ã&lt;/p&gt;

&lt;p&gt;åæ è½´ç¿»è½¬ç±coord_flip()å®ç°&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_bar(aes(x=cut, fill=cut))+coord_flip()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig14.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;èè½¬æ¢ææåæ å¯ä»¥ç±coord_polar()å®ç°ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_bar(aes(x=factor(1), fill=cut))+coord_polar(theta=&amp;quot;y&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2.fig15.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;è¿ä¹æ¯ä¸ºä»ä¹ä¹åä»ç»å¸¸ç¨å¾å½¢ç»æ³æ¶æ²¡ææåé¥¼å¾çåå ï¼é¥¼å¾å®éä¸å°±æ¯æ±ç¶å¾ï¼åªä¸è¿æ¯ä½¿ç¨æåæ èå·²ï¼æ±ç¶å¾çé«åº¦ï¼å¯¹åºäºé¥¼å¾çå¼§åº¦ï¼é¥¼å¾å¹¶ä¸æ¨èï¼å ä¸ºäººç±»çç¼çæ¯è¾å¼§åº¦çè½åæ¯ä¸ä¸æ¯è¾é«åº¦ï¼æ±ç¶å¾ï¼&lt;/p&gt;

&lt;p&gt;è¿å¯ä»¥ç»é¶å¿å¾ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_bar(aes(x=factor(1), fill=cut))+coord_polar()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig16.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ä»¥åé£ç«ç°å¾(windrose)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_bar(aes(x=clarity, fill=cut))+coord_polar()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig17.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;å¾å±-layer:c38c63fac86d2290b6bc01da39216614&#34;&gt;å¾å±ï¼Layerï¼&lt;/h3&gt;

&lt;p&gt;photoshopæµè¡çåå å¨äºPS
3.0æ¶å¼å¥å¾å±çæ¦å¿µï¼ggplotççBä¹å¤å¨äºä½¿ç¨+å·æ¥å å å¾å±ï¼è¿å ªç§°æ¯æ³åç¼ç¨çå¸èã
å¨åé¢æ£ç¹å¾ä¸ï¼æä»¬å·²ç»è§è¯è¿ï¼å ä¸äºä¸ä¸ªåå½çº¿æåçå¾å±ã&lt;/p&gt;

&lt;p&gt;æäºå¾å±çæ¦å¿µï¼ä½¿ç¨ggplotç»èµ·å¾æ¥ï¼å°±æ´å å¾å¿åºæã&lt;/p&gt;

&lt;p&gt;åä¸ºå¾å±çä¸ä¸ªå¾å¥½çä¾å­æ¯&lt;a href=&#34;http://guangchuangyu.github.io/2011/08/the-batman-equation/&#34;&gt;èè ä¾ logo&lt;/a&gt;ï¼batman
logoç±6ä¸ªå½æ°ç»æï¼å¨ä¸é¢çä¾å­ä¸­ï¼æåç»ç¬¬ä¸ä¸ªå½æ°ï¼ä¹ååå ä¸ä¸ªå¾å±ç»ç¬¬äºä¸ªå½æ°ï¼ä¸æ­éå¤è¿ä¸è¿ç¨ï¼ç´å°å­ä¸ªå½æ°å¨é¨ç»å¥½ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require(ggplot2)
f1 &amp;lt;- function(x) {
    y1 &amp;lt;- 3*sqrt(1-(x/7)^2)
    y2 &amp;lt;- -3*sqrt(1-(x/7)^2)
    y &amp;lt;- c(y1,y2)
    d &amp;lt;- data.frame(x=x,y=y)
    d &amp;lt;- d[d$y &amp;gt; -3*sqrt(33)/7,]
    return(d)
}
 
x1 &amp;lt;- c(seq(3, 7, 0.001), seq(-7, -3, 0.001))
d1 &amp;lt;- f1(x1)
p1 &amp;lt;- ggplot(d1,aes(x,y)) + geom_point(color=&amp;quot;red&amp;quot;) +xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;) + theme_bw()
 
x2 &amp;lt;- seq(-4,4, 0.001)
y2 &amp;lt;- abs(x2/2)-(3*sqrt(33)-7)*x2^2/112-3 + sqrt(1-(abs(abs(x2)-2)-1)^2)
d2 &amp;lt;- data.frame(x2=x2, y2=y2)
p2 &amp;lt;- p1 + geom_point(data=d2, aes(x=x2,y=y2), color=&amp;quot;yellow&amp;quot;)
 
x3 &amp;lt;- c(seq(0.75,1,0.001), seq(-1,-0.75,0.001))
y3 &amp;lt;- 9-8*abs(x3)
d3 &amp;lt;- data.frame(x3=x3, y3=y3)
p3 &amp;lt;- p2+geom_point(data=d3, aes(x=x3,y=y3), color=&amp;quot;green&amp;quot;)
 
x4 &amp;lt;- c(seq(0.5,0.75,0.001), seq(-0.75,-0.5,0.001))
y4 &amp;lt;- 3*abs(x4)+0.75
d4 &amp;lt;- data.frame(x4=x4,y4=y4)
p4 &amp;lt;- p3+geom_point(data=d4, aes(x=x4,y=y4), color=&amp;quot;steelblue&amp;quot;)
  
x5 &amp;lt;- seq(-0.5,0.5,0.001)
y5 &amp;lt;- rep(2.25,length(x5))
d5 &amp;lt;- data.frame(x5=x5,y5=y5)
p5 &amp;lt;- p4+geom_point(data=d5, aes(x=x5,y=y5))
 
x6 &amp;lt;- c(seq(-3,-1,0.001), seq(1,3,0.001))
y6 &amp;lt;- 6 * sqrt(10)/7 +
    (1.5 - 0.5 * abs(x6)) * sqrt(abs(abs(x6)-1)/(abs(x6)-1)) -
    6 * sqrt(10) * sqrt(4-(abs(x6)-1)^2)/14
d6 &amp;lt;- data.frame(x6=x6,y6=y6)
p6 &amp;lt;- p5+geom_point(data=d6,aes(x=x6,y=y6), colour=&amp;quot;blue&amp;quot;)

multiplot &amp;lt;- function (..., plotlist = NULL, cols = 1, layout = NULL) {
    plots &amp;lt;- c(list(...), plotlist)
    numPlots = length(plots)
    if (is.null(layout)) {
        layout &amp;lt;- matrix(seq(1, cols * ceiling(numPlots/cols)),
            ncol = cols, nrow = ceiling(numPlots/cols))
    }
    if (numPlots == 1) {
        print(plots[[1]])
    }
    else {
        grid.newpage()
        pushViewport(viewport(layout = grid.layout(nrow(layout),
            ncol(layout))))
        for (i in 1:numPlots) {
            matchidx &amp;lt;- as.data.frame(which(layout == i, arr.ind = TRUE))
            print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                layout.pos.col = matchidx$col))
        }
    }
}

multiplot(p1,p2,p3,p4,p5,p6, cols=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_batman.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;åé¢-facet:c38c63fac86d2290b6bc01da39216614&#34;&gt;åé¢ï¼Facetï¼&lt;/h3&gt;

&lt;p&gt;å¨ã&lt;a href=&#34;http://book.douban.com/subject/24527091/&#34;&gt;ggplot2: æ°æ®åæä¸å¾å½¢èºæ¯&lt;/a&gt;ãä¸ä¹¦çç¿»è¯ä¸­ï¼ä¸å¼å§è¯èæfacetç¿»è¯æåçï¼æå¨æ ¡ç¨¿çæ¶ååç°äºï¼ç»ä»ä»¬åä¿¡ï¼æ¨èç¿»è¯æåé¢ï¼å¦ææ¯sliceè¿ä¸ªè¯ï¼ç¿»è¯æåçåæ¯å¾ç²¾åï¼BSDçç¡¬çååºå°±å«sliceï¼ä½facetä»è¯æºä¸çå°±æ¯å°è¸çææï¼ç¿»è¯æåé¢æå°ä½ãç»ä»ä»¬åä¿¡çæ¶åï¼æè¿ä¸é¨æ¥äº&lt;a href=&#34;http://dict.cnki.net/&#34;&gt;CNKIç¿»è¯å©æ&lt;/a&gt;ï¼åç°è¿è¯å¨ä¿¡æ¯å­¦ä¸­ï¼ç¿»æåé¢æ©å·²æ¯åºå®çãææè§è¿æ¯æå¯¹è¿æ¬ä¹¦ç¿»è¯çæå¤§è´¡ç®ï¼æ ¡ç¨¿è¿ç¨ä¸­åç°çå°éå°é®é¢è¿æ¯ä¸ä¸è¿ä¸ªå³é®è¯ææçææ¡ä¸ã&lt;/p&gt;

&lt;p&gt;åé¢å¯ä»¥è®©æä»¬æç§æç§ç»å®çæ¡ä»¶ï¼å¯¹æ°æ®è¿è¡åç»ï¼ç¶ååå«ç»å¾ã
å¨ç»è®¡åæ¢ä¸èä¸­ï¼æå°å¦ææåå·¥åç»ä½åå½çº¿ï¼æ¾ç¶å¾ä¼å¾ä¹±ï¼æäºåé¢åè½ï¼æä»¬å¯ä»¥åå«ä½å¾ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small, aes(x=carat, y=price))+geom_point(aes(colour=cut))+scale_y_log10() +facet_wrap(~cut)+stat_smooth()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig18.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;ä¸»é¢-theme:c38c63fac86d2290b6bc01da39216614&#34;&gt;ä¸»é¢ï¼Themeï¼&lt;/h3&gt;

&lt;p&gt;éè¿ggplotç»å¾ä¹åï¼æä»¬å¯è½è¿éè¦å¯¹å¾è¿è¡å®å¶ï¼åtitle, xlab,
ylabè¿äºé«é¢éè¦ç¨å°çï¼èªä¸ç¨è¯´ï¼ggplot2æä¾äºggtitle(),
xlab()åylab()æ¥å®ç°ã æ¯å¦ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(small)+geom_boxplot(aes(x=cut, y=price,fill=color))
p + ggtitle(&amp;quot;Price vs Cut&amp;quot;)+xlab(&amp;quot;Cut&amp;quot;)+ylab(&amp;quot;Price&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2.fig19.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ä½æ¯è¿ä¸ªè¿è¿æ»¡è¶³ä¸äºéæ±ï¼æä»¬éè¦æ¹åå­ä½ï¼å­ä½å¤§å°ï¼åæ è½´ï¼èæ¯ç­åç§åç´ ï¼è¿éè¦éè¿theme()å½æ°æ¥å®æã&lt;/p&gt;

&lt;p&gt;ggplot2æä¾ä¸äºå·²ç»åå¥½çä¸»é¢ï¼æ¯å¦&lt;code&gt;theme_grey()&lt;/code&gt;ä¸ºé»è®¤ä¸»é¢ï¼æç»å¸¸ç¨ç&lt;code&gt;theme_bw()&lt;/code&gt;ä¸ºç½è²èæ¯çä¸»é¢ï¼è¿æ&lt;code&gt;theme_classic()&lt;/code&gt;ä¸»é¢ï¼åRçåºç¡ç»å¾å½æ°è¾åã&lt;/p&gt;

&lt;p&gt;å«å¤ggthemesåæä¾äºä¸äºä¸»é¢å¯ä¾ä½¿ç¨ï¼åæ¬ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;theme_economist theme_economist_white
theme_wsj       theme_excel
theme_few       theme_foundation
theme_igray     theme_solarized
theme_stata     theme_tufte
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;require(ggthemes)
p + theme_wsj()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig20.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;å¨2013å¹´åè¡¨çæç« &lt;a href=&#34;http://pubs.rsc.org/en/content/articlelanding/2013/mt/c3mt00126a#!divAbstract&#34;&gt;Putative cobalt- and nickel-binding proteins and motifs in Streptococcus pneumoniae&lt;/a&gt;ä¸­çå¾3å°±æ¯ä½¿ç¨&lt;code&gt;theme_stata&lt;/code&gt;æ¥ç»çã&lt;/p&gt;

&lt;p&gt;è³äºå¦ä½æ¹åè¿äºåç´ ï¼æè§å¾æä¹å&lt;a href=&#34;http://guangchuangyu.github.io/2012/02/draw-chinese-character-jiong-using-ggplot2/&#34;&gt;ç»å§å­çåæ&lt;/a&gt;å¯ä»¥åä¸ºä¾å­ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;f &amp;lt;- function(x) 1/(x^2-1)
x &amp;lt;- seq(-3,3, by=0.001)
y &amp;lt;- f(x)
d &amp;lt;- data.frame(x=x,y=y)
 
p &amp;lt;- ggplot()
p &amp;lt;- p+geom_rect(fill = &amp;quot;white&amp;quot;,color=&amp;quot;black&amp;quot;,size=3,
aes(NULL, NULL,xmin=-3, xmax=3,
ymin=-3,ymax=3, alpha=0.1))
 
p &amp;lt;- p + geom_line(data=d, aes(x,y), size=3)+ylim(-3,3)
theme_null &amp;lt;- function() {
    theme_bw() %+replace%
    theme(axis.text.x=element_blank(),
    axis.text.y=element_blank(),
    legend.position=&amp;quot;none&amp;quot;,
    panel.grid.minor=element_blank(),
    panel.grid.major=element_blank(),
    panel.background=element_blank(),
    axis.ticks=element_blank(),
    panel.border=element_blank())
}
 
p+theme_null()+xlab(&amp;quot;&amp;quot;)+ylab(&amp;quot;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2012/02/jiong.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;è¯¦ç»çè¯´æï¼å¯ä»¥åè?themeçå¸®å©ææ¡£ã&lt;/p&gt;

&lt;h3 id=&#34;äºç»´å¯åº¦å¾:c38c63fac86d2290b6bc01da39216614&#34;&gt;äºç»´å¯åº¦å¾&lt;/h3&gt;

&lt;p&gt;å¨è¿ä¸ªææ¡£éï¼ä¸ºäºä½å¾æ¹ä¾¿ï¼æä»¬ä½¿ç¨diamondsæ°æ®éçä¸ä¸ªå­éï¼å¦æä½¿ç¨å¨éï¼æ°æ®éå¤ªå¤§ï¼ç»åºæ¥æ£ç¹å°±ç³äºï¼è¿ç§æåµå¯ä»¥ä½¿ç¨äºç»´å¯åº¦åæ¥åç°ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(diamonds, aes(carat, price))+ stat_density2d(aes(fill = ..level..), geom=&amp;quot;polygon&amp;quot;)+ scale_fill_continuous(high=&#39;darkred&#39;,low=&#39;darkgreen&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2.fig22.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;ggplot2å®ä¾:c38c63fac86d2290b6bc01da39216614&#34;&gt;ggplot2å®ä¾&lt;/h3&gt;

&lt;p&gt;è´è¶å¾ï¼è¯¦è§ãModern Applied Statistics with S-PLUSãç¬¬ä¸ç« ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;theta &amp;lt;- seq(0,24*pi, len=2000)
radius &amp;lt;- exp(cos(theta)) - 2*cos(4*theta) + sin(theta/12)^5
dd &amp;lt;- data.frame(x=radius*sin(theta), y=radius*cos(theta))
ggplot(dd, aes(x, y))+geom_path()+theme_null()+xlab(&amp;quot;&amp;quot;)+ylab(&amp;quot;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig25.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;è¿ä¸ªå¾ï¼ææ³å±ç¤ºçæ¯å¯¹ç»èçä¿®æ¹ä¸ï¼å¨ç»å§å­çæ¶åï¼æç»å¸ä¸çåç´ é½ç»æ¸æ¥äºï¼ææå®å®ä¹ä¸ºtheme_nullä¸»é¢ï¼å¨è¿éï¼ç´æ¥åºç¨ï¼æä»¬å¯ä»¥å½¢æèªå·±çç»å¾é£æ ¼ï¼å¹¶ååºèªå·±çä¸»é¢å½æ°åºå®ä¸æ¥ã&lt;/p&gt;

&lt;p&gt;æåä»¥çç©çä¸­å¸¸ç¨çæ±ç¶å¾+è¯¯å·®å¾ä¸ºå®ä¾ï¼å±ç¤ºggplot2éå¸¸çµæ´»çå¾å±ãä»¥æ2011å¹´åè¡¨çæç« &lt;a href=&#34;http://guangchuangyu.github.io/2010/11/phosphoproteome-profile-of-human-lung-cancer-cell-line-a549/&#34;&gt;Phosphoproteome
profile of human lung cancer cell line
A549&lt;/a&gt;ä¸­çwesternblotæ°æ®ä¸ºä¾ãè¿ä¸ªå®ä¾å±ç¤ºäºå¾å±ï¼æ å°ºï¼ä¸»é¢ï¼æ³¨éååç§ç»èå¾®è°å¤ç§åç´ ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Normal &amp;lt;- c(0.83, 0.79, 0.99, 0.69)
Cancer &amp;lt;- c(0.56, 0.56, 0.64, 0.52)
m &amp;lt;- c(mean(Normal), mean(Cancer))
s &amp;lt;- c(sd(Normal), sd(Cancer))
d &amp;lt;- data.frame(V=c(&amp;quot;Normal&amp;quot;, &amp;quot;Cancer&amp;quot;), mean=m, sd=s)
d$V &amp;lt;- factor(d$V, levels=c(&amp;quot;Normal&amp;quot;, &amp;quot;Cancer&amp;quot;))

p &amp;lt;- ggplot(d, aes(V, mean, fill=V, width=.5))
p &amp;lt;- p+geom_errorbar(aes(ymin=mean, ymax=mean+sd, width=.2), 
                     position=position_dodge(width=.8))
p &amp;lt;- p + geom_bar(stat=&amp;quot;identity&amp;quot;, position=position_dodge(width=.8), colour=&amp;quot;black&amp;quot;)
p &amp;lt;- p + scale_fill_manual(values=c(&amp;quot;grey80&amp;quot;, &amp;quot;white&amp;quot;))
p &amp;lt;- p + theme_bw() +theme(legend.position=&amp;quot;none&amp;quot;) + xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;)
p &amp;lt;- p + theme(axis.text.x = element_text(face=&amp;quot;bold&amp;quot;, size=12), 
               axis.text.y = element_text(face=&amp;quot;bold&amp;quot;, size=12))
p &amp;lt;- p+scale_y_continuous(expand=c(0,0), limits=c(0, 1.2), breaks=seq(0, 1.2, by=.2))
p &amp;lt;- p+geom_segment(aes(x=1, y=.98, xend=1, yend=1.1))
p &amp;lt;- p+geom_segment(aes(x=2, y=.65, xend=2, yend=1.1))
p &amp;lt;- p+geom_segment(aes(x=1, y=1.1, xend=2, yend=1.1))
p &amp;lt;- p + annotate(&amp;quot;text&amp;quot;, x=1.5, y=1.08, label=&amp;quot;*&amp;quot;)
print(p)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_26.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;æ´å¤å®ä¾ï¼å¯ä»¥åèæä½¿ç¨&lt;a href=&#34;http://guangchuangyu.github.io/2011/08/ggplot2-version-of-figures-in-25-recipes-for-getting-started-with-r/&#34;&gt;ggplot2å®ç°&lt;25 Recipes for Getting Started with R&gt;ä¸ä¹¦ä¸­çææå¾ç&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>visualization methods in ChIPseeker</title>
      <link>http://guangchuangyu.github.io/2014/04/visualization-methods-in-chipseeker/</link>
      <pubDate>Wed, 30 Apr 2014 06:33:41 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2014/04/visualization-methods-in-chipseeker/</guid>
      <description>

&lt;p&gt;After two weeks developed, I have added/updated some plot functions in
&lt;a href=&#34;http://bioconductor.org/packages/release/bioc/html/ChIPseeker.html&#34;&gt;ChIPseeker&lt;/a&gt;
(version &amp;gt;=1.0.1).&lt;/p&gt;

&lt;h3 id=&#34;chip-peaks-over-chromosomes:6a8a65de687a162a83f53f5c5a317279&#34;&gt;ChIP peaks over Chromosomes&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; files=getSampleFiles()
&amp;gt; peak=readPeakFile(files[[4]])
&amp;gt; peak
GRanges object with 1331 ranges and 2 metadata columns:
         seqnames                 ranges strand   |             V4        V5
                               |        
     [1]     chr1     [ 815092,  817883]      *   |    MACS_peak_1    295.76
     [2]     chr1     [1243287, 1244338]      *   |    MACS_peak_2     63.19
     [3]     chr1     [2979976, 2981228]      *   |    MACS_peak_3    100.16
     [4]     chr1     [3566181, 3567876]      *   |    MACS_peak_4    558.89
     [5]     chr1     [3816545, 3818111]      *   |    MACS_peak_5     57.57
     ...      ...                    ...    ... ...            ...       ...
  [1327]     chrX [135244782, 135245821]      *   | MACS_peak_1327     55.54
  [1328]     chrX [139171963, 139173506]      *   | MACS_peak_1328    270.19
  [1329]     chrX [139583953, 139586126]      *   | MACS_peak_1329    918.73
  [1330]     chrX [139592001, 139593238]      *   | MACS_peak_1330    210.88
  [1331]     chrY [ 13845133,  13845777]      *   | MACS_peak_1331     58.39
  ---
  seqlengths:
    chr1 chr10 chr11 chr12 chr13 chr14 ...  chr6  chr7  chr8  chr9  chrX  chrY
      NA    NA    NA    NA    NA    NA ...    NA    NA    NA    NA    NA    NA
&amp;gt; covplot(peak, weightCol=&amp;quot;V5&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/04/chrCoverage.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;heatmap-of-chip-binding-to-tss-regions:6a8a65de687a162a83f53f5c5a317279&#34;&gt;Heatmap of ChIP binding to TSS regions&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;require(TxDb.Hsapiens.UCSC.hg19.knownGene)
txdb &amp;lt;- TxDb.Hsapiens.UCSC.hg19.knownGene
peakHeatmap(files, weightCol=&amp;quot;V5&amp;quot;, TxDb=txdb, upstream=3000, downstream=3000, color=rainbow(length(files)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/04/peakHeat2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;average-profile-of-chip-peaks-binding-to-tss-region:6a8a65de687a162a83f53f5c5a317279&#34;&gt;Average Profile of ChIP peaks binding to TSS region&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;plotAvgProf(files, TranscriptDb=txdb, weightCol=&amp;quot;V5&amp;quot;, upstream=3000, downstream=3000)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/04/avgProf2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;genomic-annotation:6a8a65de687a162a83f53f5c5a317279&#34;&gt;Genomic Annotation&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;peakAnnoList=lapply(files, annotatePeak)
plotAnnoPie(peakAnnoList[[1]])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/04/pieAnno.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;plotAnnoBar(peakAnnoList)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/04/barAnno.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;distance-to-tss:6a8a65de687a162a83f53f5c5a317279&#34;&gt;Distance to TSS&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;plotDistToTSS(peakAnnoList)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/04/distTSS.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;overlap-of-peak-sets:6a8a65de687a162a83f53f5c5a317279&#34;&gt;Overlap of peak sets&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;genes= lapply(peakAnnoList, function(i) as.data.frame(i)$geneId)
vennplot(genes)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/04/venn.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In the future version, ChIPseeker will support statistical comparison
among ChIP peak sets, and incorporate open access database GEO for users
to compare their own dataset to those deposited in database. Significant
overlap among peak sets can be used to infer cooperative regulation.
This feature will soon be available.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>boxplot</title>
      <link>http://guangchuangyu.github.io/2014/03/boxplot/</link>
      <pubDate>Tue, 04 Mar 2014 12:23:16 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2014/03/boxplot/</guid>
      <description>&lt;p&gt;çç©åå¾å¤äººç»å¾åªä¼ç´æ¹å¾ï¼ç»è®¡åªä¼Tæ£éªï¼å¨æ¨å¤§è§è¿å¤ªå¤çå­¦çè¿Tæ£éªé½ä¸ä¼ï¼åä¸æ¸SEMåSDçå·®å«ï¼ä¹ä¸æ¸æ¥Tæ£éªé£å ä¸ªç®ååæ°çå«ä¹ãæåç»è®¡ç¬è®°ä¹æ¯å ä¸ºä¸æ³éå¤æ§å°è·å­¦çè®²è§£Tæ£éªã&lt;/p&gt;

&lt;p&gt;BarplotåT testä¸æ ·æ®éèæµè¡ï¼barplotéåäºè¡¨ç¤ºè®¡æ°æ°æ®åæ¯ä¾ï¼æ¾ç¤ºæ¯ä¾ä¹å¯ä»¥ç¨pie
plotï¼ä½ç´æ¹å¾æ¯é¥¼å¾è¦å¥½ï¼å ä¸ºäººç±»çç¼çéåäºæ¯è¾é«åº¦ï¼èä¸æ¯å¼§åº¦ã&lt;/p&gt;

&lt;p&gt;å¤åæ¶åçç©å­¦æ°æ®å¹¶éç®åçè®¡æ°æ°æ®ï¼å¯¹äºæµéæ°æ®ï¼å¨å±ç¤ºæ°æ®åå¸æ¶ï¼å¾å¤äººä¼ä½¿ç¨ä»ä»¬çæçbarplotï¼ç¨é«åº¦æ¥è¡¨ç¤ºmeanï¼ç¶ååå ä¸errorbarï¼è¿æ ·å±ç¤ºæ°æ®ï¼ä¿¡æ¯éæ¯éå¸¸ä½çï¼ä½¿ç¨boxplotè½å¤æä¾æ´å¤çæ°æ®åå¸ä¿¡æ¯ï¼è½æ´å¥½å°å±ç°æ°æ®ï¼ä½å¯è½å¾å¤äººåªä¼å¨exceléç»barplotï¼Nature
Methods
2013å¹´çæç« ä¸­æ100ä¸ªbarplotå¾ï¼èåªæ20ä¸ªboxplotå¾ï¼ä»è¿éå°±å¯ä»¥çåºæ¥ï¼ç¨boxplotçäººè¿è¿æ²¡æbarplotå¤ï¼äºæ¯NPGæäºï¼åäºä¸¤ç¯ä¸æ æç« &lt;a href=&#34;http://www.nature.com/nmeth/journal/v11/n2/full/nmeth.2807.html&#34;&gt;Points of View: Bar charts and box plots&lt;/a&gt;å&lt;a href=&#34;http://www.nature.com/nmeth/journal/v11/n2/full/nmeth.2813.html&#34;&gt;Points of Significance: Visualizing samples with box plots&lt;/a&gt;å¹¶ä¸åè¡¨äºä¸ç¯&lt;a href=&#34;http://www.nature.com/nmeth/journal/v11/n2/full/nmeth.2811.html&#34;&gt;BoxPlotR: a web tool for generation of box plots&lt;/a&gt;æ¹ä¾¿å¤§å®¶ç»boxplotï¼å¦æ­¤ç®åçweb toolè½å¤åNature Methodsï¼å®å¨æ¯è®©äººç¾¡æå¦å¿æ¨åã&lt;/p&gt;

&lt;p&gt;Boxplotä»1970å¹´ç±John
Tukeyæç¤ºï¼å°ç°å¨å·²ç»40å¤å¹´äºï¼ä»æå¾å¤çåç§ï¼æ¯å¦&lt;a href=&#34;http://guangchuangyu.github.io/2012/02/violin-plot/&#34;&gt;violin plot&lt;/a&gt;å&lt;a href=&#34;http://www.jstatsoft.org/v28/c01/paper&#34;&gt;beanplot&lt;/a&gt;ï¼violin
plotåbeanplotæ¯å¾åçï¼é½æ¯æboxæ¢ædensity
curveï¼beanplotå¦å¤ææ°æ®ç¹å¨ä¸­é´ç¨çº¿æ¡è¡¨ç¤ºåºæ¥ï¼è¿ä¸ªå¾å®¹æå ä¸å»ï¼æ­£å¦æå¨&lt;a href=&#34;http://guangchuangyu.github.io/2012/02/violin-plot/&#34;&gt;violin plot&lt;/a&gt;ä¸­ææ°æ®ç¹å è¿å»ä¸æ ·ãåæ ·å¯ä»¥ææ°æ®ç¹å è¿boxplotä¸­ï¼è¿æå¾å¤ææ³æ¥å±ç¤ºboxplotï¼æ¯å¦å¯ä»¥ç¨ç¼ºå£(notch)å½¢å¼æ¥ç»boxplotï¼å¯ä»¥æä¸­é´çå®½åº¦è¡¨ç¤ºä¸ºmedianå¼çç½®ä¿¡ç©ºé´ãboxplotçå®½åº¦å¯ä»¥ç¨æ ·æ¬éæ¥å½ä¸åï¼å¦æsample
sizeè¶³å¤å¤§çè¯ï¼$mean\pm errorbar$
ä¸ä¼è¶åºboxï¼å¯ä»¥å¾æ¸æ°æè¿ä¸ªä¿¡æ¯ä¹å±ç¤ºå¨boxplotä¸­ã&lt;/p&gt;

&lt;p&gt;å¦ææ°æ®éæ¯è¾å°ï¼å¯ä»¥ç¨scatterplot+errorbarçå½¢å¼å±ç¤ºæ°æ®ï¼æ­£å¦æå¨&lt;a href=&#34;http://pubs.rsc.org/en/Content/ArticleLanding/2011/MB/C0MB00055H#!divAbstract&#34;&gt;Phosphoproteome profile of human lung cancer cell line A549&lt;/a&gt;ä¸­æç»ç&lt;a href=&#34;http://www.douban.com/photos/photo/1560368200/&#34;&gt;å¾7&lt;/a&gt;ã&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>