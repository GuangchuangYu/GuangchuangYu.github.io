<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Biology on Guangchuang YU</title>
    <link>https://guangchuangyu.github.io/categories/biology/</link>
    <description>Recent content in Biology on Guangchuang YU</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 Guangchuang YU</copyright>
    <lastBuildDate>Thu, 09 Nov 2017 21:51:43 +0800</lastBuildDate>
    <atom:link href="/categories/biology/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>BMC journal protects paper of plagiarism</title>
      <link>https://guangchuangyu.github.io/2017/11/bmc-journal-protects-paper-of-plagiarism/</link>
      <pubDate>Thu, 09 Nov 2017 21:51:43 +0800</pubDate>
      
      <guid>https://guangchuangyu.github.io/2017/11/bmc-journal-protects-paper-of-plagiarism/</guid>
      <description>&lt;p&gt;My friend who doing his PhD study at Johns Hopkins just send me the link about &lt;a href=&#34;https://retractionwatch.com/2017/11/07/17-johns-hopkins-researchers-resign-protest-ed-board-nature-journal/&#34; target=&#34;_blank&#34;&gt;a SR paper of plagiarism&lt;/a&gt;. I have very similar experence of &lt;a href=&#34;https://bmcsystbiol.biomedcentral.com/articles/10.1186/1752-0509-7-S2-S8&#34; target=&#34;_blank&#34;&gt;a paper published on BMC Systems Biology&lt;/a&gt;, which plagiarized &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pubmed/20179076&#34; target=&#34;_blank&#34;&gt;my work&lt;/a&gt; and the editor just decided to publish an erratum.&lt;/p&gt;

&lt;p&gt;Deng &lt;em&gt;etc.&lt;/em&gt; published an R package, ppiPre, that copied source code of my package, GOSemSim, and pretended that they developed these algorithms by themselves in their paper.&lt;/p&gt;

&lt;p&gt;Here is the screenshot of the source code (left: ppiPre, right: GOSemSim).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guangchuangyu.github.io/blog_images/screenshots/Screenshot 2017-07-17 19.43.51.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can find out more on &lt;a href=&#34;http://guangchuangyu.github.io/2014/11/proper-use-of-gosemsim/&#34; target=&#34;_blank&#34;&gt;my blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As a developer of several open source software, I am glad that someone find my source code useful and happy if someone use my source code to make something better. But I am not happy if someone copies my source code by removing author information and changing function names to pretend the code was developed by himself. The situation is even worse in academic. Taking someone else&amp;rsquo;s works and passing it off as one&amp;rsquo;s own is definitely plagiarism and not allow in academic.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;After I found ppiPre plagiarized my work, I contacted the editor:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2015/plagiarism/Screenshot 2015-05-27 19.56.58.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Very quickly, the editor replied my email:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2015/plagiarism/Screenshot%202015-05-27%2019.58.16.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;He told me that they &amp;ldquo;do take cases of plagiarism very seriously&amp;rdquo;. I don&amp;rsquo;t know how long their &amp;ldquo;due course&amp;rdquo; is and waited for the editor&amp;rsquo;s reply for 5 months without receiving any updated information. I then contacted CRAN for the issue of the ppiPre that copied source code without acknowledgement and the package was removed from CRAN at that time. After that I sent another email to the editor to ask for update.&lt;/p&gt;

&lt;p&gt;Here is the reply:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2015/plagiarism/Screenshot%202015-05-27%2020.11.54.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In the passed 5 months, they never even contacted the authors.&lt;/p&gt;

&lt;p&gt;I waited for 2 more months and also didn&amp;rsquo;t receive any information. I sent them email to complain that they are ruining the reputation of their journal.&lt;/p&gt;

&lt;p&gt;At this time, the editor told me he had contacted the author and we can &amp;ldquo;expect an update soon&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2015/plagiarism/Screenshot%202015-05-27%2020.33.30.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I waited for another 3 months and as usual without any update received. I sent another email to ask for update.&lt;/p&gt;

&lt;p&gt;Here is the reply of the editor:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2015/plagiarism/Screenshot%202015-04-23%2021.31.55.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The author said that they just &amp;ldquo;failing to cite my work&amp;rdquo;. Of course this is not an issue of citation as they pretended that they implemented several algorithms that were actually developed by me in their paper. This is definitely plagiarism. The editor&amp;rsquo;s words, &amp;ldquo;submit a correction&amp;rdquo; and &amp;ldquo;within our policy&amp;rdquo;, indicate that the editor is totally fine for a paper of plagiarism to say sorry and publish a correction. (BTW: this is the last email I received from the editor)&lt;/p&gt;

&lt;p&gt;Of course I can&amp;rsquo;t accept this, and here is my repsponse:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2015/plagiarism/Screenshot%202015-04-23%2021.45.33.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Ignorance of the law is no defence, for otherwise anyone can choose not to know the law and have a defence in committing an offence. The same applies to plagiarism.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ignorance of GPL license is also not an defence of publishing someone else&amp;rsquo;s work in a scientific journal to claim that they did it themselves.&lt;/p&gt;

&lt;p&gt;AND AGAIN, the editor just disappear. I sent emails several times to several editors and they just ignore my emails.&lt;/p&gt;

&lt;p&gt;I wrote &lt;a href=&#34;https://guangchuangyu.github.io/2015/05/bmc-favors-source-code-plagiarism/&#34; target=&#34;_blank&#34;&gt;blog post&lt;/a&gt; and asked peoples to share it on twitter and weibo. Then the first author contacted me. After &lt;a href=&#34;https://guangchuangyu.github.io/cn/2017/07/un-fucking-believable/&#34; target=&#34;_blank&#34;&gt;severl emails&amp;rsquo; communication&lt;/a&gt;, he promised to retract his paper and even send me a statement:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guangchuangyu.github.io/blog_images/Bioconductor/GOSemSim/2017-07-20-002402_683x584_scrot.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I never know how they interact with the editors. It was totally a black box for me as I never receive any email from both sides after the email above. They did not keep me updated. Even after they decided to publish an erratum, they didn&amp;rsquo;t notify me of their decision.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Here is their &lt;a href=&#34;https://bmcsystbiol.biomedcentral.com/articles/10.1186/s12918-015-0196-5&#34; target=&#34;_blank&#34;&gt;erratum&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The authors wish to acknowledge that the software package associated with our Research Article [1], under the name ‘ppiPre’, re-used software code for some of its functions from an existing software package, GOSemSim [2], without proper attribution and in breach of the software’s licencing terms. Additionally we neglected to cite the article by Yu et al. [3] describing the GoSemSim software.&lt;/p&gt;

&lt;p&gt;The software code from GoSemSim [2] is used in the implementation of two GO semantic similarity measures, TCSS and IntelliGO. ppiPre additionally implements a KEGG-based similarity measure and three topological similarity measures, and integrates features with a support vector machine.&lt;/p&gt;

&lt;p&gt;We have now updated our software package such that it is licensed under a compatible GPL version 2 licence, and revised the package to give the appropriate attribution.&lt;/p&gt;

&lt;p&gt;We apologize for any inconvenience this oversight may have caused.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They just &lt;strong&gt;&amp;ldquo;re-used&amp;rdquo;&lt;/strong&gt; source code &lt;strong&gt;&amp;ldquo;without proper attribution&amp;rdquo;&lt;/strong&gt; and these source code &amp;ldquo;&lt;strong&gt;is used in the implementation&lt;/strong&gt; of two GO semantic similarity measures&amp;rdquo;. It seems that they implemented these methods themselves. Of course the paper is not only an issue of source code plagiarism, but also an issue of publication ethics. The ppiPre paper intended to introduce my implementation of GO semantic similarity measurement as their own to cheat reviewers and readers. They did not say a word about publication ethics and the editors also ignore such issue.&lt;/p&gt;

&lt;p&gt;The case is very clear that they copied my source code and intended to pretend that&amp;rsquo;s their original work and use it to publish a paper. That&amp;rsquo;s definitely plagiarism. I am very disappointed! The editors are protecting paper of plagiarism and encouraging people to steal other&amp;rsquo;s work and publish on BMC.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yet an unofficial BioEdit for OSX</title>
      <link>https://guangchuangyu.github.io/2016/03/yet-an-unofficial-bioedit-for-osx/</link>
      <pubDate>Wed, 30 Mar 2016 13:40:22 +0800</pubDate>
      
      <guid>https://guangchuangyu.github.io/2016/03/yet-an-unofficial-bioedit-for-osx/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.mbio.ncsu.edu/bioedit/bioedit.html&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://www.mbio.ncsu.edu/bioedit/Banner1.GIF&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To my knowledge, &lt;a href=&#34;http://www.mbio.ncsu.edu/bioedit/bioedit.html&#34; target=&#34;_blank&#34;&gt;BioEdit&lt;/a&gt; is the most comprehensive biological sequence alignment editor. Most of my labmates run this software using &lt;code&gt;Parallels Desktop&lt;/code&gt;. For some of them, BioEdit is the only reason to install &lt;code&gt;Parallels Desktop&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I need to edit my alignment recently, and install it in my iMac using &lt;a href=&#34;https://www.winehq.org/&#34; target=&#34;_blank&#34;&gt;Wine&lt;/a&gt;, which is a compatibility layer for running Windows applications on POSIX-compliant OS. Although it is famous in Linux community for many years, many OSX users never heard of it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;I came out with an idea that maybe I can pack all the components into an OSX application bundle. Then I can share it with my labmates and others. I don&amp;rsquo;t need to teach them how to install and config &lt;code&gt;Wine&lt;/code&gt; and they can just drag the App to &lt;code&gt;/Applications&lt;/code&gt; and double click to run it.&lt;/p&gt;

&lt;p&gt;It took me one night to create this App. You can click &lt;a href=&#34;https://gitlab.com/GuangchuangYu/BioEdit-OSX/raw/master/BioEdit.dmg&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; to download it.&lt;/p&gt;

&lt;p&gt;As usual, you can install it by dragging the App to &lt;code&gt;Applications&lt;/code&gt; folder and open it by double click. It works just like native App.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2016/Screenshot 2016-03-30 11.30.03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;BTW: If you don&amp;rsquo;t have &lt;a href=&#34;http://xquartz.macosforge.org/&#34; target=&#34;_blank&#34;&gt;XQuartz&lt;/a&gt; installed, you need one for running &lt;code&gt;BioEdit&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>local blast</title>
      <link>https://guangchuangyu.github.io/2013/11/local-blast/</link>
      <pubDate>Thu, 21 Nov 2013 10:40:22 +0800</pubDate>
      
      <guid>https://guangchuangyu.github.io/2013/11/local-blast/</guid>
      <description>&lt;p&gt;I was asked to set up a local blast for the lab. Blast can be installed
directly using apt in debian and it turns out to be easy.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lang=&amp;quot;bash&amp;quot;&#34;&gt;root@jz:/ssd/genomes# apt-get install ncbi-blast+
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following NEW packages will be installed:
  ncbi-blast+
0 upgraded, 1 newly installed, 0 to remove and 26 not upgraded.
Need to get 11.2 MB of archives.
After this operation, 32.8 MB of additional disk space will be used.
Get:1 http://ftp.hk.debian.org/debian/ wheezy/main ncbi-blast+ amd64 2.2.26-3 [11.2 MB]
Fetched 11.2 MB in 1min 16s (146 kB/s)
Selecting previously unselected package ncbi-blast+.
(Reading database ... 252681 files and directories currently installed.)
Unpacking ncbi-blast+ (from .../ncbi-blast+_2.2.26-3_amd64.deb) ...
Processing triggers for man-db ...
Setting up ncbi-blast+ (2.2.26-3) ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Before the program can be used for sequence alignment, we should prepare
the db files:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lang=&amp;quot;bash&amp;quot;&#34;&gt;root@jz:/ssd/genomes/blast/db# makeblastdb -in ../../hg19.fa -out hg19 -dbtype nucl
Building a new DB, current time: 11/21/2013 16:03:05
New DB name:   hg19
New DB title:  ../../hg19.fa
Sequence type: Nucleotide
Keep Linkouts: T
Keep MBits: T
Maximum file size: 1073741824B
Adding sequences from FASTA; added 25 sequences in 27.7084 seconds.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s it. Now blast is supported in the lab server. I tested blastn
with the &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/nuccore/NC_000011.9?report=fasta&amp;amp;from=62184015&amp;amp;to=62331329&amp;amp;strand=true&#34; target=&#34;_blank&#34;&gt;AHANAK
sequence&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lang=&amp;quot;bash&amp;quot;&#34;&gt;ygc@jz:~$ date; blastn -num_threads 8 -query sequence.fasta -db /ssd/genomes/blast/db/hg19 &amp;gt;&amp;gt; testblast.txt ; date
Thu Nov 21 16:19:19 HKT 2013
Thu Nov 21 17:19:45 HKT 2013
ygc@jz:~$ wc -c sequence.fasta
149510 sequence.fasta
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Blast search has three distinctive stages: word matching with database
scan, ungapped alignment, gapped alignment with traceback. Only word
matching stage is multi-threaded. So it tooks 1 hour to align this long
gene.&lt;/p&gt;

&lt;p&gt;The most significant hit of the blast result indicated that the sequence
is located at chr11:62331329-62184015, which is consistent with the
information presented in the &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/nuccore/NC_000011.9?report=fasta&amp;amp;from=62184015&amp;amp;to=62331329&amp;amp;strand=true&#34; target=&#34;_blank&#34;&gt;AHANAK sequence
link&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ygc@jz:~$ cat testblast.txt
BLASTN 2.2.26+


Reference: Zheng Zhang, Scott Schwartz, Lukas Wagner, and Webb
Miller (2000), &amp;quot;A greedy algorithm for aligning DNA sequences&amp;quot;, J
Comput Biol 2000; 7(1-2):203-14.



Database: ../../hg19.fa
           25 sequences; 3,095,693,983 total letters



Query= gi|224589802:c62331329-62184015 Homo sapiens chromosome 11,
GRCh37.p13 Primary Assembly

Length=147315
                                                                      Score        E
Sequences producing significant alignments:                          (Bits)     Value

  chr11                                                               2.720e+05  0.0
  chr14                                                                941       0.0

...

&amp;gt; chr11
Length=135006516

 Score = 2.720e+05 bits (147315),  Expect = 0.0
 Identities = 147315/147315 (100%), Gaps = 0/147315 (0%)
 Strand=Plus/Minus

Query  1         CATTTGGAAAGGAACCTGGGACCTAGGGTTAAAGGACAGATCCTCTGCTTTGCTACAGTG  60
                 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
Sbjct  62331329  CATTTGGAAAGGAACCTGGGACCTAGGGTTAAAGGACAGATCCTCTGCTTTGCTACAGTG  62331270

Query  61        TAATCTTGGACAGGTCATTCTACTTGGTCTCATCTGTAAAGAGAGGGGAGGGTCAGGGTA  120
                 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
Sbjct  62331269  TAATCTTGGACAGGTCATTCTACTTGGTCTCATCTGTAAAGAGAGGGGAGGGTCAGGGTA  62331210

...

  Database: ../../hg19.fa
    Posted date:  Nov 21, 2013  4:03 PM
  Number of letters in database: 3,095,693,983
  Number of sequences in database:  25



Matrix: blastn matrix 1 -2
Gap Penalties: Existence: 0, Extension: 2.5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In addition to the species-specific sequence file, we should download
the non-redundent gene and protein sequences from
&lt;a href=&#34;ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nt.gz&#34; target=&#34;_blank&#34;&gt;ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nt.gz&lt;/a&gt; and
&lt;a href=&#34;ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz&#34; target=&#34;_blank&#34;&gt;ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz&lt;/a&gt; respectively.&lt;/p&gt;

&lt;p&gt;nt contains all nucleotide sequences of GenBank, RefSeq Nucleotides,
EMBL, DDBJ and PDB, while nr contains all non-redundant peptide
sequences from GenBank CDS translations, RefSeq Proteins, PDB,
SwissProt, PIR and PRF. After generating the db files, we can blast a
sequence to multiple species.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lang=&amp;quot;bash&amp;quot;&#34;&gt;makeblastdb -in ../../nr/nr -out nr -dbtype prot
makeblastdb -in ../../nr/nt -out nt -dbtype nucl
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>sequence alignment program written in R</title>
      <link>https://guangchuangyu.github.io/2008/08/sequence-alignment-program-written-in-r/</link>
      <pubDate>Thu, 07 Aug 2008 12:13:35 +0800</pubDate>
      
      <guid>https://guangchuangyu.github.io/2008/08/sequence-alignment-program-written-in-r/</guid>
      <description>&lt;p&gt;Sequence alignment by dynamic programming.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; ## by YGC
 ## August 7, 2008
 ## guangchuangyu AT gmail.com

 X &amp;lt;- &#39;TTCATA&#39;
 Y &amp;lt;- &#39;TGCTCGTA&#39;

 seq.x &amp;lt;- unlist(strsplit(X, &#39;&#39;))
 seq.y &amp;lt;- unlist(strsplit(Y, &#39;&#39;))

 seq.x &amp;lt;- c(0,seq.x)
 seq.y &amp;lt;- c(0,seq.y)

 match &amp;lt;- 5
 mismatch &amp;lt;- -2
 indel &amp;lt;- -6

 ## initial the score matrix
 score &amp;lt;- matrix(NA, length(seq.x), length(seq.y))
 score[,1] &amp;lt;- sapply(1:length(seq.x)-1, function(x) x * indel)
 score[1,] &amp;lt;- sapply(1:length(seq.y)-1, function(x) x * indel)

 ## The dynamic programming, global alignment recursion
 for (i in 2:length(seq.x)) {
     for (j in 2:length(seq.y)){
         # seq.x[i] , seq.y[j] are aligned
         if ( seq.x[i] == seq.y[j]) {
             score[i,j] &amp;lt;- score[i-1, j-1] + match
         } else {
             score[i,j] &amp;lt;- score[i-1, j-1] + mismatch
         }
         # seq.x[i] aligned to -
         sc &amp;lt;- score[i-1,j] + indel
         if (sc &amp;gt; score[i,j])
             score[i,j] = sc
         # seq.y[j] aligned to -
         sc &amp;lt;- score[i,j-1] + indel
         if (sc &amp;gt; score[i,j])
             score[i,j] = sc
     }
 }

 ## Traceback
 i &amp;lt;- length(seq.x)
 j &amp;lt;- length(seq.y)
 ax &amp;lt;- character()
 ay &amp;lt;- character()
 while (i &amp;gt; 1 &amp;amp;&amp;amp; j &amp;gt;1){
     ## case 1: best was seq.x[i] aligned to seq.y[j]
     sc &amp;lt;- score[i-1,j-1]
     if (seq.x[i] == seq.y[j]) {
         sc &amp;lt;- sc + match
     } else {
         sc &amp;lt;- sc + mismatch
     }
     if (sc == score[i,j]) {
         ax &amp;lt;- c(seq.x[i], ax)
         ay &amp;lt;- c(seq.y[j], ay)
         i &amp;lt;- i -1
         j &amp;lt;- j-1
         next
     }
     ## case 2: best was seq.x[i] aligned to -
     if ((score[i-1,j] + indel) == score[i,j]) {
         ax &amp;lt;- c(seq.x[i], ax)
         ay &amp;lt;- c(&amp;quot;-&amp;quot;, ay)
         i &amp;lt;- i-1
         next
     }
     ## case 3: best was seq.y[j] aligned to -
     if ((score[i,j-1] + indel) == score[i,j]) {
         ax &amp;lt;- c(&amp;quot;-&amp;quot;, ax)
         ay &amp;lt;- c(seq.y[j], ay)
         j &amp;lt;- j-1
         next
     }
 }

 cat (&amp;quot;Sequence X: &amp;quot;, X,&amp;quot;\n&amp;quot;)
 cat (&amp;quot;Sequence Y: &amp;quot;, Y,&amp;quot;\n&amp;quot;)
 cat (&amp;quot;Scoring system: &amp;quot;, match, &amp;quot; for match; &amp;quot;, mismatch, &amp;quot; for mismatch; &amp;quot;, indel, &amp;quot; for gap&amp;quot;, &amp;quot;\n\n&amp;quot;)

 cat (&amp;quot;Dynamic programming matrix:\n&amp;quot;)
 print (score)

 cat (&amp;quot;\nAlignment:\n&amp;quot;)
 cat (paste(ax, collapse=&#39;&#39;), &amp;quot;\n&amp;quot;)
 cat (paste(ay, collapse=&#39;&#39;),&amp;quot;\n\n&amp;quot;)
 cat (&amp;quot;Optimum alignment score: &amp;quot;, score[length(score)],&amp;quot;\n&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guangchuangyu.github.io/blog_images/2008/11/ralignment.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
