<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software on Guangchuang YU</title>
    <link>https://guangchuangyu.github.io/categories/software/</link>
    <description>Recent content in Software on Guangchuang YU</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 Guangchuang YU</copyright>
    <lastBuildDate>Wed, 30 Mar 2016 13:40:22 +0800</lastBuildDate>
    <atom:link href="/categories/software/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>yet an unofficial BioEdit for OSX</title>
      <link>https://guangchuangyu.github.io/2016/03/yet-an-unofficial-bioedit-for-osx/</link>
      <pubDate>Wed, 30 Mar 2016 13:40:22 +0800</pubDate>
      
      <guid>https://guangchuangyu.github.io/2016/03/yet-an-unofficial-bioedit-for-osx/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.mbio.ncsu.edu/bioedit/bioedit.html&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://www.mbio.ncsu.edu/bioedit/Banner1.GIF&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To my knowledge, &lt;a href=&#34;http://www.mbio.ncsu.edu/bioedit/bioedit.html&#34; target=&#34;_blank&#34;&gt;BioEdit&lt;/a&gt; is the most comprehensive biological sequence alignment editor. Most of my labmates run this software using &lt;code&gt;Parallels Desktop&lt;/code&gt;. For some of them, BioEdit is the only reason to install &lt;code&gt;Parallels Desktop&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I need to edit my alignment recently, and install it in my iMac using &lt;a href=&#34;https://www.winehq.org/&#34; target=&#34;_blank&#34;&gt;Wine&lt;/a&gt;, which is a compatibility layer for running Windows applications on POSIX-compliant OS. Although it is famous in Linux community for many years, many OSX users never heard of it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;I came out with an idea that maybe I can pack all the components into an OSX application bundle. Then I can share it with my labmates and others. I don&amp;rsquo;t need to teach them how to install and config &lt;code&gt;Wine&lt;/code&gt; and they can just drag the App to &lt;code&gt;/Applications&lt;/code&gt; and double click to run it.&lt;/p&gt;

&lt;p&gt;It took me one night to create this App. You can click &lt;a href=&#34;https://gitlab.com/GuangchuangYu/BioEdit-OSX/raw/master/BioEdit.dmg&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; to download it.&lt;/p&gt;

&lt;p&gt;As usual, you can install it by dragging the App to &lt;code&gt;Applications&lt;/code&gt; folder and open it by double click. It works just like native App.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2016/Screenshot 2016-03-30 11.30.03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;BTW: If you don&amp;rsquo;t have &lt;a href=&#34;http://xquartz.macosforge.org/&#34; target=&#34;_blank&#34;&gt;XQuartz&lt;/a&gt; installed, you need one for running &lt;code&gt;BioEdit&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>auto-complete in ESS</title>
      <link>https://guangchuangyu.github.io/2014/12/auto-complete-in-ess/</link>
      <pubDate>Sun, 07 Dec 2014 10:22:35 +0800</pubDate>
      
      <guid>https://guangchuangyu.github.io/2014/12/auto-complete-in-ess/</guid>
      <description>&lt;p&gt;Auto complete is good, it can save you times in typing and prevent typo
sometimes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/12/2014-12-08-100418_540x105_scrot.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;RStudio now supports function arguments in auto complete. ESS&amp;rsquo;s auto
complete is more advance, it supports help page.&lt;/p&gt;

&lt;p&gt;We should use &amp;lsquo;ess-use-auto-complete&amp;rsquo; to activate auto complete in ESS
buffers.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lang=&amp;quot;lisp&amp;quot;&#34;&gt;(setq ess-use-auto-complete t)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The effect is quite amazing.
&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/10/2014-10-23-102308_919x482_scrot.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Auto-complete extension is needed for ESS, we need to install the
&lt;a href=&#34;http://cx4a.org/software/auto-complete/&#34; target=&#34;_blank&#34;&gt;auto-complete&lt;/a&gt; extension and
load it at Emacs startup.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lang=&amp;quot;lisp&amp;quot;&#34;&gt;(require &#39;auto-complete)
(require &#39;auto-complete-config)
(add-to-list &#39;ac-dictionary-directories &amp;quot;~/.emacs.d/site-lisp/auto-complete/dict&amp;quot;)
(ac-config-default)
(auto-complete-mode)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>install 454 GS Data Analysis Software on ubuntu</title>
      <link>https://guangchuangyu.github.io/2014/09/install-454-gs-data-analysis-software-on-ubuntu/</link>
      <pubDate>Thu, 04 Sep 2014 15:38:44 +0800</pubDate>
      
      <guid>https://guangchuangyu.github.io/2014/09/install-454-gs-data-analysis-software-on-ubuntu/</guid>
      <description>

&lt;p&gt;Usually Roche&amp;rsquo;s installer is a catastrophe, they only provides &lt;code&gt;rpm&lt;/code&gt;
packages of the &lt;a href=&#34;http://454.com/products/analysis-software/index.asp&#34; target=&#34;_blank&#34;&gt;software for 454 GS FLX&lt;/a&gt; (version 2.9).
Although the package contains setup.sh, the script is useless since it
is actually a binary payload.&lt;/p&gt;

&lt;p&gt;I run the setup.sh, and it throw error of not finding &lt;code&gt;/sbin/lspci&lt;/code&gt;. In
debian derived distribution, lspci command is located in /bin folder.
This issue is easy to solve by adding a soft link to &lt;code&gt;/sbin/lspci&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The second error message popping up says: &lt;code&gt;&amp;quot;Error: Could not execute
command: type rocks 2&amp;gt;&amp;amp;1&amp;quot;&lt;/code&gt;, and I used the command, sudo ln -s
/bin/true /bin/rocks, to solve it.&lt;/p&gt;

&lt;p&gt;The third error is lack of libraries &lt;code&gt;zlib.i386&lt;/code&gt;, &lt;code&gt;libXi.i386&lt;/code&gt;,
&lt;code&gt;libXtst.i386&lt;/code&gt;, and &lt;code&gt;libXaw.i386&lt;/code&gt;. Since my OS is 64bit ubuntu 14.04 LTS, I
used, &lt;code&gt;sudo apt-get install ia32-libs&lt;/code&gt;, to install all the 32bit
compatible libraries.&lt;/p&gt;

&lt;p&gt;The fourth error is weird for it can&amp;rsquo;t found &lt;code&gt;/bin/sh&lt;/code&gt; which is available
for all unix-like systems. Since debian links sh to dash, while most of
the Linux distributions links to bash, I changed the link to bash but
the error still exists.&lt;/p&gt;

&lt;p&gt;I can&amp;rsquo;t figure out how to solve the fourth error and tried to install
the rpm packages by using &lt;code&gt;rpm -ivh&lt;/code&gt; command but the error doesn&amp;rsquo;t change.&lt;/p&gt;

&lt;p&gt;Although I can&amp;rsquo;t install the software using setup.sh, it install java6
successfully. I do believe I can install the software since it is java
program. I start to extract the contents of these rpm packages and then
it is very clear. Some programs, mostly tools of &lt;code&gt;gsSeqTools&lt;/code&gt;, are binary
files that needs shared libs and it is the reason why it throw error of
lacking libraries. This issue had been solved.&lt;/p&gt;

&lt;p&gt;Most of the programs are jar files, and shell scripts that wrap the
calling of these jar files. All these jar and shell script files can run
properly by copying them to the right place.&lt;/p&gt;

&lt;p&gt;The contents of rpm file can be extracted using the command like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rpm2cpio gsAmplicons-2.9-1.noarch.rpm| cpio -idmv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is the key point of successfully installing 454 GS Data Analysis
Software. I believe it can be installed on most of the Unix-like system.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://guangchuangyu.github.io/blog_images/2014/08/screenshot-2014-08-29-165830.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;update&#34;&gt;update&lt;/h2&gt;

&lt;p&gt;When I upgrade Ubuntu to 16.04, I found that ia-32 is no more exist in package repo.&lt;/p&gt;

&lt;p&gt;So, we need to download corresponding old packages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://launchpadlibrarian.net/105344356/ia32-libs-multiarch_20090808ubuntu36_i386.deb&#34; target=&#34;_blank&#34;&gt;http://launchpadlibrarian.net/105344356/ia32-libs-multiarch_20090808ubuntu36_i386.deb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mirrors.kernel.org/ubuntu/pool/universe/i/ia32-libs/ia32-libs_20090808ubuntu36_amd64.deb&#34; target=&#34;_blank&#34;&gt;http://mirrors.kernel.org/ubuntu/pool/universe/i/ia32-libs/ia32-libs_20090808ubuntu36_amd64.deb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then, use &lt;code&gt;sudo dpkg --force-all -i&lt;/code&gt; to install them and &lt;code&gt;sudo apt-get install -f --fix-missing&lt;/code&gt; to install corresponding &lt;code&gt;i386&lt;/code&gt; packages.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>local blast</title>
      <link>https://guangchuangyu.github.io/2013/11/local-blast/</link>
      <pubDate>Thu, 21 Nov 2013 10:40:22 +0800</pubDate>
      
      <guid>https://guangchuangyu.github.io/2013/11/local-blast/</guid>
      <description>&lt;p&gt;I was asked to set up a local blast for the lab. Blast can be installed
directly using apt in debian and it turns out to be easy.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lang=&amp;quot;bash&amp;quot;&#34;&gt;root@jz:/ssd/genomes# apt-get install ncbi-blast+
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following NEW packages will be installed:
  ncbi-blast+
0 upgraded, 1 newly installed, 0 to remove and 26 not upgraded.
Need to get 11.2 MB of archives.
After this operation, 32.8 MB of additional disk space will be used.
Get:1 http://ftp.hk.debian.org/debian/ wheezy/main ncbi-blast+ amd64 2.2.26-3 [11.2 MB]
Fetched 11.2 MB in 1min 16s (146 kB/s)
Selecting previously unselected package ncbi-blast+.
(Reading database ... 252681 files and directories currently installed.)
Unpacking ncbi-blast+ (from .../ncbi-blast+_2.2.26-3_amd64.deb) ...
Processing triggers for man-db ...
Setting up ncbi-blast+ (2.2.26-3) ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Before the program can be used for sequence alignment, we should prepare
the db files:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lang=&amp;quot;bash&amp;quot;&#34;&gt;root@jz:/ssd/genomes/blast/db# makeblastdb -in ../../hg19.fa -out hg19 -dbtype nucl
Building a new DB, current time: 11/21/2013 16:03:05
New DB name:   hg19
New DB title:  ../../hg19.fa
Sequence type: Nucleotide
Keep Linkouts: T
Keep MBits: T
Maximum file size: 1073741824B
Adding sequences from FASTA; added 25 sequences in 27.7084 seconds.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s it. Now blast is supported in the lab server. I tested blastn
with the &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/nuccore/NC_000011.9?report=fasta&amp;amp;from=62184015&amp;amp;to=62331329&amp;amp;strand=true&#34; target=&#34;_blank&#34;&gt;AHANAK
sequence&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lang=&amp;quot;bash&amp;quot;&#34;&gt;ygc@jz:~$ date; blastn -num_threads 8 -query sequence.fasta -db /ssd/genomes/blast/db/hg19 &amp;gt;&amp;gt; testblast.txt ; date
Thu Nov 21 16:19:19 HKT 2013
Thu Nov 21 17:19:45 HKT 2013
ygc@jz:~$ wc -c sequence.fasta
149510 sequence.fasta
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Blast search has three distinctive stages: word matching with database
scan, ungapped alignment, gapped alignment with traceback. Only word
matching stage is multi-threaded. So it tooks 1 hour to align this long
gene.&lt;/p&gt;

&lt;p&gt;The most significant hit of the blast result indicated that the sequence
is located at chr11:62331329-62184015, which is consistent with the
information presented in the &lt;a href=&#34;http://www.ncbi.nlm.nih.gov/nuccore/NC_000011.9?report=fasta&amp;amp;from=62184015&amp;amp;to=62331329&amp;amp;strand=true&#34; target=&#34;_blank&#34;&gt;AHANAK sequence
link&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ygc@jz:~$ cat testblast.txt
BLASTN 2.2.26+


Reference: Zheng Zhang, Scott Schwartz, Lukas Wagner, and Webb
Miller (2000), &amp;quot;A greedy algorithm for aligning DNA sequences&amp;quot;, J
Comput Biol 2000; 7(1-2):203-14.



Database: ../../hg19.fa
           25 sequences; 3,095,693,983 total letters



Query= gi|224589802:c62331329-62184015 Homo sapiens chromosome 11,
GRCh37.p13 Primary Assembly

Length=147315
                                                                      Score        E
Sequences producing significant alignments:                          (Bits)     Value

  chr11                                                               2.720e+05  0.0
  chr14                                                                941       0.0

...

&amp;gt; chr11
Length=135006516

 Score = 2.720e+05 bits (147315),  Expect = 0.0
 Identities = 147315/147315 (100%), Gaps = 0/147315 (0%)
 Strand=Plus/Minus

Query  1         CATTTGGAAAGGAACCTGGGACCTAGGGTTAAAGGACAGATCCTCTGCTTTGCTACAGTG  60
                 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
Sbjct  62331329  CATTTGGAAAGGAACCTGGGACCTAGGGTTAAAGGACAGATCCTCTGCTTTGCTACAGTG  62331270

Query  61        TAATCTTGGACAGGTCATTCTACTTGGTCTCATCTGTAAAGAGAGGGGAGGGTCAGGGTA  120
                 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
Sbjct  62331269  TAATCTTGGACAGGTCATTCTACTTGGTCTCATCTGTAAAGAGAGGGGAGGGTCAGGGTA  62331210

...

  Database: ../../hg19.fa
    Posted date:  Nov 21, 2013  4:03 PM
  Number of letters in database: 3,095,693,983
  Number of sequences in database:  25



Matrix: blastn matrix 1 -2
Gap Penalties: Existence: 0, Extension: 2.5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In addition to the species-specific sequence file, we should download
the non-redundent gene and protein sequences from
&lt;a href=&#34;ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nt.gz&#34; target=&#34;_blank&#34;&gt;ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nt.gz&lt;/a&gt; and
&lt;a href=&#34;ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz&#34; target=&#34;_blank&#34;&gt;ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz&lt;/a&gt; respectively.&lt;/p&gt;

&lt;p&gt;nt contains all nucleotide sequences of GenBank, RefSeq Nucleotides,
EMBL, DDBJ and PDB, while nr contains all non-redundant peptide
sequences from GenBank CDS translations, RefSeq Proteins, PDB,
SwissProt, PIR and PRF. After generating the db files, we can blast a
sequence to multiple species.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lang=&amp;quot;bash&amp;quot;&#34;&gt;makeblastdb -in ../../nr/nr -out nr -dbtype prot
makeblastdb -in ../../nr/nt -out nt -dbtype nucl
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
