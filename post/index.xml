<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on G. Yu</title>
    <link>http://guangchuangyu.github.io/post/</link>
    <description>Recent content in Posts on G. Yu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Dec 2015 00:42:26 +0800</lastBuildDate>
    <atom:link href="http://guangchuangyu.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>喜新厌旧之hello Hugo</title>
      <link>http://guangchuangyu.github.io/2015/12/%E5%96%9C%E6%96%B0%E5%8E%8C%E6%97%A7%E4%B9%8Bhello-hugo/</link>
      <pubDate>Fri, 04 Dec 2015 00:42:26 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/12/%E5%96%9C%E6%96%B0%E5%8E%8C%E6%97%A7%E4%B9%8Bhello-hugo/</guid>
      <description>

&lt;h1 id=&#34;installation:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;Installation&lt;/h1&gt;

&lt;p&gt;安装hugo对于Mac用户来说，太容易，brew大法搞定。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install hubo
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;mathjax-support:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;MathJax support&lt;/h1&gt;

&lt;p&gt;把下面的代码:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;
  src=&amp;quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&amp;gt;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;加入到文件&lt;code&gt;themes/hyde-x/layouts/partials/foot.html&lt;/code&gt;中，就可以实现&lt;code&gt;$\LaTeX$&lt;/code&gt;公式的解析。&lt;/p&gt;

&lt;h1 id=&#34;migrate-wordpress-to-hugo:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;migrate wordpress to hugo&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;Disqus Comment System plugin&lt;/code&gt; 点击&lt;code&gt;Export comments to Disqus&lt;/code&gt;搞定&lt;/p&gt;

&lt;h2 id=&#34;convert-wordpress-posts-to-markdown-files:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;convert Wordpress posts to markdown files&lt;/h2&gt;

&lt;p&gt;试用了多个插件或脚本，都是各种出错。最后发现了神器&lt;a href=&#34;https://github.com/jprichardson/potter-wordpress&#34;&gt;potter-wordpress&lt;/a&gt;，通过npm安装：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install -g pottercms-wordpress
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后一个语句:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;potter-wordpress -h WORDPRESS_SITE_URL -u USER_NAME -p PASSWORD --dir PATH_TO_STORE_MD_FILES
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;自动从线上把posts抓下来，并转化为&lt;code&gt;markdown&lt;/code&gt;。在之前各种搞不定之后，看到下面的输出有种莫名的快感。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;  Fetching articles...

       Got : [Sun Nov 29 2015] R kernel in Jupyter notebook 3
       Got : [Mon Nov 09 2015] phylomoji with ggtree
       Got : [Tue Nov 17 2015] 合体中的操作系统
       Got : [Mon Nov 02 2015] Comparison of clusterProfiler and GSEA-P
       Got : [Thu Oct 01 2015] ChIPseq data mining with ChIPseeker
       Got : [Tue Oct 06 2015] TRIE
       Got : [Thu Oct 15 2015] [BioC 3.2] NEWS of my BioC packages
       Got : [Wed Oct 21 2015] use simplify to remove redundancy of enriched GO terms
       
       ...
       
       Got : [Mon May 14 2007] Edit partition table in NetBSD/macppc
       Got : [Mon May 14 2007] 我的emacs配置文件
       Got : [Mon May 14 2007] pkgsrc tips
       Got : [Thu May 03 2007] scilab三维平面绘图
       Got : [Sat Jun 24 2006] qvwm窗口管理器的windows2000主题
       Got : [Wed Jun 14 2006] 安装os9和netbsd双系统
       Got : [Sat May 28 2005] 在emacs里使用maxima
       Got : [Mon Mar 14 2005] scau校园网认证
       Got : [Fri Jan 14 2005] Powerbook G3上安装gentoo

  Done.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>R kernel in Jupyter notebook 3</title>
      <link>http://guangchuangyu.github.io/2015/11/r-kernel-in-jupyter-notebook-3/</link>
      <pubDate>Sun, 29 Nov 2015 14:13:35 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/11/r-kernel-in-jupyter-notebook-3/</guid>
      <description>

&lt;p&gt;I followed the post, &lt;a href=&#34;http://www.michaelpacer.com/maths/r-kernel-for-ipython-notebook&#34;&gt;Installing an R kernel for IPython/jupyter
notebook 3 on
OSX&lt;/a&gt;,
to install jupyter with python3 and R kernels in my iMac.&lt;/p&gt;

&lt;p&gt;I have &lt;a href=&#34;https://elementary.io/&#34;&gt;elementaryOS&lt;/a&gt; on my Macbook Pro and also
want to have jupyter on it. The installation process is quite similar.&lt;/p&gt;

&lt;h3 id=&#34;install-jupyter:63d628ceb7549de75a7f4dbd963976d3&#34;&gt;Install Jupyter&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install python3-pip
sudo pip3 install jupyter
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then we can use the following command to start jupyter:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ipython notebook
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-irkernel:63d628ceb7549de75a7f4dbd963976d3&#34;&gt;Install IRkernel&lt;/h3&gt;

&lt;p&gt;To compile IRkernel, we should firstly have zmq lib installed.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install libzmq3-dev python-zmq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In R, run the following command to install
&lt;a href=&#34;https://github.com/IRkernel/IRkernel&#34;&gt;IRkernel&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;
install.packages(c(&#39;rzmq&#39;,&#39;repr&#39;,&#39;IRkernel&#39;,&#39;IRdisplay&#39;),
                  repos = c(&#39;http://irkernel.github.io/&#39;,     
                  getOption(&#39;repos&#39;)),
                  type = &#39;source&#39;)
IRkernel::installspec()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can use R in jupyter. Inline image is a great feature especially
for demonstration.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/screenshots/Screenshot%202015-11-04%2010.54.29.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;With &lt;a href=&#34;https://cran.r-project.org/web/views/Phylogenetics.html&#34;&gt;many phylogenetic
packages&lt;/a&gt;
available in R and my package
&lt;a href=&#34;https://github.com/GuangchuangYu/ggtree&#34;&gt;ggtree&lt;/a&gt;, R in jupyter can be a
great environment for phylogenetics.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>合体中的操作系统</title>
      <link>http://guangchuangyu.github.io/2015/11/%E5%90%88%E4%BD%93%E4%B8%AD%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Tue, 17 Nov 2015 16:06:59 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/11/%E5%90%88%E4%BD%93%E4%B8%AD%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;更新EI Capitan已经近一个月，第一感觉就是明显变慢了。这是去年买的27&amp;rsquo;
iMac，必须不慢。MS
office程序可以打开，但打开文档直接闪退。升级安装总会有些问题，就像我去年在笔记本上&lt;a href=&#34;http://ygc.name/2014/11/14/hello-yosemite/&#34;&gt;升级yosemite&lt;/a&gt;一样，最后两分钟始终过不去，迫使我&lt;a href=&#34;http://ygc.name/2014/11/14/hello-yosemite/&#34;&gt;全新安装&lt;/a&gt;，当时我看后台记录就发现了是MacTex拷不过去，后来MacTex的网站上也写了升级Yosemite有这个问题。升级有些小问题是可以预见的，但很少有像EI
Capitan这么多的问题。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.macworld.com/article/2987277/operating-systems/os-x-el-capitan-review-mac-upgrade-thats-as-solid-as-a-rock.html&#34;&gt;Macworld EI Capitan
review&lt;/a&gt;文章中有人这样评论：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;haha nice review ! did you tried the update ?? slow connection safari
freezes on launch outlook crash printer does not work anymore great
job from Apple . My confidence in Apple has been seriously dented!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;最不可思议的是开发者发现升级后&lt;a href=&#34;https://ohthehugemanatee.org/blog/2015/10/01/how-i-got-el-capitain-working-with-my-developer-tools/&#34;&gt;开发工具都有问题&lt;/a&gt;了：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Last night I installed OSX’s new “El Capitain” update, and it broke
most of the tools I use in my daily life as a developer, including
homebrew and git.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;git我倒没发现有问题，不过subversion每次都要求我输入密码了，&lt;a href=&#34;https://discussions.apple.com/thread/7276820&#34;&gt;keychain&lt;/a&gt;问题也是普遍存在的。&lt;/p&gt;

&lt;p&gt;第一时间升级EI Capitan的原因是我想要Split View，做为一个&lt;a href=&#34;http://ygc.name/2014/06/01/use-linux-desktop-again/&#34;&gt;tiling window
manager&lt;/a&gt;的爱好者，Split
View是有吸引力的，分屏确实是有助于提高工作效率，然后我发现它竟然&lt;a href=&#34;http://www.cnet.com/how-to/how-to-use-split-view-in-os-x-el-capitan/&#34;&gt;没有键盘操作&lt;/a&gt;！！！WTF，这个功能显然又是iPad送的，Apple并不是为了所谓的提高工作效率，而是为了消耗iPad过多的计算能力，可以让你一边聊天一边还在打游戏，顺道又送给了OS
X。&lt;/p&gt;

&lt;p&gt;总的来说，我的吐槽只有一点，电脑长得越来越像手机了，但手机我已经有了，我不需要也不想电脑跟手机一样。&lt;/p&gt;

&lt;p&gt;PC的发展历程中经历了一次成功的合体，那就是工作站X了桌面系统，不管是微软还是苹果，都是这样。&lt;/p&gt;

&lt;p&gt;微软当年9x系列的桌面系统，NT系列的工作站系统，首次尝试合体是windows
2000，但2k与其说是合体，倒不如说是把NT推向大众的桌面，所以不太成功，因为大量的游戏不兼容，用户不买帐，但用户又喜欢2k的漂亮界面。微软给出了两个方案，一个是2k上面打游戏补丁，一个是9x内核+2k界面的ME系统。最终合体成功的是XP，XP两个字母来自于eXPerience，旨在给用户更好的体验。实际上2k比XP稳定，且2k土灰土灰的界面，如果长期盯着电脑看的话，对眼睛比较友好。是我所喜欢的经典系统之一。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2006/06/qvwm.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;当年苹果笔记本(Power构架) + NetBSD + 仿2k界面，这样的合体非常好👍。&lt;/p&gt;

&lt;p&gt;很多人不知道win7为什么版本是7，因为NT出到4，2k是版本5，XP是6，不要跟我说什么Vista，那只是微软进展太慢，而苹果每年一新版本，压力太大，把半成品拿出来，微软自己也没给Vista个主版本号。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/os9.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;苹果也经历了这样的合体，当年的os
9当然比win98好很多，但如果要跟工作站出身的2k比的话，完全没法比。乔帮主被苹果赶走了，专心在搞工作站，推出了NeXTStep操作系统。苹果笔记本
+ NetBSD + 仿NeXTStep界面，这样的合体也非常好💪。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/wmaker.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;乔帮主回到苹果后，也是一次合体，于是有了OS X，就像2k一样，刚出来的OS
X用户也不买帐，同样的原因，软件不兼容。到了10.2
Jaguar情况才好转，而到了10.4
Tiger的时候，速度提升了很多，系统已经非常现代化，而XP界面是如此粗糙，苹果再一次领先，且因为走了Intel路线，微软压力山大。&lt;/p&gt;

&lt;p&gt;一直到OS X 10.6 Snow Leopard和Windows
7，都是这次合体的延续，都是成功的，至此经典系统宣布结束。从10.7
Lion开始，苹果开始尝试让手机系统和桌面系统合体，微软后来跟上，推出Win8，应该说OS
X还是没有太多的违和感，但微软合体的结果就是同时拥有鼠标键盘操作和触屏操作两套界面，违和感太强！已吐槽无力。Ubuntu所采用的Unity也是为手持设备设计的，实际上Canonical已经开始在做手持设备了。所以我也不喜欢Unity，&lt;a href=&#34;http://ygc.name/2014/06/01/use-linux-desktop-again/&#34;&gt;i3是最好的选择&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;从最初iPad送来了LaunchPad，到现在EI Capitan的Split
View。对于有键盘的电脑来说，Spotlight是最好的程序启动器，而Split
View嘛，还得靠BTT：
&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/screenshots/Screenshot%202015-11-13%2011.33.50.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;现在这些系统做得好像你对着电脑屏幕用手指戳就行了，他们完全不在乎你的电脑压根就戳不动，就算戳得动，用处也不大，键盘是工作中最好的人机交互👻。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BioC 3.2: NEWS of my BioC packages</title>
      <link>http://guangchuangyu.github.io/2015/10/bioc-3.2-news-of-my-bioc-packages/</link>
      <pubDate>Thu, 15 Oct 2015 16:13:57 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/10/bioc-3.2-news-of-my-bioc-packages/</guid>
      <description>

&lt;p&gt;In BioC 3.2 release, all my packages including
&lt;a href=&#34;http://www.bioconductor.org/packages/GOSemSim&#34;&gt;GOSemSim&lt;/a&gt;,
&lt;a href=&#34;http://www.bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt;,
&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/DOSE.html&#34;&gt;DOSE&lt;/a&gt;,
&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/ReactomePA.html&#34;&gt;ReactomePA&lt;/a&gt;,
and &lt;a href=&#34;http://www.bioconductor.org/packages/ChIPseeker&#34;&gt;ChIPseeker&lt;/a&gt; switch
from Sweave to R Markdown for package vignettes.&lt;/p&gt;

&lt;h3 id=&#34;gosemsim:a6fd95faa6e3c06222501cbf40403a13&#34;&gt;GOSemSim&lt;/h3&gt;

&lt;p&gt;To make it consistent between
&lt;a href=&#34;http://www.bioconductor.org/packages/GOSemSim&#34;&gt;GOSemSim&lt;/a&gt; and
&lt;a href=&#34;http://www.bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt;,
&amp;lsquo;worm&amp;rsquo; was deprecated and instead we should use &amp;lsquo;celegans&amp;rsquo;. As usual,
information content data was updated.&lt;/p&gt;

&lt;h3 id=&#34;clusterprofiler:a6fd95faa6e3c06222501cbf40403a13&#34;&gt;clusterProfiler&lt;/h3&gt;

&lt;p&gt;Enrichment results may contains terms that are very general (less
informative) and we do not want to use them. In this release, we provide
&lt;em&gt;dropGO&lt;/em&gt; function that can be used to drop selected GO terms or specific
level of GO terms. It can be applied to output from both &lt;em&gt;enrichGO&lt;/em&gt; and
&lt;em&gt;compareCluster&lt;/em&gt;. This is a feature request from
&lt;a href=&#34;https://github.com/GuangchuangYu/clusterProfiler/issues/26&#34;&gt;@ahorvath&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another feature request is to visualize GO enrichment result with GO
topology. I implement &lt;em&gt;plotGOgraph&lt;/em&gt; function by extending
&lt;a href=&#34;http://www.bioconductor.org/packages/topGO&#34;&gt;topGO&lt;/a&gt; to support output of
both &lt;em&gt;enrichGO&lt;/em&gt; or &lt;em&gt;gseGO&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&#34;http://ygc.name/2015/06/23/dotplot-for-enrichment-result/&#34;&gt;dotplot&lt;/a&gt;&lt;/em&gt;
is another feature request and was implemented in
&lt;a href=&#34;http://www.bioconductor.org/packages/DOSE&#34;&gt;DOSE&lt;/a&gt; as a general function
for visualize enrichment result.
&lt;a href=&#34;http://www.bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt;
import this function.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;merge_result&lt;/em&gt; function was implemented for merging enrichment results
and then the results can be visualized simultaneously for comparison.
This function was developed for comparing &lt;a href=&#34;http://ygc.name/2015/08/13/functional-enrichment-for-gtex-paper/&#34;&gt;functional enrichment of GTEx
paper&lt;/a&gt;.
An example of comparing results from
&lt;a href=&#34;http://www.bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt;
and DAVID can be found in
&lt;a href=&#34;https://github.com/GuangchuangYu/enrichment4GTEx_clusterProfiler/blob/master/GO_BP.md&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A section &amp;lsquo;Functional analysis of NGS data&amp;rsquo; was added in the vignette.
&lt;a href=&#34;http://ygc.name/2015/05/11/use-clusterprofiler-as-an-universal-enrichment-analysis-tool&#34;&gt;The blog
post&lt;/a&gt;
illustrated using &lt;em&gt;enricher&lt;/em&gt; and &lt;em&gt;GSEA&lt;/em&gt; function to analyze user defined
annotation.&lt;/p&gt;

&lt;h3 id=&#34;dose:a6fd95faa6e3c06222501cbf40403a13&#34;&gt;DOSE&lt;/h3&gt;

&lt;p&gt;Network of Cancer Genes data was updated to version 4.9.0, contributed
by &lt;a href=&#34;https://github.com/GuangchuangYu/DOSE/pull/8&#34;&gt;@dalloliogm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;dotplot&lt;/em&gt; function was implemented for visualizing enrichment result and
was imported to
&lt;a href=&#34;http://www.bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt;
and &lt;a href=&#34;http://www.bioconductor.org/packages/ReactomePA&#34;&gt;ReactomePA&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With new release of ChIPseeker, DOSE can be applied to &lt;a href=&#34;http://ygc.name/2015/08/21/functional-enrichment-analysis-with-ngs-data/&#34;&gt;NGS
data&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Several bugs were removed and small improvement were incorporated.&lt;/p&gt;

&lt;h3 id=&#34;reactomepa:a6fd95faa6e3c06222501cbf40403a13&#34;&gt;ReactomePA&lt;/h3&gt;

&lt;p&gt;Now fly (Drosophila melanogaster) is supported.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;viewPathway&lt;/em&gt; supports other organisms, which was contributed by
&lt;a href=&#34;https://github.com/GuangchuangYu/ReactomePA/pull/1&#34;&gt;@vladpetyuk&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Import &lt;em&gt;dotplot&lt;/em&gt; from DOSE and add &amp;lsquo;Pathway analysis of NGS data&amp;rsquo;
section in vignette.&lt;/p&gt;

&lt;h3 id=&#34;chipseeker:a6fd95faa6e3c06222501cbf40403a13&#34;&gt;ChIPseeker&lt;/h3&gt;

&lt;p&gt;Implement
&lt;em&gt;&lt;a href=&#34;http://ygc.name/2015/08/21/functional-enrichment-analysis-with-ngs-data/&#34;&gt;seq2gene&lt;/a&gt;&lt;/em&gt;
function for linking genomic regions to genes by many-to-many mapping.
With this function, enrichment analysis of
&lt;a href=&#34;http://www.bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt;,
&lt;a href=&#34;http://www.bioconductor.org/packages/DOSE&#34;&gt;DOSE&lt;/a&gt; and
&lt;a href=&#34;http://www.bioconductor.org/packages/ReactomePA&#34;&gt;ReactomePA&lt;/a&gt; can be
applied to NGS data.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ygc.name/2015/07/28/upsetplot-in-chipseeker/&#34;&gt;upsetplot&lt;/a&gt;
function is implemented for viewing overlap of ChIP annotation.&lt;/p&gt;

&lt;p&gt;Better implementation of internal function &lt;em&gt;getFirstHitIndex&lt;/em&gt;
contributed by
&lt;a href=&#34;https://support.bioconductor.org/p/70432/#70545&#34;&gt;@hpages&lt;/a&gt;. Now
annotating a BED file of size about 1GB only take several minutes.&lt;/p&gt;

&lt;p&gt;An issue of BED file that using &lt;a href=&#34;http://ygc.name/2015/08/07/parsing-bed-coordinates/&#34;&gt;the 0-based coordinate
system&lt;/a&gt; was fixed.&lt;/p&gt;

&lt;p&gt;GEO data information was updated, now ChIPseeker contains more than
18,000 BED file information. User can compare their own data with those
deposited in GEO to &lt;a href=&#34;http://ygc.name/2015/10/01/chipseq-data-mining-with-chipseeker/&#34;&gt;identify co-occurrence binding
proteins&lt;/a&gt;
that maybe cooperated with the one we are interested in.&lt;/p&gt;

&lt;h3 id=&#34;ggtree:a6fd95faa6e3c06222501cbf40403a13&#34;&gt;ggtree&lt;/h3&gt;

&lt;p&gt;My major focus in the past half year is on developing
&lt;a href=&#34;http://www.bioconductor.org/packages/ggtree&#34;&gt;ggtree&lt;/a&gt;.
&lt;a href=&#34;http://www.bioconductor.org/packages/ggtree&#34;&gt;ggtree&lt;/a&gt; has a lot of
changes. Some of the updates can be found in &lt;a href=&#34;http://bioconductor.org/help/newsletters/2015_October/&#34;&gt;Bioconductor
Newsletter&lt;/a&gt;
(Oct. 2015). In addition, I would like to emphasize the
&lt;em&gt;&lt;a href=&#34;http://ygc.name/2015/08/31/subview/&#34;&gt;subview&lt;/a&gt;&lt;/em&gt; function which works
fine with all the ggplot objects and was applied to &lt;a href=&#34;http://stackoverflow.com/questions/10368180/plotting-pie-graphs-on-map-in-ggplot/32380396#32380396&#34;&gt;plot pie graph on a
map&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.bioconductor.org/packages/ggtree&#34;&gt;ggtree&lt;/a&gt; can be fun by
using &lt;a href=&#34;http://ygc.name/2015/06/12/ggtree-with-funny-fonts/&#34;&gt;symbolic
fonts&lt;/a&gt;, &lt;a href=&#34;http://ygc.name/2015/09/08/comic-phylogenetic-tree-with-ggtree-and-comicr/&#34;&gt;cartoonize
the
tree&lt;/a&gt;
or annotating the tree &lt;a href=&#34;http://ygc.name/2015/11/09/phylomoji-with-ggtree/&#34;&gt;with
emoji&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are many updates that based on the github version of ggplot2.
Since the new features of ggplot2 are currently not available in CRAN. I
do not commit the change to Bioconductor and will introduce these new
feature to ggtree user when new version of ggplot2 is available in CRAN.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ChIPseq data mining with ChIPseeker</title>
      <link>http://guangchuangyu.github.io/2015/10/chipseq-data-mining-with-chipseeker/</link>
      <pubDate>Thu, 01 Oct 2015 09:08:06 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/10/chipseq-data-mining-with-chipseeker/</guid>
      <description>

&lt;p&gt;ChIP-seq is rapidly becoming a common technique and there are a large
number of dataset available in the public domain. Results from
individual experiments provide a limited understanding of chromatin
interactions, as there is many factors cooperate to regulate
transcription. Unlike other tools that designed for single dataset,
&lt;a href=&#34;http://www.bioconductor.org/packages/ChIPseeker&#34;&gt;ChIPseeker&lt;/a&gt; is
designed for comparing profiles of ChIP-seq datasets at different
levels.&lt;/p&gt;

&lt;p&gt;We provide functions to compare profiles of peaks binding to TSS
regions, annotation, and enriched functional profiles. More importantly,
ChIPseeker incorporates statistical testing of co-occurrence of
different ChIP-seq datasets and can be used to identify co-factors.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; library(ChIPseeker)
&amp;gt; ff=getSampleFiles()
&amp;gt; x = enrichPeakOverlap(ff[[5]], unlist(ff[1:4]), nShuffle=10000, pAdjustMethod=&amp;quot;BH&amp;quot;, chainFile=NULL)
&amp;gt;&amp;gt; permutation test of peak overlap...       2015-09-24 14:23:43
  |======================================================================| 100%
&amp;gt; x
                                                      qSample
ARmo_0M    GSM1295077_CBX7_BF_ChipSeq_mergedReps_peaks.bed.gz
ARmo_1nM   GSM1295077_CBX7_BF_ChipSeq_mergedReps_peaks.bed.gz
ARmo_100nM GSM1295077_CBX7_BF_ChipSeq_mergedReps_peaks.bed.gz
CBX6_BF    GSM1295077_CBX7_BF_ChipSeq_mergedReps_peaks.bed.gz
                                                      tSample qLen tLen N_OL
ARmo_0M                       GSM1174480_ARmo_0M_peaks.bed.gz 1663  812    0
ARmo_1nM                     GSM1174481_ARmo_1nM_peaks.bed.gz 1663 2296    8
ARmo_100nM                 GSM1174482_ARmo_100nM_peaks.bed.gz 1663 1359    3
CBX6_BF    GSM1295076_CBX6_BF_ChipSeq_mergedReps_peaks.bed.gz 1663 1331  968
               pvalue   p.adjust
ARmo_0M    0.88901110 0.88901110
ARmo_1nM   0.15118488 0.30236976
ARmo_100nM 0.37296270 0.49728360
CBX6_BF    0.00009999 0.00039996
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/Bioconductor/ChIPseeker/Screenshot%202015-09-24%2015.05.08.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The enrichment analysis of peak overlap is based on permutation test.
&lt;em&gt;nShuffle&lt;/em&gt; of random ChIP data were generated to estimate the background
null distribution of the overlap and p-value is then calculated by the
probability of observing more extreme overlap. Multiple comparison
correction is also incorporated.&lt;/p&gt;

&lt;p&gt;The most exciting feature in ChIPseeker is that it collected more than
18,000 bed file information from GEO database and make this co-factor
inference available to the community. With these datasets, we can
compare our own dataset to those deposited in GEO to identify
co-occurrence binding proteins that maybe cooperated with the one we are
interested in. Hypothesis can be generated by this inference and serve
as a starting point for further study.&lt;/p&gt;

&lt;h3 id=&#34;reference:b5b0ae7141a3dcd30d9a3b4fda249992&#34;&gt;Reference&lt;/h3&gt;

&lt;p&gt;G Yu, LG Wang, QY He. &lt;a href=&#34;http://bioinformatics.oxfordjournals.org/cgi/content/abstract/btv145&#34;&gt;ChIPseeker: an R/Bioconductor package for ChIP
peak annotation, comparison and
visualization&lt;/a&gt;.
Bioinformatics. 2015, 31(14):2382-2383.
PMID:&lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/25765347&#34;&gt;25765347&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BMC Favor Plagiarism</title>
      <link>http://guangchuangyu.github.io/2015/06/bmc-favor-plagiarism/</link>
      <pubDate>Mon, 08 Jun 2015 13:22:22 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/06/bmc-favor-plagiarism/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/ppiPre/index.html&#34;&gt;ppiPre&lt;/a&gt;抄袭了&lt;a href=&#34;https://github.com/GuangchuangYu/GOSemSim&#34;&gt;GOSemSim&lt;/a&gt;的代码，证据当然非常充分，比对一下代码就知道了，我在&lt;a href=&#34;http://ygc.name/2014/11/23/proper-use-of-gosemsim/&#34;&gt;Proper
use of
GOSemSim&lt;/a&gt;一文中，做出了一些比较，另外也可以参考&lt;a href=&#34;https://github.com/cran/ppiPre/commit/c267700ca09a599dab77326959a0aa6a2980ceed&#34;&gt;github&lt;/a&gt;页面，github记录了ppiPre被暴光抄袭之后所做的修改。
从我给BMC Systems
Biology的编辑反馈这件事开始，在这铁板钉钉的事实面前，编辑拖了整整一年，而这一年时间过去了，ppiPre仍没有被编辑部受理。从最早反应这件事情，编辑信誓旦旦说他们很重视这种事情，到后面对我的邮件视而不见，我愿意相信编辑部处理这些事情，需要时间，他们有自己的规则，但一年的时间，不回邮件，冷处理以淡化此事，这绝对不是应该有的规则。
在编辑一直无视我的情况下，我写出了&lt;a href=&#34;http://ygc.name/2014/11/23/proper-use-of-gosemsim/&#34;&gt;Proper use of
GOSemSim&lt;/a&gt;一文，列举了一些一模一样的代码，并告知CRAN，当ppiPre被CRAN移除时，我写信给编辑，这时候，编辑告诉我说他们准备要去联系作者了，这时候已经过去半年了，是的！你没有看错，半年过去了，编辑说他们还没去联系作者！我是不相信的。必然是联系了之后，有某些不为人知的原因，所以编辑态度反常，对抄袭这种打鸡血的事情，不断在打太极。
再过二个月，ppiPre的作者&lt;a href=&#34;http://web.xidian.edu.cn/dengyue/&#34;&gt;邓岳&lt;/a&gt;给我写了信：
&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/plagiarism/Screenshot%202015-06-08%2020.19.23.png&#34; alt=&#34;&#34; /&gt;
按照我在&lt;a href=&#34;http://ygc.name/2014/11/23/proper-use-of-gosemsim/&#34;&gt;Proper use of
GOSemSim&lt;/a&gt;中说的:&amp;ldquo;你们可以抄我的代码，但要注明出处，引用我的文章&amp;rdquo;，进行了修改。我给他回信就是我可以接受这样的版本。事实上如果他们基于现在的版本发表文章，我没有任何问题。但现在的版本是迫于抄袭暴光所做出的修改，而发表文章时，抄代码不注出处，更改函数名，刻意回避我的文章，而且对抄袭部分在他们的文章中宣称是自己的实现，这是恶意抄袭。
回信说现在的版本OK之后，我觉得这会给出错误信息，于是我再写一封信，强调抄袭的严重性：
&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/plagiarism/Screenshot%202015-06-08%2020.18.52.png&#34; alt=&#34;&#34; /&gt;
从他的回信中，我感觉得出，态度并不好。他觉得只是对open
source的版权不够重视而已，这不单单是版权的问题，还是出版伦理（publication
ethics）的问题，再怎么对版权无知，你不能发表文章说别人做的东西是你做的。
事实上邓岳并没有意识到问题，2015年继续发表抄袭的R包&lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pmc/articles/PMC4321842/&#34;&gt;HPOSim&lt;/a&gt;，这个包的代码抄袭了哈医大李霞实验室的&lt;a href=&#34;http://www.biomedcentral.com/1471-2105/12/266&#34;&gt;DOSim&lt;/a&gt;，而DOSim又是抄了&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/GOSim.html&#34;&gt;GOSim&lt;/a&gt;，我手贱对比了一下代码，竟然发现抄袭链条，而且抄袭者都发了文章，但发完文章，相应的包也就被CRAN移除了，要么是不维护，要么是主动要求移除。这个圈子好乱有木有！
我也没必要去跟他掐，而是等待编辑的处理，我期望编辑给他上一课，做科研没有这样的捷径。
最终编辑给出的邮件是：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-style=&amp;quot;word-wrap: break-word; white-space: pre-wrap; white-space: -moz-pre-wrap&amp;quot;&#34;&gt;Dear Guangchuang,

Looking back through my emails, I did receive a response back from the authors previously. They in turn said that the email address I had originally been trying to contact them with earlier last year was no longer in use, so they only received my emails when I found an additional alternative email address for the authors in my more recent emails.

Their explanation for the use of your code was that as the similarity measures were not their main focus of their study they had intended to either implement existing methods themselves or as in the case of GoSemSim, import the packages. However they had some problems with this and instead utilised the source code directly. Their rationale was that as the code was GPL licenced that this was acceptable, without realising that it was also required to cite the original source.

They say they have now created an updated version which they say has the following changes:

(1) ppiPre imports GOSemSim.
(2) ppiPre calls function geneSim() exported by GOSemSim to calculate Wang’s measure, instead of deriving code from GOSemSim directly.
(3) Several internal functions of ppiPre (TCSSGetAncestors, GetOntology, GetGOParents, GetLatestCommonAncestor, TCSSCompute_ICA) are derived from GOSemSim since GOSemSim don’t export them. In source code (.R) and manuals (.RD), acknowledgement has been added including the information of author and publication of GOSemSim.
(4) The author of GOSemSim (Guangchuang Yu) has been added in the ‘Author’ filed as contributor, as required by CRAN Repository Policy.
(5) All the information content data in data directory of ppiPre have been removed. ppiPre directly obtained data from GOSemSim.

This version has been available in SourceForge (https://sourceforge.net/p/ppipre/). And we are submitting ppiPre to CRAN. We will notify you after ppiPre is available on CRAN.

They also apologise for failing to cite you correctly and have asked if they may submit a correction to their article to rectify this. This would be within our policy if this sounds acceptable to you. Please let me know if you would need more details or if you need to get in touch with the authors
 
Best wishes,
Tim
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列举的几点跟邓岳给我的中文信一样，但多了两点： 1.
强调这是由于对版权的无知。 2. 抄袭的，不是文章的重点。
1是给自己找个借口，犯错是因为无知。2则淡化的抄袭的严重性。完全没有认错的意思。我们完全可以想像，所谓的“they
may submit a correction to their article to rectify
this”是什么样子的。所以我不能接受。
如果是真心认错，不遮遮掩掩，大胆地接受所犯的错误，那么发表声明，对此事进行道歉，我可以接受。
但在作者没有认错的情况下，在编辑最后明显倾向性的言语中，我无法接受，无知是对版权，你做科研，能发paper说别人的东西是自己的？总不能这样无知吧？代码2/3是抄GOSemSim的，并且文章中大篇幅在说实现了这些算法，还能睁眼说瞎话，说不是重点，就差说出来not
a big deal了。
我坚决不能同意，于是回信给了编辑，然而编辑又再次遁了！一年以来，不是我不断给编辑压力，编辑根本就无视我，而最后到了该给个说法的时候了，又继续玩消失。要说没有内幕，有人相信么？我反正是不信。
对于抄袭，这是铁的事实，开源和版权，不是重点，这本身是严重的出版伦理问题。而这一整年编辑的表现，又使这一事情，呈现出更严重的一面，编辑一直在袒护抄袭者，这是非常反常的，编辑对这种事情，一直应该是打鸡血的，他们善于站在道德的制高点，对科研工作者指手画脚，而BMC也一直以此宣传他们，像今年撤了四十多篇中国的文章，说是manipulating
review process，这种事情大家也是非常支持的，再怎么想文章，不能走偏门。
正如&lt;a href=&#34;http://www.stat.columbia.edu/~gelman/&#34;&gt;Andrew
Gelman&lt;/a&gt;在评论ppiPre抄袭这件事时说的：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-style=&amp;quot;word-wrap: break-word; white-space: pre-wrap; white-space: -moz-pre-wrap&amp;quot;&#34;&gt; we’re talking about people who already are skating on the ethical edge (as scientists, we should always respond to serious criticism; if we don’t, that’s bordering on ethical violation already)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;做为科研工作者，我们已经在道德的边缘上如履薄冰，对严重批评不做出回应，则已然是违反道德。
BMC现在就是在做违反道德的事情，非常反常！这可能是比&amp;rsquo;manipulating review
process&amp;rsquo; 更严重的mainipulating editorial
board。我知道掐这事于我没有任何好处，还会得罪很多人，但科研的正义必须维护，抄袭的行为必须打击，编辑部腐败更不能容忍！这件事情必须得有个说法。
ppiPre是发表在&lt;a href=&#34;http://www.aporc.org/ISB/2012/&#34;&gt;ISB
2012&lt;/a&gt;会议上的，这个会议明显是和BMC
Systems Biology合作的，会议文章发表在BMC Systems
Biology专刊上，而ppiPre的通讯作者&lt;a href=&#34;http://web.xidian.edu.cn/lgao/&#34;&gt;高琳&lt;/a&gt;是会议的Program
Chairs，而某些BMC Systems Biology的编委是General
Chairs，通讯作者和BMC编委是认识的，于是我空穴来风地猜测了一下，某些编委不顾道德伦理在袒护ppiPre的抄袭行为。事情真相到底是什么，期待BMC最终能给个说法。如果抄袭都能不撤稿，如果编委都能被操控，我们有什么理由相信科研！还不如趁早转工业界去赚点养家糊口的钱。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BMC favors source code plagiarism</title>
      <link>http://guangchuangyu.github.io/2015/05/bmc-favors-source-code-plagiarism/</link>
      <pubDate>Wed, 27 May 2015 13:38:44 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/05/bmc-favors-source-code-plagiarism/</guid>
      <description>&lt;p&gt;I found source code plagiarism a year ago and reported this case to &lt;a href=&#34;http://www.biomedcentral.com/bmcsystbiol&#34;&gt;BMC
Systems Biology&lt;/a&gt;:
&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/0f22f6ad87427adb59941160130b016ee1e41004/2015/plagiarism/Screenshot%202015-05-27%2019.56.58.png&#34; alt=&#34;&#34; /&gt;
I listed source code of many functions that are exactly copied from
&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/GOSemSim.html&#34;&gt;GOSemSim&lt;/a&gt;
with only function name changed in my email. The detail of source code
plagiarism can also be found at &lt;strong&gt;&lt;a href=&#34;http://ygc.name/2014/11/23/proper-use-of-gosemsim/&#34;&gt;Proper use of
GOSemSim&lt;/a&gt;&lt;/strong&gt;. I got
reply from the Editor 3 days after (see
&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/0f22f6ad87427adb59941160130b016ee1e41004/2015/plagiarism/Screenshot%202015-05-27%2019.58.16.png&#34;&gt;screenshot&lt;/a&gt;).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;MS: 1069569029107167
Research
ppiPre: predicting protein-protein interactions by combining heterogeneous features
BMC Systems Biology 2013, 7:S8&lt;/p&gt;

&lt;p&gt;Dear Dr Yu,&lt;/p&gt;

&lt;p&gt;Thank you for your message and bringing this to our attention. Firstly I would like to assure you that we do take cases of plagiarism very seriously. We are members of the Committee on Publication Ethics (&lt;a href=&#34;http://publicationethics.org&#34;&gt;http://publicationethics.org&lt;/a&gt;) follow their guidelines for circumstances such as this.&lt;/p&gt;

&lt;p&gt;As a first step we will be investigating the overlap between this publication in BMC Systems Biology and your previously published work, to establish the extent of the duplication.&lt;/p&gt;

&lt;p&gt;Could I just check, have you compared all the code in the ppiPRE article for similarity with your own code? That is, is there any possibility that more of your code has been duplicated without attribution? We will of course have to examine the code for unattributed use of other authors code in addition to your own&lt;/p&gt;

&lt;p&gt;Please do let us know if there are more relevant details you are aware of. We will be in contact again in due course as our investigations proceed, but do not hesitate to contact me in the meantime if you would like an update&lt;/p&gt;

&lt;p&gt;Best wishes,
Tim&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The editor assured me that they &amp;lsquo;&lt;strong&gt;do take cases of plagiarism very
seriously&lt;/strong&gt;&amp;rsquo; and will investigate the overlap. I was waiting for their
update. But 5 months passed, I never receive any reply from them even I
sent several emails to ask for updates. I have no idea how long their
&amp;lsquo;&lt;strong&gt;due course&lt;/strong&gt;&amp;rsquo; is. As I did not receive any reply, I wrote a blog post
(see &lt;a href=&#34;http://ygc.name/2014/11/23/proper-use-of-gosemsim/&#34;&gt;Proper use of
GOSemSim&lt;/a&gt;) to bring
this to the R community and CRAN did remove the ppiPre package at that
time. I told the Editor that this package had been removed from CRAN and
again asked for update. This time, he did reply me (see
&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/plagiarism/Screenshot%202015-05-27%2020.11.54.png&#34;&gt;screenshot&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;MS: 1069569029107167
Research
ppiPre: predicting protein-protein interactions by combining heterogeneous features
BMC Systems Biology 2013, 7:S8&lt;/p&gt;

&lt;p&gt;Dear Guangchuang,&lt;/p&gt;

&lt;p&gt;Thank you for your message and my apologies for the delay in this investigation. We had been trying to identify if any other code had also been plagiarised in the publication, although we did not find any evidence of this. Thank you also for drawing our attention to the removal of ppiPre from CRAN. We will be in touch with the article authors and will let you know when there is a further update.&lt;/p&gt;

&lt;p&gt;Regards,
Tim&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As we can find in the editor&amp;rsquo;s email, &amp;lsquo;&lt;strong&gt;We will be in touch with the
article authors&lt;/strong&gt;&amp;rsquo;, they never contact the authors after 5 months passed
from my report. In the following 2 months, I never receive any reply
again. I was angry and sent an email to several Editors of BMC to
complain that they are ruinning the reputation of BMC. Then again as
expected, I got email (see
&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/plagiarism/Screenshot%202015-05-27%2020.33.30.png&#34;&gt;screenshot&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dear Guangchuang,&lt;/p&gt;

&lt;p&gt;We are continuing to pursue this case. As you will understand, as well as the clear evidence of plagiarism of your code, we are concerned about possible unacknowledged reuse of other code as well. We have been trying to contact the authors for a full explanation, as this will affect how we can address the issue. Until very recently we had not been successful in contacting them, although they have very recently got back to us  and have said that they are considering their response, so we expect an update soon. From our perspective it is highly preferable for the authors to come clean about the issues and for any correction or retraction notice to come from them rather than from the editors, and for this reason it is often a drawn out process.&lt;/p&gt;

&lt;p&gt;Thank you for your patience, and I can again assure you that this will be addressed formally in due course.&lt;/p&gt;

&lt;p&gt;Yours sincerely,
Tim&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am very happy to see this as the editor told me they have contacted
the authors and will have an update soon. I wait another 3 months
without any update as usual. I asked for update again and this time they
did give me an update (see
&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/plagiarism/Screenshot%202015-04-23%2021.31.55.png&#34;&gt;screenshot&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dear Guangchuang,&lt;/p&gt;

&lt;p&gt;Looking back through my emails, I did receive a response back from the authors previously. They in turn said that the email address I had originally been trying to contact them with earlier last year was no longer in use, so they only received my emails when I found an additional alternative email address for the authors in my more recent emails.&lt;/p&gt;

&lt;p&gt;Their explanation for the use of your code was that as the similarity measures were not their main focus of their study they had intended to either implement existing methods themselves or as in the case of GoSemSim, import the packages. However they had some problems with this and instead utilised the source code directly. Their rationale was that as the code was GPL licenced that this was acceptable, without realising that it was also required to cite the original source.&lt;/p&gt;

&lt;p&gt;They say they have now created an updated version which they say has the following changes:&lt;/p&gt;

&lt;p&gt;(1) ppiPre imports GOSemSim.
(2) ppiPre calls function geneSim() exported by GOSemSim to calculate Wang’s measure, instead of deriving code from GOSemSim directly.
(3) Several internal functions of ppiPre (TCSSGetAncestors, GetOntology, GetGOParents, GetLatestCommonAncestor, TCSSCompute_ICA) are derived from GOSemSim since GOSemSim don’t export them. In source code (.R) and manuals (.RD), acknowledgement has been added including the information of author and publication of GOSemSim.
(4) The author of GOSemSim (Guangchuang Yu) has been added in the ‘Author’ filed as contributor, as required by CRAN Repository Policy.
(5) All the information content data in \data directory of ppiPre have been removed. ppiPre directly obtained data from GOSemSim.&lt;/p&gt;

&lt;p&gt;This version has been available in SourceForge (&lt;a href=&#34;https://sourceforge.net/p/ppipre/&#34;&gt;https://sourceforge.net/p/ppipre/&lt;/a&gt;). And we are submitting ppiPre to CRAN. We will notify you after ppiPre is available on CRAN.&lt;/p&gt;

&lt;p&gt;They also apologise for failing to cite you correctly and have asked if they may submit a correction to their article to rectify this. This would be within our policy if this sounds acceptable to you. Please let me know if you would need more details or if you need to get in touch with the authors&lt;/p&gt;

&lt;p&gt;Best wishes,
Tim&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After the changes, ppiPre is back to CRAN. Now in CRAN, what we can find
is that ppiPre use source code from GOSemSim properly with
acknowledgement. They removed all previous source tarball so that their
source code plagiarism was gone. Fortunately, github recorded all the
&lt;a href=&#34;https://github.com/cran/ppiPre/commit/c267700ca09a599dab77326959a0aa6a2980ceed&#34;&gt;changes&lt;/a&gt;.
The editor delay the processing to give the authors enough time to
remove their bad records. I think CRAN shouldn&amp;rsquo;t accept re-submitted
package if it was removed for plagiarism issue. In the email, the editor
not only conveyed explanation from the author, but also have expressed
their opinion: &amp;lsquo;&lt;strong&gt;They also apologise for failing to cite you correctly
and have asked if they may submit a correction to their article to
rectify this. This would be within our policy if this sounds acceptable
to you&lt;/strong&gt;&amp;rsquo;. This is why I think BMC do favor source code plagiarism.
Their judgement/opinion is not fair! I can&amp;rsquo;t accept their explanation
and replied to the editor (see
&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/plagiarism/Screenshot%202015-04-23%2021.45.33.png&#34;&gt;screenshot&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dear Prof. Sands,&lt;/p&gt;

&lt;p&gt;Thanks for your email. That makes it more clear.&lt;/p&gt;

&lt;p&gt;I can&amp;rsquo;t accept their explanation.&lt;/p&gt;

&lt;p&gt;The ppiPre is a die package, they didn&amp;rsquo;t update any source code or IC data after publication, with the fact that annotation packages for calculating IC data have updated several times. The recent changes were forced by my report of plagiarism.&lt;/p&gt;

&lt;p&gt;The recent update follows the requirement of GPL license which requires the derivative work also GPL licensed and acknowledge original works. That&amp;rsquo;s good, but remember it was forced to happen after my report of source code plagiarism.&lt;/p&gt;

&lt;p&gt;In the version they published the paper, it is indeed source codes copied without any acknowledgement and the proportion is very large (about &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt; of ppiPre was copied from GOSemSim).&lt;/p&gt;

&lt;p&gt;In their explanation, the author claimed that similarity measures were not their main focus. Can I ask what&amp;rsquo;s their main focus? SVM for protein-pretein interaction prediction as indicated in the title of the paper and in the package name? The SVM in that package is less than 80 lines, &lt;a href=&#34;https://github.com/cran/ppiPre/blob/master/R/SVMPredict.r&#34;&gt;https://github.com/cran/ppiPre/blob/master/R/SVMPredict.r&lt;/a&gt; with more than half in calling similarity measures, and several empty lines, paramter checking and preparing input and output. They did nothing in svm; they just call e1071::svm in line 28 and and e1071::predict in line 16 with default parameters (users even don&amp;rsquo;t have chance to change kernel function in their package). If that&amp;rsquo;s their main focus, what&amp;rsquo;s their contribution of their paper? In the Method session, their only use a small paragraph, Prediction framework, that only mention they used svm for prediction but with many paragraphs emphasizing they have implemented many GO semantic similarity measures. They call svm implemented in e1071 package to train features calculated by source codes from GOSemSim. How do they explain this?  I do have no idea of their so call main focus.&lt;/p&gt;

&lt;p&gt;They also mentioned that they had problems in importing GOSemSim. This is also un-acceptable. As they copied most of the functions without any change, it is easy to import these functions using GOSemSim:::un-exported_function if the function is not exported. If they don&amp;rsquo;t know this feature and did not google search how to do it. They should contact me for help or ask for my permission of re-using my codes. But they didn&amp;rsquo;t. They may believe they can use my source code freely as it is GPL licensed, they should know that open source license also have requirement of acknowledgement. Even that&amp;rsquo;s due to their ignorance, why they only change the function names to pretend that&amp;rsquo;s their own functions? If these are not their main focus, why more than half of the text in the paper explaining the calculation of these algorithms and claim they were implemented in their package?&lt;/p&gt;

&lt;p&gt;If they are not intended to do this, they will have acknowledgement in their source code, they will have citation in their paper and they will not just change function name that was copied without other changes. They intended to do so to cheat editor, reviewers and readers.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;(2) ppiPre calls function geneSim() exported by GOSemSim to calculate Wang’s measure, instead of deriving code from GOSemSim directly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Besides, most of the source code is not &amp;lsquo;derived&amp;rsquo; but copied from GOSemSim with only function name changed which can still be detected in the updated version, &lt;a href=&#34;https://github.com/cran/ppiPre/blob/master/R/GOKEGGSims.r&#34;&gt;https://github.com/cran/ppiPre/blob/master/R/GOKEGGSims.r&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Best Regards,
Guangchuang&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;AND again, the editor just ignore my email!&lt;/strong&gt; 1 year passed and the
case is very clear that they copied my source code and intended to
pretend that&amp;rsquo;s their original work and use it to publish a paper. That&amp;rsquo;s
definitely plagiarism. The editor replied me very quickly at the
beginning and assured me that BMC do take cases like this seriously. I
don&amp;rsquo;t know what happened after they contacted the authors. The editor
always ignore my email except I put some pressure to them, they delay
the process and try to persuade me that this is due to the author&amp;rsquo;s
ignorance of open source license and an apology from the author is
enough to solve this issue. If you see this post, you are welcome to
comment and please help share it to social media. This will helps to
give BMC some pressure and I will contact COPE if they won&amp;rsquo;t addressing
this.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>use clusterProfiler as an universal enrichment analysis tool</title>
      <link>http://guangchuangyu.github.io/2015/05/use-clusterprofiler-as-an-universal-enrichment-analysis-tool/</link>
      <pubDate>Mon, 11 May 2015 08:32:04 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/05/use-clusterprofiler-as-an-universal-enrichment-analysis-tool/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/clusterProfiler.html&#34;&gt;clusterProfiler&lt;/a&gt;
supports enrichment analysis of both hypergeometric test and gene set
enrichment analysis. It internally supports &lt;a href=&#34;http://geneontology.org/&#34;&gt;Gene
Ontology&lt;/a&gt; analysis of about 20 species, &lt;a href=&#34;http://www.genome.jp/kegg/&#34;&gt;Kyoto
Encyclopedia of Genes and Genomes (KEGG)&lt;/a&gt;
with all species that have annotation available in KEGG database, &lt;a href=&#34;http://david.abcc.ncifcrf.gov/summary.jsp&#34;&gt;DAVID
annotation&lt;/a&gt; (only
hypergeometric test supported), &lt;a href=&#34;http://disease-ontology.org/&#34;&gt;Disease
Ontology&lt;/a&gt; and &lt;a href=&#34;http://ncg.kcl.ac.uk/&#34;&gt;Network of Cancer
Genes&lt;/a&gt; (via
&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/DOSE.html&#34;&gt;DOSE&lt;/a&gt;
for human) and &lt;a href=&#34;http://www.reactome.org/&#34;&gt;Reactome Pathway&lt;/a&gt; (via
&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/ReactomePA.html&#34;&gt;ReactomePA&lt;/a&gt;
for several species). This is still not enough for users may want to
analyze their data with unsupported organisms, &lt;a href=&#34;http://geneontology.org/page/go-slim-and-subset-guide&#34;&gt;slim version of
GO&lt;/a&gt;, novel
functional annotation (eg GO via &lt;a href=&#34;https://www.blast2go.com/&#34;&gt;blastgo&lt;/a&gt;
and KEGG via &lt;a href=&#34;http://www.genome.jp/tools/kaas/&#34;&gt;KAAS&lt;/a&gt;), unsupported
ontology/pathway or customized annotation.
&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/clusterProfiler.html&#34;&gt;clusterProfiler&lt;/a&gt;
provides &lt;em&gt;enricher&lt;/em&gt; function for hypergeometric test and &lt;em&gt;GSEA&lt;/em&gt; function
for gene set enrichment analysis that are designed to accept user
defined annotation. They accept two additional parameters TERM2GENE and
TERM2NAME. As indicated in the parameter names, TERM2GENE is a
data.frame with first column of term ID and second column of
corresponding mapped gene and TERM2NAME is a data.frame with first
column of term ID and second column of corresponding term name.
TERM2NAME is optional. Here I used
&lt;a href=&#34;http://www.disgenet.org/web/DisGeNET/menu/home&#34;&gt;DisGeNET&lt;/a&gt; which
contains 381056 associations, between 16666 genes and 13172 diseases, as
an example to demonstrate the usage of &lt;em&gt;enricher&lt;/em&gt; and &lt;em&gt;GSEA&lt;/em&gt; functions.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; require(DOSE)
&amp;gt; require(clusterProfiler)
&amp;gt; data(geneList)
&amp;gt; deg &amp;lt;- names(geneList)[abs(geneList)&amp;gt;2]

## downloaded from http://www.disgenet.org/ds/DisGeNET/results/all_gene_disease_associations.tar.gz
&amp;gt; gda &amp;lt;- read.delim(&amp;quot;all_gene_disease_associations.txt&amp;quot;)
&amp;gt; dim(gda)
[1] 415681      9
&amp;gt; head(gda)
  geneId geneSymbol                                    geneName     diseaseId
1    540      ATP7B ATPase, Cu++ transporting, beta polypeptide umls:C0019202
2    540      ATP7B ATPase, Cu++ transporting, beta polypeptide umls:C0019202
3    540      ATP7B ATPase, Cu++ transporting, beta polypeptide umls:C0019202
4   4160       MC4R                     melanocortin 4 receptor umls:C0028754
5   4160       MC4R                     melanocortin 4 receptor umls:C0028754
6   3667       IRS1                insulin receptor substrate 1 umls:C0011860
                    diseaseName     score NumberOfPubmeds   associationType
1 Hepatolenticular Degeneration 0.9898764             229  GeneticVariation
2 Hepatolenticular Degeneration 0.9898764             229         Biomarker
3 Hepatolenticular Degeneration 0.9898764             229 AlteredExpression
4                       Obesity 0.9400000             234  GeneticVariation
5                       Obesity 0.9400000             234         Biomarker
6     Diabetes Mellitus, Type 2 0.9077659             106  GeneticVariation
                                            source
1 UNIPROT, CTD_human, MGD, RGD, GAD, LHGDN, BeFree
2 UNIPROT, CTD_human, MGD, RGD, GAD, LHGDN, BeFree
3 UNIPROT, CTD_human, MGD, RGD, GAD, LHGDN, BeFree
4        UNIPROT, CTD_human, MGD, RGD, GAD, BeFree
5        UNIPROT, CTD_human, MGD, RGD, GAD, BeFree
6        UNIPROT, CTD_human, MGD, RGD, GAD, BeFree
&amp;gt;
&amp;gt; disease2gene=gda[, c(&amp;quot;diseaseId&amp;quot;, &amp;quot;geneId&amp;quot;)]
&amp;gt; disease2name=gda[, c(&amp;quot;diseaseId&amp;quot;, &amp;quot;diseaseName&amp;quot;)]

&amp;gt; x = enricher(deg, TERM2GENE=disease2gene, TERM2NAME=disease2name)
&amp;gt; head(summary(x))
                         ID                  Description GeneRatio    BgRatio
umls:C0006142 umls:C0006142    Malignant neoplasm breast    89/196 3324/16666
umls:C0006826 umls:C0006826           NEOPLASM MALIGNANT   113/196 5102/16666
umls:C0678222 umls:C0678222             Breast Carcinoma    83/196 3072/16666
umls:C1458156 umls:C1458156 Recurrent Malignant Neoplasm    47/196 1158/16666
umls:C1458155 umls:C1458155             Breast Neoplasms    60/196 1981/16666
umls:C0600139 umls:C0600139           prostate carcinoma    56/196 2033/16666
                    pvalue     p.adjust       qvalue
umls:C0006142 4.934860e-16 9.845045e-13 8.249008e-13
umls:C0006826 3.071791e-15 3.064112e-12 2.567371e-12
umls:C0678222 5.894907e-15 3.920113e-12 3.284601e-12
umls:C1458156 3.230248e-14 1.611086e-11 1.349904e-11
umls:C1458155 1.724317e-12 6.880024e-10 5.764664e-10
umls:C0600139 5.025005e-10 1.670814e-07 1.399949e-07
geneID
umls:C0006142                                                                                                                                    4312/10874/991/6280/2305/9493/1062/4605/9833/9133/6279/10403/8685/597/7153/6278/259266/3627/27074/6241/7368/11065/55355/9582/55872/51203/3669/22974/10460/10563/4751/820/27338/890/983/4085/6362/9837/5918/332/3832/6286/5163/2146/3002/50852/7272/2568/9212/51659/1111/9055/4321/3620/6790/891/4174/9232/9370/1602/4629/771/3117/80129/23158/125/1311/5174/4250/2167/652/4036/4137/8839/2066/4693/3158/3169/1408/9547/2922/10647/5304/8614/2625/7802/9/5241/10551
umls:C0006826 4312/10874/55388/991/6280/2305/1062/3868/4605/9833/6279/10403/597/7153/6278/79733/3627/27074/6241/55165/9787/7368/11065/9582/55872/51203/3669/83461/22974/10460/10563/4751/6373/8140/1844/4283/27299/27338/890/9415/983/10232/4085/6362/5080/5918/81620/332/3832/6286/5163/2146/3002/50852/7272/2568/2842/9212/8715/1111/9055/3833/4321/11182/10112/3902/3620/3887/51514/6790/4521/891/8544/24137/10578/9232/9370/1602/3708/9122/10699/4629/771/3117/23158/125/4958/1311/2018/1308/4250/652/80736/4036/8839/2066/4693/3169/1408/9547/2922/1524/1580/10647/5304/8614/2625/7802/11122/9/5241/10551/4969
umls:C0678222                                                                                                                                                                    4312/10874/6280/2305/4605/9833/9133/6279/10403/8685/597/7153/6278/259266/3627/27074/6241/55165/11065/55355/9582/55872/51203/3669/10563/4751/820/27338/890/983/4085/6362/9837/5918/332/6286/5163/2146/3002/50852/7272/2568/9212/1111/9055/4321/3620/6790/891/9232/9370/1602/3708/4629/771/3117/23158/125/1311/5174/2532/4250/2167/652/4036/4137/8839/2066/4693/3158/3169/9547/2922/1524/10647/5304/8614/2625/7021/7802/9/5241/10551
umls:C1458156                                                                                                                                                                                                                                                                                                                                                           4312/991/6280/6279/8685/7153/6278/259266/3627/27074/6241/55165/9787/3669/22974/983/10232/4085/5080/332/2146/3002/50852/2568/9212/4321/3620/3887/6790/891/4174/9232/3708/4629/771/3117/23158/730/2018/4036/2066/9547/2625/9/5241/10551/57758
umls:C1458155                                                                                                                                                                                                                                                                                        4312/10874/2305/4605/9833/9133/10403/597/7153/6278/259266/3627/11065/9582/3669/10563/8140/820/1844/27338/890/9415/983/81620/332/2146/3002/2568/9212/51659/1111/9055/11182/3620/51514/6790/4521/891/8544/9232/9370/1602/771/23158/125/4250/2167/652/8839/2066/3169/10647/5304/8614/2625/7021/9/5241/10551/57758
umls:C0600139                                                                                                                                                                                                                                                                                                           4312/6280/2305/4605/9833/6279/7153/3627/6241/55165/11065/22974/10563/8140/1844/890/983/5080/5918/6286/5163/2146/9212/1111/4321/3620/6790/891/8544/9232/9370/8857/1602/3708/23090/4629/3117/23158/2532/2167/652/80736/4036/3169/9547/2922/11283/1524/5304/8614/2625/79689/11122/9/5241/10551
              Count
umls:C0006142    89
umls:C0006826   113
umls:C0678222    83
umls:C1458156    47
umls:C1458155    60
umls:C0600139    56
&amp;gt; 
&amp;gt; barplot(x)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/855c87b1b1387307a5dbd93f233957e7a37e7d30/2015/DisGeNET_barplot.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lang=&amp;quot;rsplus&amp;quot;&#34;&gt;&amp;gt; y = GSEA(geneList, TERM2GENE=disease2gene, TERM2NAME=disease2name)
&amp;gt; head(summary(y))
                         ID           Description setSize enrichmentScore
umls:C0001418 umls:C0001418        Adenocarcinoma    1224       0.2431172
umls:C0001973 umls:C0001973            Alcoholism     548      -0.3213479
umls:C0002171 umls:C0002171       Alopecia Areata      74       0.5122605
umls:C0003864 umls:C0003864             Arthritis     447       0.3140411
umls:C0003872 umls:C0003872  Arthritis, Psoriatic     122       0.4311280
umls:C0003873 umls:C0003873 Arthritis, Rheumatoid    1186       0.2855594
              pvalue p.adjust qvalues
umls:C0001418      0        0       0
umls:C0001973      0        0       0
umls:C0002171      0        0       0
umls:C0003864      0        0       0
umls:C0003872      0        0       0
umls:C0003873      0        0       0

&amp;gt; gseaplot(y, &amp;quot;umls:C0003872&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/DisGeNET_gseaplot.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>an example of drawing beast tree using ggtree</title>
      <link>http://guangchuangyu.github.io/2015/04/an-example-of-drawing-beast-tree-using-ggtree/</link>
      <pubDate>Wed, 01 Apr 2015 01:50:04 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/04/an-example-of-drawing-beast-tree-using-ggtree/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://beast.bio.ed.ac.uk/figtree&#34;&gt;FigTree&lt;/a&gt; is designed for viewing
beast output as demonstrated by their example data:
&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/Screenshot%202015-03-10%2018.15.57.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;BEAST output is well supported by
&lt;a href=&#34;https://github.com/GuangchuangYu/ggtree&#34;&gt;ggtree&lt;/a&gt; and it&amp;rsquo;s easy to
reproduce such a tree view.
&lt;a href=&#34;https://github.com/GuangchuangYu/ggtree&#34;&gt;ggtree&lt;/a&gt; supports parsing beast
output by read.beast function. We can visualize the tree directly by
using ggtree function. Since this is a time scale tree, we can set the
parameter &lt;strong&gt;&lt;em&gt;mrsd&lt;/em&gt;&lt;/strong&gt; to most recent sampling date.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;require(ggplot2)
require(ggtree)
x &amp;lt;- read.beast(&amp;quot;/Applications/FigTree/influenza.tree&amp;quot;)
cols &amp;lt;- scale_color(x, by=&amp;quot;height&amp;quot;)
ggtree(x, right=TRUE, mrsd=&amp;quot;2005-04-02&amp;quot;, color=cols) + theme_tree2() +
    geom_text(aes(x=max(x), label=label), size=1, color=cols, hjust=-.3) +
        scale_x_continuous(breaks=c(1992, 1995, 1997, 2000, 2002, 2005), minor_breaks=seq(1992, 2005, 1)) +
            geom_segment(aes(xend=max(x)+.20, yend=y), linetype=&amp;quot;dotted&amp;quot;, size=.1, color=cols) +
                theme(panel.grid.major   = element_line(color=&amp;quot;black&amp;quot;, size=.2),
                      panel.grid.minor   = element_line(color=&amp;quot;grey&amp;quot;, size=.2),
                      panel.grid.major.y = element_blank(),
                      panel.grid.minor.y = element_blank()) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/Screenshot%202015-03-10%2018.16.14.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use ggplot2</title>
      <link>http://guangchuangyu.github.io/2014/05/use-ggplot2/</link>
      <pubDate>Sun, 11 May 2014 06:17:56 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2014/05/use-ggplot2/</guid>
      <description>

&lt;h3 id=&#34;why-use-ggplot2:c38c63fac86d2290b6bc01da39216614&#34;&gt;Why use ggplot2&lt;/h3&gt;

&lt;p&gt;ggplot2是我见过最human friendly的画图软件，这得益于Leland
Wilkinson在他的著作《&lt;a href=&#34;http://book.douban.com/subject/10123863/&#34;&gt;The Grammar of
Graphics&lt;/a&gt;》中提出了一套图形语法，把图形元素抽象成可以自由组合的成分，Hadley
Wickham把这套想法在R中实现。&lt;/p&gt;

&lt;p&gt;为什么要学习ggplot2，可以参考&lt;a href=&#34;http://book.douban.com/subject/24527091/&#34;&gt;ggplot2:
数据分析与图形艺术&lt;/a&gt;的&lt;a href=&#34;https://github.com/cosname/ggplot2-translation/blob/master/preface.md&#34;&gt;序言&lt;/a&gt;（btw:
在序言的最后，我被致谢了）。&lt;/p&gt;

&lt;p&gt;Hadley
Wickham也给出&lt;a href=&#34;https://github.com/hadley/ggplot2/wiki/Why-use-ggplot2&#34;&gt;一堆理由&lt;/a&gt;让我们说服自己，我想再补充一点，Hadley
Wickham是学医出身的，做为学生物出身的人有什么理由不支持呢:)&lt;/p&gt;

&lt;p&gt;ggplot2基本要素&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;数据（Data）和映射（Mapping）&lt;/li&gt;
&lt;li&gt;几何对象（Geometric）&lt;/li&gt;
&lt;li&gt;标尺（Scale）&lt;/li&gt;
&lt;li&gt;统计变换（Statistics）&lt;/li&gt;
&lt;li&gt;坐标系统（Coordinante）&lt;/li&gt;
&lt;li&gt;图层（Layer）&lt;/li&gt;
&lt;li&gt;分面（Facet）&lt;/li&gt;
&lt;li&gt;主题（Theme）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里将从这些基本要素对ggplot2进行介绍。&lt;/p&gt;

&lt;h3 id=&#34;数据-data-和映射-mapping:c38c63fac86d2290b6bc01da39216614&#34;&gt;数据（Data）和映射（Mapping)&lt;/h3&gt;

&lt;p&gt;下面以一份钻石的数据为例，这份数据非常大，随机取一个子集来画图。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;require(ggplot2)
data(diamonds)
set.seed(42)
small &amp;lt;- diamonds[sample(nrow(diamonds), 1000), ]
head(small)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##       carat       cut color clarity depth table price    x    y    z
## 49345  0.71 Very Good     H     SI1  62.5    60  2096 5.68 5.75 3.57
## 50545  0.79   Premium     H     SI1  61.8    59  2275 5.97 5.91 3.67
## 15434  1.03     Ideal     F     SI1  62.4    57  6178 6.48 6.44 4.03
## 44792  0.50     Ideal     E     VS2  62.2    54  1624 5.08 5.11 3.17
## 34614  0.27     Ideal     E     VS1  61.6    56   470 4.14 4.17 2.56
## 27998  0.30   Premium     E     VS2  61.7    58   658 4.32 4.34 2.67
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(small)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##      carat              cut      color      clarity        depth     
##  Min.   :0.220   Fair     : 28   D:121   SI1    :258   Min.   :55.2  
##  1st Qu.:0.400   Good     : 88   E:186   VS2    :231   1st Qu.:61.0  
##  Median :0.710   Very Good:227   F:164   SI2    :175   Median :61.8  
##  Mean   :0.819   Premium  :257   G:216   VS1    :141   Mean   :61.7  
##  3rd Qu.:1.070   Ideal    :400   H:154   VVS2   : 91   3rd Qu.:62.5  
##  Max.   :2.660                   I:106   VVS1   : 67   Max.   :72.2  
##                                  J: 53   (Other): 37                 
##      table          price             x              y       
##  Min.   :50.1   Min.   :  342   Min.   :3.85   Min.   :3.84  
##  1st Qu.:56.0   1st Qu.:  990   1st Qu.:4.74   1st Qu.:4.76  
##  Median :57.0   Median : 2595   Median :5.75   Median :5.78  
##  Mean   :57.4   Mean   : 4111   Mean   :5.79   Mean   :5.79  
##  3rd Qu.:59.0   3rd Qu.: 5495   3rd Qu.:6.60   3rd Qu.:6.61  
##  Max.   :65.0   Max.   :18795   Max.   :8.83   Max.   :8.87  
##                                                              
##        z       
##  Min.   :2.33  
##  1st Qu.:2.92  
##  Median :3.55  
##  Mean   :3.57  
##  3rd Qu.:4.07  
##  Max.   :5.58  
## 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;画图实际上是把数据中的变量映射到图形属性上。以克拉(carat)数为X轴变量，价格(price)为Y轴变量。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p &amp;lt;- ggplot(data = small, mapping = aes(x = carat, y = price))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面这行代码把数据映射XY坐标轴上，需要告诉ggplot2，这些数据要映射成什么样的几何对象，下面以散点为例：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p + geom_point()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;几何对象将在下面的小节介绍，这一节，关注的是数据和图形属性之间的映射。&lt;/p&gt;

&lt;p&gt;如果想将切工（cut）映射到形状属性。只需要：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p &amp;lt;- ggplot(data=small, mapping=aes(x=carat, y=price, shape=cut))
p+geom_point()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig2.png&#34; alt=&#34;&#34; /&gt;
再比如我想将钻石的颜色（color）映射颜色属性：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p &amp;lt;- ggplot(data=small, mapping=aes(x=carat, y=price, shape=cut, colour=color))
p+geom_point()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;几何对象-geometric:c38c63fac86d2290b6bc01da39216614&#34;&gt;几何对象（Geometric）&lt;/h3&gt;

&lt;p&gt;在上面的例子中，各种属性映射由ggplot函数执行，只需要加一个图层，使用geom_point()告诉ggplot要画散点，于是所有的属性都映射到散点上。&lt;/p&gt;

&lt;p&gt;geom_point()完成的就是几何对象的映射，ggplot2提供了各种几何对象映射，如geom_histogram用于直方图，geom_bar用于画柱状图，geom_boxplot用于画箱式图等等。&lt;/p&gt;

&lt;p&gt;不同的几何对象，要求的属性会有些不同，这些属性也可以在几何对象映射时提供，比如上一图，也可以用以下语法来画：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p &amp;lt;- ggplot(small)
p+geom_point(aes(x=carat, y=price, shape=cut, colour=color))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ggplot2支持图层，我通常把不同的图层中共用的映射提供给ggplot函数，而某一几何对象才需要的映射参数提供给geom_xxx函数。&lt;/p&gt;

&lt;p&gt;这一小节我们来看一下各种常用的几何对象。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;直方图&lt;/strong&gt; 直方图最容易，提供一个x变量，画出数据的分布。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small)+geom_histogram(aes(x=price))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;同样可以根据另外的变量给它填充颜色，比如按不同的切工：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small)+geom_histogram(aes(x=price, fill=cut))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig5.png&#34; alt=&#34;&#34; /&gt;
也可以将其分开，side-by-side地画直方图。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small)+geom_histogram(aes(x=price, fill=cut), position=&amp;quot;dodge&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig6.png&#34; alt=&#34;&#34; /&gt;
还可以使用position=&amp;ldquo;fill&amp;rdquo;，按照相对比例来画。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small)+geom_histogram(aes(x=price, fill=cut), position=&amp;quot;fill&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;柱状图&lt;/strong&gt;
柱状图非常适合于画分类变量。在这里以透明度（clarity）变量为例。按照不同透明度的钻石的数目画柱状图。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small)+geom_bar(aes(x=clarity))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig8.png&#34; alt=&#34;&#34; /&gt;
柱状图两个要素，一个是分类变量，一个是数目，也就是柱子的高度。数目在这里不用提供，因为ggplot2会通过x变量计算各个分类的数目。&lt;/p&gt;

&lt;p&gt;当然你想提供也是可以的，通过stat参数，可以让geom_bar按指定高度画图，比如以下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot()+geom_bar(aes(x=c(LETTERS[1:3]),y=1:3), stat=&amp;quot;identity&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig24.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;柱状图和直方图是很像的，直方图把连续型的数据按照一个个等长的分区（bin）来切分，然后计数，画柱状图。而柱状图是分类数据，按类别计数。我们可以用前面直方图的参数来画side-by-side的柱状图，填充颜色或者按比例画图，它们是高度一致的。&lt;/p&gt;

&lt;p&gt;柱状图是用来表示计数数据的，但在生物界却被经常拿来表示均值，加上误差来表示数据分布，这可以通常图层来实现，我将在图层一节中给出实例。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;密度函数图&lt;/strong&gt;
说到直方图，就不得不说密度函数图，数据和映射和直方图是一样的，唯一不同的是几何对象，geom_histogram告诉ggplot要画直方图，而geom_density则说我们要画密度函数图，在我们熟悉前面语法的情况下，很容易画出：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small)+geom_density(aes(x=price, colour=cut))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig9.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small)+geom_density(aes(x=price,fill=clarity))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig10.png&#34; alt=&#34;&#34; /&gt;
colour参数指定的是曲线的颜色，而fill是往曲线下面填充颜色。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;箱式图&lt;/strong&gt;
数据量比较大的时候，用直方图和密度函数图是表示数据分布的好方法，而在数据量较少的时候，比如很多的生物实验，很多时候大家都是使用柱状图+errorbar的形式来表示，不过这种方法的信息量非常低，被&lt;a href=&#34;http://guangchuangyu.github.io/2014/03/boxplot/&#34;&gt;Nature
Methods吐槽&lt;/a&gt;，这种情况推荐使用boxplot。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small)+geom_boxplot(aes(x=cut, y=price,fill=color))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;geom_boxplot将数据映射到箱式图上，上面的代码，我们应该很熟悉了，按切工(cut)分类，对价格(price)变量画箱式图，再分开按照color变量填充颜色。
&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig11.png&#34; alt=&#34;&#34; /&gt;
ggplot2提供了很多的geom_xxx函数，可以满足我们对各种图形绘制的需求。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;geom_abline     geom_area   
geom_bar        geom_bin2d
geom_blank      geom_boxplot    
geom_contour    geom_crossbar
geom_density    geom_density2d  
geom_dotplot    geom_errorbar
geom_errorbarh  geom_freqpoly   
geom_hex        geom_histogram
geom_hline      geom_jitter     
geom_line       geom_linerange
geom_map        geom_path   
geom_point      geom_pointrange
geom_polygon    geom_quantile   
geom_raster     geom_rect
geom_ribbon     geom_rug    
geom_segment    geom_smooth
geom_step       geom_text   
geom_tile       geom_violin
geom_vline
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;标尺-scale:c38c63fac86d2290b6bc01da39216614&#34;&gt;标尺（Scale）&lt;/h3&gt;

&lt;p&gt;前面我们已经看到了，画图就是在做映射，不管是映射到不同的几何对象上，还是映射各种图形属性。这一小节介绍标尺，在对图形属性进行映射之后，使用标尺可以控制这些属性的显示方式，比如坐标刻度，可能通过标尺，将坐标进行对数变换；比如颜色属性，也可以通过标尺，进行改变。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small)+geom_point(aes(x=carat, y=price, shape=cut, colour=color))+scale_y_log10()+scale_colour_manual(values=rainbow(7))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig12.png&#34; alt=&#34;&#34; /&gt;
以数据（Data）和映射（Mapping)一节中所画散点图为例，将Y轴坐标进行log10变换，再自己定义颜色为彩虹色。&lt;/p&gt;

&lt;h3 id=&#34;统计变换-statistics:c38c63fac86d2290b6bc01da39216614&#34;&gt;统计变换（Statistics）&lt;/h3&gt;

&lt;p&gt;统计变换对原始数据进行某种计算，然后在图上表示出来，例如对散点图上加一条回归线。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small, aes(x=carat, y=price))+geom_point()+scale_y_log10()+stat_smooth()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig13.png&#34; alt=&#34;&#34; /&gt;
这里就不按颜色、切工来分了，不然ggplot会按不同的分类变量分别做回归，图就很乱，如果我们需要这样做，我们可以使用分面，这个将在后面介绍。&lt;/p&gt;

&lt;p&gt;这里，aes所提供的参数，就通过ggplot提供，而不是提供给geom_point，因为ggplot里的参数，相当于全局变量，geom_point()和stat_smooth()都知道x,y的映射，如果只提供给geom_point()，则相当于是局部变量，geom_point知道这种映射，而stat_smooth不知道，当然你再给stat_smooth也提供x,y的映射，不过共用的映射，还是提供给ggplot好。
ggplot2提供了多种统计变换方式：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stat_abline       stat_contour      stat_identity     stat_summary
stat_bin          stat_density      stat_qq           stat_summary2d
stat_bin2d        stat_density2d    stat_quantile     stat_summary_hex
stat_bindot       stat_ecdf         stat_smooth       stat_unique
stat_binhex       stat_function     stat_spoke        stat_vline
stat_boxplot      stat_hline        stat_sum          stat_ydensity
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;统计变换是非常重要的功能，我们可以自己写函数，基于原始数据做某种计算，并在图上表现出来，也可以通过它改变geom_xxx函数画图的默认统计参数。
比如我在&lt;a href=&#34;http://www.sciencedirect.com/science/article/pii/S1874391912007567&#34;&gt;Proteomic investigation of the interactome of FMNL1 in
hematopoietic cells unveils a role in calcium-dependent membrane
plasticity&lt;/a&gt;的图一中，就把boxplot的中位线替换成了平均值来作图。&lt;/p&gt;

&lt;h3 id=&#34;坐标系统-coordinante:c38c63fac86d2290b6bc01da39216614&#34;&gt;坐标系统（Coordinante）&lt;/h3&gt;

&lt;p&gt;坐标系统控制坐标轴，可以进行变换，例如XY轴翻转，笛卡尔坐标和极坐标转换，以满足我们的各种需求。&lt;/p&gt;

&lt;p&gt;坐标轴翻转由coord_flip()实现&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small)+geom_bar(aes(x=cut, fill=cut))+coord_flip()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig14.png&#34; alt=&#34;&#34; /&gt;
而转换成极坐标可以由coord_polar()实现：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small)+geom_bar(aes(x=factor(1), fill=cut))+coord_polar(theta=&amp;quot;y&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2.fig15.png&#34; alt=&#34;&#34; /&gt;
这也是为什么之前介绍常用图形画法时没有提及饼图的原因，饼图实际上就是柱状图，只不过是使用极坐标而已，柱状图的高度，对应于饼图的弧度，饼图并不推荐，因为人类的眼睛比较弧度的能力比不上比较高度（柱状图）&lt;/p&gt;

&lt;p&gt;还可以画靶心图：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small)+geom_bar(aes(x=factor(1), fill=cut))+coord_polar()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig16.png&#34; alt=&#34;&#34; /&gt;
以及风玫瑰图(windrose)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small)+geom_bar(aes(x=clarity, fill=cut))+coord_polar()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig17.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;图层-layer:c38c63fac86d2290b6bc01da39216614&#34;&gt;图层（Layer）&lt;/h3&gt;

&lt;p&gt;photoshop流行的原因在于PS
3.0时引入图层的概念，ggplot的牛B之处在于使用+号来叠加图层，这堪称是泛型编程的典范。
在前面散点图上，我们已经见识过，加上了一个回归线拟合的图层。&lt;/p&gt;

&lt;p&gt;有了图层的概念，使用ggplot画起图来，就更加得心应手。&lt;/p&gt;

&lt;p&gt;做为图层的一个很好的例子是&lt;a href=&#34;http://guangchuangyu.github.io/2011/08/the-batman-equation/&#34;&gt;蝙蝠侠logo&lt;/a&gt;，batman
logo由6个函数组成，在下面的例子中，我先画第一个函数，之后再加一个图层画第二个函数，不断重复这一过程，直到六个函数全部画好。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;require(ggplot2)
f1 &amp;lt;- function(x) {
    y1 &amp;lt;- 3*sqrt(1-(x/7)^2)
    y2 &amp;lt;- -3*sqrt(1-(x/7)^2)
    y &amp;lt;- c(y1,y2)
    d &amp;lt;- data.frame(x=x,y=y)
    d &amp;lt;- d[d$y &amp;gt; -3*sqrt(33)/7,]
    return(d)
}
 
x1 &amp;lt;- c(seq(3, 7, 0.001), seq(-7, -3, 0.001))
d1 &amp;lt;- f1(x1)
p1 &amp;lt;- ggplot(d1,aes(x,y)) + geom_point(color=&amp;quot;red&amp;quot;) +xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;) + theme_bw()
 
x2 &amp;lt;- seq(-4,4, 0.001)
y2 &amp;lt;- abs(x2/2)-(3*sqrt(33)-7)*x2^2/112-3 + sqrt(1-(abs(abs(x2)-2)-1)^2)
d2 &amp;lt;- data.frame(x2=x2, y2=y2)
p2 &amp;lt;- p1 + geom_point(data=d2, aes(x=x2,y=y2), color=&amp;quot;yellow&amp;quot;)
 
x3 &amp;lt;- c(seq(0.75,1,0.001), seq(-1,-0.75,0.001))
y3 &amp;lt;- 9-8*abs(x3)
d3 &amp;lt;- data.frame(x3=x3, y3=y3)
p3 &amp;lt;- p2+geom_point(data=d3, aes(x=x3,y=y3), color=&amp;quot;green&amp;quot;)
 
x4 &amp;lt;- c(seq(0.5,0.75,0.001), seq(-0.75,-0.5,0.001))
y4 &amp;lt;- 3*abs(x4)+0.75
d4 &amp;lt;- data.frame(x4=x4,y4=y4)
p4 &amp;lt;- p3+geom_point(data=d4, aes(x=x4,y=y4), color=&amp;quot;steelblue&amp;quot;)
  
x5 &amp;lt;- seq(-0.5,0.5,0.001)
y5 &amp;lt;- rep(2.25,length(x5))
d5 &amp;lt;- data.frame(x5=x5,y5=y5)
p5 &amp;lt;- p4+geom_point(data=d5, aes(x=x5,y=y5))
 
x6 &amp;lt;- c(seq(-3,-1,0.001), seq(1,3,0.001))
y6 &amp;lt;- 6 * sqrt(10)/7 +
    (1.5 - 0.5 * abs(x6)) * sqrt(abs(abs(x6)-1)/(abs(x6)-1)) -
    6 * sqrt(10) * sqrt(4-(abs(x6)-1)^2)/14
d6 &amp;lt;- data.frame(x6=x6,y6=y6)
p6 &amp;lt;- p5+geom_point(data=d6,aes(x=x6,y=y6), colour=&amp;quot;blue&amp;quot;)

multiplot &amp;lt;- function (..., plotlist = NULL, cols = 1, layout = NULL) {
    plots &amp;lt;- c(list(...), plotlist)
    numPlots = length(plots)
    if (is.null(layout)) {
        layout &amp;lt;- matrix(seq(1, cols * ceiling(numPlots/cols)),
            ncol = cols, nrow = ceiling(numPlots/cols))
    }
    if (numPlots == 1) {
        print(plots[[1]])
    }
    else {
        grid.newpage()
        pushViewport(viewport(layout = grid.layout(nrow(layout),
            ncol(layout))))
        for (i in 1:numPlots) {
            matchidx &amp;lt;- as.data.frame(which(layout == i, arr.ind = TRUE))
            print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                layout.pos.col = matchidx$col))
        }
    }
}

multiplot(p1,p2,p3,p4,p5,p6, cols=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_batman.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;分面-facet:c38c63fac86d2290b6bc01da39216614&#34;&gt;分面（Facet）&lt;/h3&gt;

&lt;p&gt;在《&lt;a href=&#34;http://book.douban.com/subject/24527091/&#34;&gt;ggplot2:
数据分析与图形艺术&lt;/a&gt;》一书的翻译中，一开始译者把facet翻译成切片，我在校稿的时候发现了，给他们写信，推荐翻译成分面，如果是slice这个词，翻译成切片倒是很精准，BSD的硬盘分区就叫slice，但facet从词源上看就是小脸的意思，翻译成分面才到位。给他们写信的时候，我还专门查了&lt;a href=&#34;http://dict.cnki.net/&#34;&gt;CNKI翻译助手&lt;/a&gt;，发现这词在信息学中，翻成分面早已是固定的。我感觉这是我对这本书翻译的最大贡献，校稿过程中发现的少量小问题远比不上这个关键词意思的把握上。&lt;/p&gt;

&lt;p&gt;分面可以让我们按照某种给定的条件，对数据进行分组，然后分别画图。
在统计变换一节中，提到如果按切工分组作回归线，显然图会很乱，有了分面功能，我们可以分别作图。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(small, aes(x=carat, y=price))+geom_point(aes(colour=cut))+scale_y_log10() +facet_wrap(~cut)+stat_smooth()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig18.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;主题-theme:c38c63fac86d2290b6bc01da39216614&#34;&gt;主题（Theme）&lt;/h3&gt;

&lt;p&gt;通过ggplot画图之后，我们可能还需要对图进行定制，像title, xlab,
ylab这些高频需要用到的，自不用说，ggplot2提供了ggtitle(),
xlab()和ylab()来实现。 比如：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p &amp;lt;- ggplot(small)+geom_boxplot(aes(x=cut, y=price,fill=color))
p + ggtitle(&amp;quot;Price vs Cut&amp;quot;)+xlab(&amp;quot;Cut&amp;quot;)+ylab(&amp;quot;Price&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2.fig19.png&#34; alt=&#34;&#34; /&gt;
但是这个远远满足不了需求，我们需要改变字体，字体大小，坐标轴，背景等各种元素，这需要通过theme()函数来完成。&lt;/p&gt;

&lt;p&gt;ggplot2提供一些已经写好的主题，比如&lt;code&gt;theme_grey()&lt;/code&gt;为默认主题，我经常用的&lt;code&gt;theme_bw()&lt;/code&gt;为白色背景的主题，还有&lt;code&gt;theme_classic()&lt;/code&gt;主题，和R的基础画图函数较像。&lt;/p&gt;

&lt;p&gt;别外ggthemes包提供了一些主题可供使用，包括：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;theme_economist theme_economist_white
theme_wsj       theme_excel
theme_few       theme_foundation
theme_igray     theme_solarized
theme_stata     theme_tufte
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;require(ggthemes)
p + theme_wsj()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig20.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在2013年发表的文章&lt;a href=&#34;http://pubs.rsc.org/en/content/articlelanding/2013/mt/c3mt00126a#!divAbstract&#34;&gt;Putative cobalt- and nickel-binding proteins and
motifs in Streptococcus
pneumoniae&lt;/a&gt;中的图3就是使用&lt;code&gt;theme_stata&lt;/code&gt;来画的。&lt;/p&gt;

&lt;p&gt;至于如何改变这些元素，我觉得我之前&lt;a href=&#34;http://guangchuangyu.github.io/2012/02/draw-chinese-character-jiong-using-ggplot2/&#34;&gt;画囧字的博文&lt;/a&gt;可以做为例子：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;f &amp;lt;- function(x) 1/(x^2-1)
x &amp;lt;- seq(-3,3, by=0.001)
y &amp;lt;- f(x)
d &amp;lt;- data.frame(x=x,y=y)
 
p &amp;lt;- ggplot()
p &amp;lt;- p+geom_rect(fill = &amp;quot;white&amp;quot;,color=&amp;quot;black&amp;quot;,size=3,
aes(NULL, NULL,xmin=-3, xmax=3,
ymin=-3,ymax=3, alpha=0.1))
 
p &amp;lt;- p + geom_line(data=d, aes(x,y), size=3)+ylim(-3,3)
theme_null &amp;lt;- function() {
    theme_bw() %+replace%
    theme(axis.text.x=element_blank(),
    axis.text.y=element_blank(),
    legend.position=&amp;quot;none&amp;quot;,
    panel.grid.minor=element_blank(),
    panel.grid.major=element_blank(),
    panel.background=element_blank(),
    axis.ticks=element_blank(),
    panel.border=element_blank())
}
 
p+theme_null()+xlab(&amp;quot;&amp;quot;)+ylab(&amp;quot;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2012/02/jiong.png&#34; alt=&#34;&#34; /&gt;
详细的说明，可以参考?theme的帮助文档。&lt;/p&gt;

&lt;h3 id=&#34;二维密度图:c38c63fac86d2290b6bc01da39216614&#34;&gt;二维密度图&lt;/h3&gt;

&lt;p&gt;在这个文档里，为了作图方便，我们使用diamonds数据集的一个子集，如果使用全集，数据量太大，画出来散点就糊了，这种情况可以使用二维密度力来呈现。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(diamonds, aes(carat, price))+ stat_density2d(aes(fill = ..level..), geom=&amp;quot;polygon&amp;quot;)+ scale_fill_continuous(high=&#39;darkred&#39;,low=&#39;darkgreen&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2.fig22.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;ggplot2实例:c38c63fac86d2290b6bc01da39216614&#34;&gt;ggplot2实例&lt;/h3&gt;

&lt;p&gt;蝴蝶图：详见《Modern Applied Statistics with S-PLUS》第一章。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;theta &amp;lt;- seq(0,24*pi, len=2000)
radius &amp;lt;- exp(cos(theta)) - 2*cos(4*theta) + sin(theta/12)^5
dd &amp;lt;- data.frame(x=radius*sin(theta), y=radius*cos(theta))
ggplot(dd, aes(x, y))+geom_path()+theme_null()+xlab(&amp;quot;&amp;quot;)+ylab(&amp;quot;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_fig25.png&#34; alt=&#34;&#34; /&gt;
这个图，我想展示的是对细节的修改上，在画囧字的时候，把画布上的元素都给清楚了，我把它定义为theme_null主题，在这里，直接应用，我们可以形成自己的画图风格，并写出自己的主题函数固定下来。&lt;/p&gt;

&lt;p&gt;最后以生物界中常用的柱状图+误差图为实例，展示ggplot2非常灵活的图层。以我2011年发表的文章&lt;a href=&#34;http://guangchuangyu.github.io/2010/11/phosphoproteome-profile-of-human-lung-cancer-cell-line-a549/&#34;&gt;Phosphoproteome
profile of human lung cancer cell line
A549&lt;/a&gt;中的westernblot数据为例。这个实例展示了图层，标尺，主题，注释和各种细节微调多种元素。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;Normal &amp;lt;- c(0.83, 0.79, 0.99, 0.69)
Cancer &amp;lt;- c(0.56, 0.56, 0.64, 0.52)
m &amp;lt;- c(mean(Normal), mean(Cancer))
s &amp;lt;- c(sd(Normal), sd(Cancer))
d &amp;lt;- data.frame(V=c(&amp;quot;Normal&amp;quot;, &amp;quot;Cancer&amp;quot;), mean=m, sd=s)
d$V &amp;lt;- factor(d$V, levels=c(&amp;quot;Normal&amp;quot;, &amp;quot;Cancer&amp;quot;))

p &amp;lt;- ggplot(d, aes(V, mean, fill=V, width=.5))
p &amp;lt;- p+geom_errorbar(aes(ymin=mean, ymax=mean+sd, width=.2), 
                     position=position_dodge(width=.8))
p &amp;lt;- p + geom_bar(stat=&amp;quot;identity&amp;quot;, position=position_dodge(width=.8), colour=&amp;quot;black&amp;quot;)
p &amp;lt;- p + scale_fill_manual(values=c(&amp;quot;grey80&amp;quot;, &amp;quot;white&amp;quot;))
p &amp;lt;- p + theme_bw() +theme(legend.position=&amp;quot;none&amp;quot;) + xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;)
p &amp;lt;- p + theme(axis.text.x = element_text(face=&amp;quot;bold&amp;quot;, size=12), 
               axis.text.y = element_text(face=&amp;quot;bold&amp;quot;, size=12))
p &amp;lt;- p+scale_y_continuous(expand=c(0,0), limits=c(0, 1.2), breaks=seq(0, 1.2, by=.2))
p &amp;lt;- p+geom_segment(aes(x=1, y=.98, xend=1, yend=1.1))
p &amp;lt;- p+geom_segment(aes(x=2, y=.65, xend=2, yend=1.1))
p &amp;lt;- p+geom_segment(aes(x=1, y=1.1, xend=2, yend=1.1))
p &amp;lt;- p + annotate(&amp;quot;text&amp;quot;, x=1.5, y=1.08, label=&amp;quot;*&amp;quot;)
print(p)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2014/05/ggplot2_26.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;更多实例，可以参考我使用&lt;a href=&#34;http://guangchuangyu.github.io/2011/08/ggplot2-version-of-figures-in-25-recipes-for-getting-started-with-r/&#34;&gt;ggplot2实现&lt;25 Recipes for Getting Started
with
R&gt;一书中的所有图片&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>boxplot</title>
      <link>http://guangchuangyu.github.io/2014/03/boxplot/</link>
      <pubDate>Tue, 04 Mar 2014 12:23:16 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2014/03/boxplot/</guid>
      <description>&lt;p&gt;生物坑很多人画图只会直方图，统计只会T检验，在暨大见过太多的学生连T检验都不会，分不清SEM和SD的差别，也不清楚T检验那几个简单参数的含义。我写统计笔记也是因为不想重复性地跟学生讲解T检验。&lt;/p&gt;

&lt;p&gt;Barplot和T
test一样普遍而流行，barplot适合于表示计数数据和比例，显示比例也可以用pie
plot，但直方图比饼图要好，因为人类的眼睛适合于比较高度，而不是弧度。&lt;/p&gt;

&lt;p&gt;多半时候生物学数据并非简单的计数数据，对于测量数据，在展示数据分布时，很多人会使用他们熟悉的barplot，用高度来表示mean，然后再加上errorbar，这样展示数据，信息量是非常低的，使用boxplot能够提供更多的数据分布信息，能更好地展现数据，但可能很多人只会在excel里画barplot，Nature
Methods
2013年的文章中有100个barplot图，而只有20个boxplot图，从这里就可以看出来，用boxplot的人远远没有barplot多，于是NPG怒了，写了两篇专栏文章&lt;a href=&#34;http://www.nature.com/nmeth/journal/v11/n2/full/nmeth.2807.html&#34;&gt;Points
of View: Bar charts and box
plots&lt;/a&gt;和&lt;a href=&#34;http://www.nature.com/nmeth/journal/v11/n2/full/nmeth.2813.html&#34;&gt;Points
of Significance: Visualizing samples with box
plots&lt;/a&gt;并且发表了一篇&lt;a href=&#34;http://www.nature.com/nmeth/journal/v11/n2/full/nmeth.2811.html&#34;&gt;BoxPlotR:
a web tool for generation of box
plots&lt;/a&gt;方便大家画boxplot，如此简单的web
tool能够发Nature Methods，实在是让人羡慕妒忌恨啊。 Boxplot从1970年由John
Tukey提示，到现在已经40多年了，他有很多的变种，比如&lt;a href=&#34;http://guangchuangyu.github.io/2012/02/violin-plot/&#34;&gt;violin
plot&lt;/a&gt;和&lt;a href=&#34;http://www.jstatsoft.org/v28/c01/paper&#34;&gt;beanplot&lt;/a&gt;，violin
plot和beanplot是很像的，都是把box换成density
curve，beanplot另外把数据点在中间用线条表示出来，这个很容易加上去，正如我在&lt;a href=&#34;http://guangchuangyu.github.io/2012/02/violin-plot/&#34;&gt;violin
plot&lt;/a&gt;中把数据点加进去一样。同样可以把数据点加进boxplot中，还有很多手法来展示boxplot，比如可以用缺口(notch)形式来画boxplot，可以把中间的宽度表示为median值的置信空间。boxplot的宽度可以用样本量来归一化，如果sample
size足够大的话，$mean\pm errorbar$
不会超出box，可以很清晰把这个信息也展示在boxplot中。&lt;/p&gt;

&lt;p&gt;如果数据量比较少，可以用scatterplot+errorbar的形式展示数据，正如我在&lt;a href=&#34;http://pubs.rsc.org/en/Content/ArticleLanding/2011/MB/C0MB00055H#!divAbstract&#34;&gt;Phosphoproteome
profile of human lung cancer cell line
A549&lt;/a&gt;中所画的&lt;a href=&#34;http://www.douban.com/photos/photo/1560368200/&#34;&gt;图7&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>draw chinese character Jiong using ggplot2</title>
      <link>http://guangchuangyu.github.io/2012/02/draw-chinese-character-jiong-using-ggplot2/</link>
      <pubDate>Fri, 17 Feb 2012 09:26:50 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2012/02/draw-chinese-character-jiong-using-ggplot2/</guid>
      <description>&lt;p&gt;The Chinese character Jiong (囧) is now widely used for expressing ideas
or feelings such as annoyance, shock, embarrassment, awkwardness, scorn.&lt;/p&gt;

&lt;p&gt;The function plot of &lt;code&gt;y=1/(x^2-1)&lt;/code&gt; looks very similar of this symbol.&lt;/p&gt;

&lt;p&gt;I use ggplot2 to draw the symbol of Jiong.&lt;/p&gt;

&lt;p&gt;It looks like:
&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2012/02/jiong.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The function line is very easy to draw, but the options to hone this
graph need some tricky tips.&lt;/p&gt;

&lt;p&gt;The source code for generating this plot can be found in
&lt;a href=&#34;https://gist.github.com/1852074&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>violin plot</title>
      <link>http://guangchuangyu.github.io/2012/02/violin-plot/</link>
      <pubDate>Tue, 07 Feb 2012 06:31:55 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2012/02/violin-plot/</guid>
      <description>&lt;p&gt;ggplot2 0.9.0版本将在3月1号发布，改动较大，最近bioc mailing
list也有诸多讨论，因为它导致了某些包编译出错（估计是NAMESPACE引起的）。&lt;/p&gt;

&lt;p&gt;按照hadley的说法是这是为了把他个人的项目变成一个社区项目。&lt;/p&gt;

&lt;p&gt;大多数的改动对用户来说是invisible的，用roxygen2去注释函数，核心代码使用S3重写，分离出一些特性（scales包）等。&lt;/p&gt;

&lt;p&gt;最明显的是现在画图速度变快了，不过我觉得最让人兴奋的是&lt;code&gt;guide_legend()&lt;/code&gt;和&lt;code&gt;guide_colorbar()&lt;/code&gt;两个函数，可以修改legend.&lt;/p&gt;

&lt;p&gt;画图的话，加了四个函数&lt;code&gt;geom_map()&lt;/code&gt;, &lt;code&gt;geom_raster()&lt;/code&gt;,
&lt;code&gt;geom_dotplot()&lt;/code&gt;和&lt;code&gt;geom_violin()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;violin plot结合了box plot和kernel density estimate，有了它，box
plot基本可以扔了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2012/02/violin.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2 Version of Figures in &lt;25 Recipes for Getting Started with R&gt;</title>
      <link>http://guangchuangyu.github.io/2011/08/ggplot2-version-of-figures-in-25-recipes-for-getting-started-with-r/</link>
      <pubDate>Tue, 16 Aug 2011 18:26:36 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2011/08/ggplot2-version-of-figures-in-25-recipes-for-getting-started-with-r/</guid>
      <description>&lt;p&gt;In order to provide an option to compare graphs produced by basic
internal plot function and ggplot2, I have recreated the figures in the
book, &lt;a href=&#34;http://book.douban.com/subject/5992544/&#34;&gt;25 Recipes for Getting Started with
R&lt;/a&gt;, with ggplot2.&lt;/p&gt;

&lt;p&gt;The code used to create the images is in separate paragraphs, allowing
easy comparison. &lt;strong&gt;1.16 Creating a Scatter Plot&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;    plot(cars)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/scatter1.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/scatter1.png&#34; alt=&#34;&#34; title=&#34;scatter1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;    ggplot(cars,aes(speed,dist))+geom_point()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/scatter2.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/scatter2.png&#34; alt=&#34;&#34; title=&#34;scatter2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.17 Creating a Bar Chart&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;    heights &amp;lt;- tapply(airquality$Temp, airquality$Month, mean)
    par(mfrow=c(1,2))
    barplot(heights)
    barplot(heights,
            main=&amp;quot;Mean Temp. by Month&amp;quot;,
            names.arg=c(&amp;quot;May&amp;quot;, &amp;quot;Jun&amp;quot;, &amp;quot;Jul&amp;quot;, &amp;quot;Aug&amp;quot;, &amp;quot;Sep&amp;quot;),
            ylab=&amp;quot;Temp (deg. F)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/bar1.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/bar1.png&#34; alt=&#34;&#34; title=&#34;bar1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;require(gridExtra)
heights=ddply(airquality,.(Month), mean)
heights$Month=as.character(heights$Month)
p1 &amp;lt;- ggplot(heights, aes(x=Month,weight=Temp))+
    geom_bar()
p2 &amp;lt;- ggplot(heights, aes(x=factor(Month,
                          labels=c(&amp;quot;May&amp;quot;, &amp;quot;Jun&amp;quot;, &amp;quot;Jul&amp;quot;, &amp;quot;Aug&amp;quot;, &amp;quot;Sep&amp;quot;)),
                          weight=Temp))+
    geom_bar()+
    ggtitle(&amp;quot;Mean Temp. By Month&amp;quot;) +
    xlab(&amp;quot;&amp;quot;) +
    ylab(&amp;quot;Temp (deg. F)&amp;quot;)

grid.arrange(p1,p2, ncol=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/bar2.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/bar2.png&#34; alt=&#34;&#34; title=&#34;bar2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.18 Creating a Box Plot&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;y &amp;lt;- c(-5, rnorm(100), 5)
boxplot(y)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/box1.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/box1.png&#34; alt=&#34;&#34; title=&#34;box1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot()+geom_boxplot(aes(x=factor(1),y=y))+xlab(&amp;quot;&amp;quot;)+ylab(&amp;quot;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/box2.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/box2.png&#34; alt=&#34;&#34; title=&#34;box2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.19 Creating a Histogram&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;    data(Cars93, package=&amp;quot;MASS&amp;quot;)
    par(mfrow=c(1,2))
    hist(Cars93$MPG.city)
    hist(Cars93$MPG.city, 20)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/hist1.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/hist1.png&#34; alt=&#34;&#34; title=&#34;hist1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;    p &amp;lt;- ggplot(Cars93, aes(MPG.city))
    p1 &amp;lt;- p + geom_histogram(binwidth=diff(range(Cars93$MPG.city))/5)
    p2 &amp;lt;- p + geom_histogram(binwidth=diff(range(Cars93$MPG.city))/20)
    grid.arrange(p1,p2, ncol=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/hist2.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/hist2.png&#34; alt=&#34;&#34; title=&#34;hist2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.23 Diagnosing a Linear Regression&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;    data(iris)
    m = lm( Sepal.Length ~ Sepal.Width, data=iris)
    par(mfrow=c(2,2))
    plot(m)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/lm1.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/lm1.png&#34; alt=&#34;&#34; title=&#34;lm1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;r &amp;lt;- residuals(m)
yh &amp;lt;- predict(m)
scatterplot &amp;lt;- function(x,y,
                        title=&amp;quot;&amp;quot;,
                        xlab=&amp;quot;&amp;quot;,
                        ylab=&amp;quot;&amp;quot;) {
    d &amp;lt;- data.frame(x=x,y=y)
    p &amp;lt;- ggplot(d, aes(x=x,y=y)) +
            geom_point() +
                ggtitle(title) +
                    xlab(xlab) +
                        ylab(ylab)
    return(p)
    }
p1 &amp;lt;- scatterplot(yh,r,
                  title=&amp;quot;Residuals vs Fitted&amp;quot;,
                  xlab=&amp;quot;Fitted values&amp;quot;,
                  ylab=&amp;quot;Residuals&amp;quot;)
p1 &amp;lt;- p1 +geom_hline(yintercept=0)+geom_smooth()

s &amp;lt;- sqrt(deviance(m)/df.residual(m))
rs &amp;lt;- r/s

qqplot &amp;lt;- function(y,
                   distribution=qnorm,
                   title=&amp;quot;Normal Q-Q&amp;quot;,
                   xlab=&amp;quot;Theretical Quantiles&amp;quot;,
                   ylab=&amp;quot;Sample Quantiles&amp;quot;) {
    require(ggplot2)
    x &amp;lt;- distribution(ppoints(y))
    d &amp;lt;- data.frame(x=x, y=sort(y))
    p &amp;lt;- ggplot(d, aes(x=x, y=y)) +
        geom_point() +
            geom_line(aes(x=x, y=x)) +
                ggtitle(title=title) +
                    xlab(xlab) +
                        ylab(ylab)
    return(p)
}

p2 &amp;lt;- qqplot(rs, ylab=&amp;quot;Standardized residuals&amp;quot;)

sqrt.rs &amp;lt;- sqrt(abs(rs))
p3 &amp;lt;- scatterplot(yh,sqrt.rs,
                  title=&amp;quot;Scale-Location&amp;quot;,
                  xlab=&amp;quot;Fitted values&amp;quot;,
                  ylab=expression(sqrt(&amp;quot;Standardized residuals&amp;quot;)))
p3 &amp;lt;- p3 + geom_smooth()

hii &amp;lt;- lm.influence(m, do.coef = FALSE)$hat
p4 &amp;lt;- scatterplot(hii,rs)
p4 &amp;lt;- p4+
    geom_hline(yintercept=0)+
    geom_smooth() +
    geom_text(aes(x=min(hii)+diff(range(hii))*0.3,
                  y=min(rs)+diff(range(rs))*0.04,
                  label=&amp;quot;--   Cook&#39;s distance&amp;quot;, size=3))+
    theme(legend.position=&amp;quot;none&amp;quot;)

grid.arrange(p1,p2,p3,p4, ncol=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/lm2.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/lm2.png&#34; alt=&#34;&#34; title=&#34;lm2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>the batman equation</title>
      <link>http://guangchuangyu.github.io/2011/08/the-batman-equation/</link>
      <pubDate>Sat, 13 Aug 2011 17:44:42 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2011/08/the-batman-equation/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.hardocp.com/news/2011/07/29/batman_equation/&#34;&gt;HardOCP&lt;/a&gt; has
an image with an equation which apparently draws the Batman logo.
&lt;img src=&#34;http://www.hardocp.com/images/news/1311973762NiYVK7SXvm_1_1_l.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;$((\frac{x}{7})^2 \cdot \sqrt{\frac{||x|-3|}{(|x|-3)}}+
(\frac{y}{3})^2 \cdot \sqrt{\frac{|y+3 \cdot
\frac{\sqrt{33}}{7}|}{y+3 \cdot \frac{\sqrt{33}}{7}}}-1) \cdot
(|\frac{x}{2}|-((3 \cdot \frac{\sqrt{33}-7)}{112}) \cdot
x^2-3+\sqrt{1-(||x|-2|-1)^2}-y) \cdot (9 \cdot
\sqrt{\frac{|(|x|-1) \cdot (|x|-0.75)|}{((1-|x|)*(|x|-0.75))}}-8
\cdot |x|-y) \cdot (3 \cdot |x|+0.75 \cdot \sqrt{\frac{|(|x|-0.75)
\cdot (|x|-0.5)|}{((0.75-|x|) \cdot (|x|-0.5))}}-y) \cdot (2.25
\cdot \sqrt{\frac{|(x-0.5) \cdot (x+0.5)|}{((0.5-x) \cdot
(0.5+x))}}-y) \cdot (\frac{6 \cdot \sqrt{10}}{7}+(1.5-0.5 \cdot
|x|) \cdot \sqrt{\frac{||x|-1|}{|x|-1}}-(\frac{6 \cdot
\sqrt{10}}{14}) \cdot \sqrt{4-(|x|-1)^2}-y) =0$&lt;/p&gt;

&lt;p&gt;This function is very delightful for drawing such a graph, but write it
down in latex is very tedious. As a product of factors is 0 if and only
if any one of them is 0, multiplying these six factors puts the curves
together. This graph is no more than the combination of six curves.&lt;/p&gt;

&lt;p&gt;All these six curves are very simple, for instance, the first factor is
the ellipse $(\frac{x}{7})^2 + (\frac{y}{3})^2 = 1 $, in the
region where &lt;code&gt;|x|&amp;gt;3&lt;/code&gt; and &lt;code&gt;y&amp;gt;-3$\sqrt{33}$/7&lt;/code&gt;; the region
were restricted by $\sqrt{\frac{||x|-3|}{(|x|-3)}} $ and
$\sqrt{\frac{|y+3 \cdot \frac{\sqrt{33}}{7}|}{y+3 \cdot \frac{\sqrt{33}}{7}}}$&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s what I got from the equation using ggplot2&amp;hellip;
&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2011/08/X.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;
require(ggplot2)

f1 &amp;lt;- function(x) {
    y1 &amp;lt;- 3*sqrt(1-(x/7)^2)
    y2 &amp;lt;- -3*sqrt(1-(x/7)^2)
    y &amp;lt;- c(y1,y2)
    d &amp;lt;- data.frame(x=x,y=y)
    d &amp;lt;- d[d$y &amp;gt; -3*sqrt(33)/7,]
    return(d)
}

x1 &amp;lt;- c(seq(3, 7, 0.001), seq(-7, -3, 0.001))
d1 &amp;lt;- f1(x1)
p1 &amp;lt;- ggplot(d1,aes(x,y)) + geom_point(color=&amp;quot;red&amp;quot;)

x2 &amp;lt;- seq(-4,4, 0.001)
y2 &amp;lt;- abs(x2/2)-(3*sqrt(33)-7)*x2^2/112-3 + sqrt(1-(abs(abs(x2)-2)-1)^2)

#only work with ggplot2 &amp;lt;= 0.8.9
#p2 &amp;lt;- p1 + geom_point(aes(x=x2,y=y2), color=&amp;quot;yellow&amp;quot;) 

# in ggplot2 0.9.0, should be:
d2 &amp;lt;- data.frame(x2=x2, y2=y2)
p2 &amp;lt;- p1 + geom_point(data=d2, aes(x=x2,y=y2), color=&amp;quot;yellow&amp;quot;)



x3 &amp;lt;- c(seq(0.75,1,0.001), seq(-1,-0.75,0.001))
y3 &amp;lt;- 9-8*abs(x3)
#p3 &amp;lt;- p2+geom_point(aes(x=x3,y=y3), color=&amp;quot;green&amp;quot;)
d3 &amp;lt;- data.frame(x3=x3, y3=y3)
p3 &amp;lt;- p2+geom_point(data=d3, aes(x=x3,y=y3), color=&amp;quot;green&amp;quot;)


x4 &amp;lt;- c(seq(0.5,0.75,0.001), seq(-0.75,-0.5,0.001))
y4 &amp;lt;- 3*abs(x4)+0.75
#p4 &amp;lt;- p3+geom_point(aes(x=x4,y=y4), color=&amp;quot;steelblue&amp;quot;)
d4 &amp;lt;- data.frame(x4=x4,y4=y4)
p4 &amp;lt;- p3+geom_point(data=d4, aes(x=x4,y=y4), color=&amp;quot;steelblue&amp;quot;)


x5 &amp;lt;- seq(-0.5,0.5,0.001)
y5 &amp;lt;- rep(2.25,length(x5))
#p5 &amp;lt;- p4+geom_point(aes(x=x5,y=y5))
d5 &amp;lt;- data.frame(x5=x5,y5=y5)
p5 &amp;lt;- p4+geom_point(data=d5, aes(x=x5,y=y5))

x6 &amp;lt;- c(seq(-3,-1,0.001), seq(1,3,0.001))
y6 &amp;lt;- 6 * sqrt(10)/7 +
    (1.5 - 0.5 * abs(x6)) * sqrt(abs(abs(x6)-1)/(abs(x6)-1)) -
    6 * sqrt(10) * sqrt(4-(abs(x6)-1)^2)/14
#p6 &amp;lt;- p5+geom_point(aes(x=x6,y=y6), colour=&amp;quot;blue&amp;quot;)
d6 &amp;lt;- data.frame(x6=x6,y6=y6)
p6 &amp;lt;- p5+geom_point(data=d6,aes(x=x6,y=y6), colour=&amp;quot;blue&amp;quot;)

p &amp;lt;- p6+theme_bw()
print(p)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>