<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alignment on Guangchuang YU</title>
    <link>https://guangchuangyu.github.io/tags/alignment/</link>
    <description>Recent content in Alignment on Guangchuang YU</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 Guangchuang YU</copyright>
    <lastBuildDate>Wed, 30 Mar 2016 13:40:22 +0800</lastBuildDate>
    <atom:link href="/tags/alignment/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>yet an unofficial BioEdit for OSX</title>
      <link>https://guangchuangyu.github.io/2016/03/yet-an-unofficial-bioedit-for-osx/</link>
      <pubDate>Wed, 30 Mar 2016 13:40:22 +0800</pubDate>
      
      <guid>https://guangchuangyu.github.io/2016/03/yet-an-unofficial-bioedit-for-osx/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.mbio.ncsu.edu/bioedit/bioedit.html&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://www.mbio.ncsu.edu/bioedit/Banner1.GIF&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To my knowledge, &lt;a href=&#34;http://www.mbio.ncsu.edu/bioedit/bioedit.html&#34; target=&#34;_blank&#34;&gt;BioEdit&lt;/a&gt; is the most comprehensive biological sequence alignment editor. Most of my labmates run this software using &lt;code&gt;Parallels Desktop&lt;/code&gt;. For some of them, BioEdit is the only reason to install &lt;code&gt;Parallels Desktop&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I need to edit my alignment recently, and install it in my iMac using &lt;a href=&#34;https://www.winehq.org/&#34; target=&#34;_blank&#34;&gt;Wine&lt;/a&gt;, which is a compatibility layer for running Windows applications on POSIX-compliant OS. Although it is famous in Linux community for many years, many OSX users never heard of it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;I came out with an idea that maybe I can pack all the components into an OSX application bundle. Then I can share it with my labmates and others. I don&amp;rsquo;t need to teach them how to install and config &lt;code&gt;Wine&lt;/code&gt; and they can just drag the App to &lt;code&gt;/Applications&lt;/code&gt; and double click to run it.&lt;/p&gt;

&lt;p&gt;It took me one night to create this App. You can click &lt;a href=&#34;https://gitlab.com/GuangchuangYu/BioEdit-OSX/raw/master/BioEdit.dmg&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; to download it.&lt;/p&gt;

&lt;p&gt;As usual, you can install it by dragging the App to &lt;code&gt;Applications&lt;/code&gt; folder and open it by double click. It works just like native App.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2016/Screenshot 2016-03-30 11.30.03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;BTW: If you don&amp;rsquo;t have &lt;a href=&#34;http://xquartz.macosforge.org/&#34; target=&#34;_blank&#34;&gt;XQuartz&lt;/a&gt; installed, you need one for running &lt;code&gt;BioEdit&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sequence alignment program written in R</title>
      <link>https://guangchuangyu.github.io/2008/08/sequence-alignment-program-written-in-r/</link>
      <pubDate>Thu, 07 Aug 2008 12:13:35 +0800</pubDate>
      
      <guid>https://guangchuangyu.github.io/2008/08/sequence-alignment-program-written-in-r/</guid>
      <description>&lt;p&gt;Sequence alignment by dynamic programming.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; ## by YGC
 ## August 7, 2008
 ## guangchuangyu AT gmail.com

 X &amp;lt;- &#39;TTCATA&#39;
 Y &amp;lt;- &#39;TGCTCGTA&#39;

 seq.x &amp;lt;- unlist(strsplit(X, &#39;&#39;))
 seq.y &amp;lt;- unlist(strsplit(Y, &#39;&#39;))

 seq.x &amp;lt;- c(0,seq.x)
 seq.y &amp;lt;- c(0,seq.y)

 match &amp;lt;- 5
 mismatch &amp;lt;- -2
 indel &amp;lt;- -6

 ## initial the score matrix
 score &amp;lt;- matrix(NA, length(seq.x), length(seq.y))
 score[,1] &amp;lt;- sapply(1:length(seq.x)-1, function(x) x * indel)
 score[1,] &amp;lt;- sapply(1:length(seq.y)-1, function(x) x * indel)

 ## The dynamic programming, global alignment recursion
 for (i in 2:length(seq.x)) {
     for (j in 2:length(seq.y)){
         # seq.x[i] , seq.y[j] are aligned
         if ( seq.x[i] == seq.y[j]) {
             score[i,j] &amp;lt;- score[i-1, j-1] + match
         } else {
             score[i,j] &amp;lt;- score[i-1, j-1] + mismatch
         }
         # seq.x[i] aligned to -
         sc &amp;lt;- score[i-1,j] + indel
         if (sc &amp;gt; score[i,j])
             score[i,j] = sc
         # seq.y[j] aligned to -
         sc &amp;lt;- score[i,j-1] + indel
         if (sc &amp;gt; score[i,j])
             score[i,j] = sc
     }
 }

 ## Traceback
 i &amp;lt;- length(seq.x)
 j &amp;lt;- length(seq.y)
 ax &amp;lt;- character()
 ay &amp;lt;- character()
 while (i &amp;gt; 1 &amp;amp;&amp;amp; j &amp;gt;1){
     ## case 1: best was seq.x[i] aligned to seq.y[j]
     sc &amp;lt;- score[i-1,j-1]
     if (seq.x[i] == seq.y[j]) {
         sc &amp;lt;- sc + match
     } else {
         sc &amp;lt;- sc + mismatch
     }
     if (sc == score[i,j]) {
         ax &amp;lt;- c(seq.x[i], ax)
         ay &amp;lt;- c(seq.y[j], ay)
         i &amp;lt;- i -1
         j &amp;lt;- j-1
         next
     }
     ## case 2: best was seq.x[i] aligned to -
     if ((score[i-1,j] + indel) == score[i,j]) {
         ax &amp;lt;- c(seq.x[i], ax)
         ay &amp;lt;- c(&amp;quot;-&amp;quot;, ay)
         i &amp;lt;- i-1
         next
     }
     ## case 3: best was seq.y[j] aligned to -
     if ((score[i,j-1] + indel) == score[i,j]) {
         ax &amp;lt;- c(&amp;quot;-&amp;quot;, ax)
         ay &amp;lt;- c(seq.y[j], ay)
         j &amp;lt;- j-1
         next
     }
 }

 cat (&amp;quot;Sequence X: &amp;quot;, X,&amp;quot;\n&amp;quot;)
 cat (&amp;quot;Sequence Y: &amp;quot;, Y,&amp;quot;\n&amp;quot;)
 cat (&amp;quot;Scoring system: &amp;quot;, match, &amp;quot; for match; &amp;quot;, mismatch, &amp;quot; for mismatch; &amp;quot;, indel, &amp;quot; for gap&amp;quot;, &amp;quot;\n\n&amp;quot;)

 cat (&amp;quot;Dynamic programming matrix:\n&amp;quot;)
 print (score)

 cat (&amp;quot;\nAlignment:\n&amp;quot;)
 cat (paste(ax, collapse=&#39;&#39;), &amp;quot;\n&amp;quot;)
 cat (paste(ay, collapse=&#39;&#39;),&amp;quot;\n\n&amp;quot;)
 cat (&amp;quot;Optimum alignment score: &amp;quot;, score[length(score)],&amp;quot;\n&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guangchuangyu.github.io/blog_images/2008/11/ralignment.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
