<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ggplot2 on Guangchuang YU</title>
    <link>http://guangchuangyu.github.io/tags/ggplot2/</link>
    <description>Recent content in Ggplot2 on Guangchuang YU</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 Guangchuang YU</copyright>
    <lastBuildDate>Sun, 20 Mar 2016 10:50:00 +0800</lastBuildDate>
    <atom:link href="http://guangchuangyu.github.io/tags/ggplot2/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>embed images in ggplot2 via subview and annotate a phylogenetic tree with images using inset function</title>
      <link>http://guangchuangyu.github.io/post/r/ggtree/2016_inset_img/</link>
      <pubDate>Sun, 20 Mar 2016 10:50:00 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/post/r/ggtree/2016_inset_img/</guid>
      <description>&lt;p&gt;I extended the &lt;a href=&#34;http://guangchuangyu.github.io/2015/08/subview/&#34;&gt;subview&lt;/a&gt; function to support embed image file in a &lt;code&gt;ggplot&lt;/code&gt; object.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set.seed(123)
d = data.frame(x=rnorm(10), y=rnorm(10))

imgfile &amp;lt;- tempfile(, fileext=&amp;quot;.png&amp;quot;)
download.file(&amp;quot;https://avatars1.githubusercontent.com/u/626539?v=3&amp;amp;u=e731426406dd3f45a73d96dd604bc45ae2e7c36f&amp;amp;s=140&amp;quot;,
              destfile=imgfile, mode=&#39;wb&#39;)

p = ggplot(d, aes(x, y))
subview(p, imgfile, x=d$x[1], y=d$y[1]) + geom_point(size=5)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/subview_img.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In &lt;a href=&#34;http://guangchuangyu.github.io/2015/08/ggtree-annotate-phylogenetic-tree-with-local-images/&#34;&gt;previous post&lt;/a&gt;, I have introduced using &lt;code&gt;annotation_image&lt;/code&gt; function for annotating tips with local images.&lt;/p&gt;

&lt;p&gt;Now with the updated &lt;code&gt;subview&lt;/code&gt; function, we can use &lt;a href=&#34;http://guangchuangyu.github.io/2016/01/annotate-a-phylogenetic-tree-with-insets/&#34;&gt;inset&lt;/a&gt; function to annotate nodes/tips with image files and/or subplots.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set.seed(2015-12-31)
tr &amp;lt;- rtree(15)
p &amp;lt;- ggtree(tr)

img &amp;lt;- list(imgfile, imgfile)
names(img) &amp;lt;- c(&amp;quot;18&amp;quot;, &amp;quot;22&amp;quot;)
inset(p, img)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://guangchuangyu.github.io/blog_images/Bioconductor/ggtree/inset_with_img.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;PS: As I got more and more emails from ggtree users, I created a forum, &lt;a href=&#34;https://groups.google.com/forum/#!forum/bioc-ggtree&#34;&gt;https://groups.google.com/forum/#!forum/bioc-ggtree&lt;/a&gt;. With this forum, &lt;code&gt;ggtree&lt;/code&gt; users can help each others and also solutions posted in the forum can help other peoples when they google search their questions. Please join the forum and post your questions if you have any.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Font Awesome supported in emojifont</title>
      <link>http://guangchuangyu.github.io/post/r/emojifont/emojifont-fontawesome/</link>
      <pubDate>Mon, 14 Mar 2016 16:21:11 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/post/r/emojifont/emojifont-fontawesome/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://cran.r-project.org/package=emojifont&#34;&gt;&lt;img src=&#34;http://www.r-pkg.org/badges/version/emojifont&#34; alt=&#34;CRAN_Status_Badge&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/emojifont/index.html&#34;&gt;&lt;code&gt;emojifont&lt;/code&gt;&lt;/a&gt; is available in CRAN, you can use the following command to install it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;emojifont&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An example of using emoji font in R plot is showed below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2016/douban_emoji.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;More examples can be found in &lt;a href=&#34;http://guangchuangyu.github.io/2015/12/use-emoji-font-in-r/&#34;&gt;the post&lt;/a&gt; and online &lt;a href=&#34;https://cran.r-project.org/web/packages/emojifont/vignettes/emojifont.html&#34;&gt;vignette&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I found &lt;a href=&#34;http://fontawesome.io/cheatsheet/&#34;&gt;FontAwesome&lt;/a&gt; is quite interesting especially in technical world. In &lt;code&gt;emojifont&lt;/code&gt; (version &amp;gt;= 0.3), I have packed the &lt;code&gt;Font Awesome&lt;/code&gt;. So that we can use this fancy font in both base and ggplot2 graphics.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;load.fontawesome()

set.seed(2016-03-09)
fa &amp;lt;- fontawesome(c(&#39;fa-github&#39;, &#39;fa-weibo&#39;, &#39;fa-twitter&#39;, &#39;fa-android&#39;, &#39;fa-coffee&#39;))
d &amp;lt;- data.frame(x=rnorm(20), 
                y=rnorm(20), 
                label=sample(fa, 20, replace=T))

ggplot(d, aes(x, y, color=label)) + 
    geom_text(aes(label=label), family=&#39;fontawesome-webfont&#39;)+
    xlab(NULL)+ylab(NULL)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/emojifont/master/vignettes/figures/fontawesome.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Have fun with &lt;code&gt;emojifont&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/drob&#34;&gt;@drob&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/guangchuangyu&#34;&gt;@guangchuangyu&lt;/a&gt;, this is data surfing (air quality data from Lima, Peru) / fun with your cool pkgs. Thx! &lt;a href=&#34;https://t.co/ikinjxDDZL&#34;&gt;pic.twitter.com/ikinjxDDZL&lt;/a&gt;&lt;/p&gt;&amp;mdash; MaÃ«lle Salmon (@ma_salmon) &lt;a href=&#34;https://twitter.com/ma_salmon/status/706490090609106944&#34;&gt;March 6, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>use emoji font in R</title>
      <link>http://guangchuangyu.github.io/post/r/emojifont/emojifont/</link>
      <pubDate>Wed, 16 Dec 2015 11:11:11 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/post/r/emojifont/emojifont/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2015/Screenshot 2015-12-16 10.55.49.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I have played with emoji in &lt;code&gt;R&lt;/code&gt; for a while. My solution of using it is different from what implemented in &lt;a href=&#34;https://github.com/dill/emoGG/&#34;&gt;emoGG&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;emoGG&lt;/code&gt; is a good attemp to add &lt;code&gt;emoji&lt;/code&gt; in &lt;code&gt;ggplot2&lt;/code&gt;. It render &lt;code&gt;emoji&lt;/code&gt; picture (png) and creat a layer, &lt;code&gt;geom_emoji&lt;/code&gt;, to add emoji.&lt;/p&gt;

&lt;p&gt;In my opinion, &lt;code&gt;emoji&lt;/code&gt; should be treated as ordinary font in user interface, albeit it maynot be true internally.&lt;/p&gt;

&lt;p&gt;It would be more flexible if we can use emoji as ordinary font and in this way user don&amp;rsquo;t need to learn extra stuff.&lt;/p&gt;

&lt;p&gt;I implemented my solution of using &lt;code&gt;emoji&lt;/code&gt; in the R package &lt;a href=&#34;https://github.com/GuangchuangYu/emojifont&#34;&gt;emojifont&lt;/a&gt;. The package is very simple, pack some emoji fonts (currently only &lt;a href=&#34;https://github.com/MorbZ/OpenSansEmoji&#34;&gt;OpenSansEmoji.ttf&lt;/a&gt;) and use &lt;a href=&#34;https://github.com/yixuan/showtext&#34;&gt;showtext&lt;/a&gt; to render the fonts, then we can use the font in either base plot or ggplot2.&lt;/p&gt;

&lt;h1 id=&#34;emojifont:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;emojifont&lt;/h1&gt;

&lt;h2 id=&#34;installation:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;Installation&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;devtools::install_github(&amp;quot;GuangchuangYu/emojifont&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;load-emoji-font:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;load Emoji font&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;library(emojifont)
## list available emoji fonts
list.emojifonts()

## [1] &amp;quot;OpenSansEmoji.ttf&amp;quot;

## load selected emoji font
load.emojifont(&#39;OpenSansEmoji.ttf&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;emoji-characters:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;Emoji characters&lt;/h1&gt;

&lt;p&gt;To use &lt;code&gt;emoji&lt;/code&gt;, we need to use their corresponding unicode. Emoji unicode can be found in &lt;a href=&#34;http://apps.timwhitlock.info/emoji/tables/unicode&#34;&gt;http://apps.timwhitlock.info/emoji/tables/unicode&lt;/a&gt;, or searched using &lt;a href=&#34;https://github.com/richfitz/remoji&#34;&gt;remoji&lt;/a&gt; package.&lt;/p&gt;

&lt;h1 id=&#34;emoji-in-r-plot:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;Emoji in R plot&lt;/h1&gt;

&lt;h2 id=&#34;base-plot:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;base plot&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;require(remoji)
set.seed(123)
x &amp;lt;- rnorm(10)
set.seed(321)
y &amp;lt;- rnorm(10)
plot(x, y, cex=0)
text(x, y, labels=emoji(&#39;cow&#39;), cex=1.5, col=&#39;steelblue&#39;, family=&#39;OpenSansEmoji&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/emojifont/master/vignettes/figures/base_emoji-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;ggplot2:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;ggplot2&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;d &amp;lt;- data.frame(x=x, y=y,
     label = sample(c(emoji(&#39;cow&#39;), emoji(&#39;camel&#39;)), 10, replace=TRUE),
     type = sample(LETTERS[1:3], 10, replace=TRUE))
require(ggplot2)
ggplot(d, aes(x, y, color=type, label=label)) + 
    geom_text(family=&amp;quot;OpenSansEmoji&amp;quot;, size=5)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/emojifont/master/vignettes/figures/ggplot_emoji-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We can also use &lt;code&gt;emoji&lt;/code&gt; in title, legend or axis label.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dd=data.frame(x=emoji(c(&amp;quot;satisfied&amp;quot;, &amp;quot;disapointed&amp;quot;)), y=c(50, 10))
emoji_text=element_text(family=&amp;quot;OpenSansEmoji&amp;quot;, size=20)
ggplot(dd, aes(x, y)) + geom_bar(stat=&#39;identity&#39;, aes(fill=x)) + 
     ggtitle(paste(emoji(c(&amp;quot;+1&amp;quot;, &amp;quot;-1&amp;quot;)), collapse=&amp;quot; &amp;quot;))+ 
        theme(axis.text.x = emoji_text, legend.text=emoji_text, title=emoji_text) + 
            xlab(NULL)+ylab(NULL)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2015/Screenshot 2015-12-16 11.10.51.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;ggtree:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;ggtree&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;require(ggtree)
require(colorspace)

tree_text=paste0(
    &amp;quot;(&amp;quot;,&amp;quot;(&amp;quot;,&amp;quot;(&amp;quot;,
       &amp;quot;(&amp;quot;,
            &amp;quot;(&amp;quot;,
               emoji(&amp;quot;cow&amp;quot;), &amp;quot;,&amp;quot;,
               &amp;quot;(&amp;quot;,
                  emoji(&amp;quot;whale&amp;quot;),&amp;quot;,&amp;quot;,
                  emoji(&amp;quot;dolphin&amp;quot;),
               &amp;quot;)&amp;quot;,
            &amp;quot;),&amp;quot;,
            &amp;quot;(&amp;quot;,
               emoji(&#39;pig2&#39;),&amp;quot;,&amp;quot;,
               emoji(&#39;boar&#39;),
            &amp;quot;)&amp;quot;,
       &amp;quot;),&amp;quot;,
       emoji(&amp;quot;camel&amp;quot;),
    &amp;quot;),&amp;quot;, emoji(&amp;quot;fish&amp;quot;), &amp;quot;),&amp;quot;, 
emoji(&amp;quot;seedling&amp;quot;), &amp;quot;);&amp;quot;)

ggtree(read.tree(text=tree_text)) + xlim(NA, 7) +
   geom_tiplab(family=&amp;quot;OpenSansEmoji&amp;quot;, size=10,
               color=rainbow_hcl(8))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/emojifont/master/vignettes/figures/ggtree_emoji-1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;apple-color-emoji:eff1c6109e2664cf9357286de69e0f0b&#34;&gt;Apple Color Emoji&lt;/h1&gt;

&lt;p&gt;Although &lt;code&gt;R&lt;/code&gt;&amp;rsquo;s graphical devices don&amp;rsquo;t support &lt;code&gt;AppleColorEmoji&lt;/code&gt; font, it&amp;rsquo;s still possible to use it. We can export the &lt;code&gt;plot&lt;/code&gt; to &lt;code&gt;svg&lt;/code&gt; file and render it in &lt;code&gt;Safari&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library(gridSVG)
p &amp;lt;-  ggtree(read.tree(text=tree_text), size=2) + geom_tiplab(size=20)
p &amp;lt;- p %&amp;gt;% phylopic(&amp;quot;79ad5f09-cf21-4c89-8e7d-0c82a00ce728&amp;quot;, color=&amp;quot;firebrick&amp;quot;, alpha = .3)
p &amp;lt;- p + xlim(NA, 7) + ylim(NA, 8.5)
p
ps = grid.export(&amp;quot;emoji.svg&amp;quot;, addClass=T)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/emojifont/master/vignettes/figures/apple_emoji.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use ggplot2</title>
      <link>http://guangchuangyu.github.io/post/r/ggplot2/2014_use-ggplot2/</link>
      <pubDate>Sun, 11 May 2014 06:17:56 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/post/r/ggplot2/2014_use-ggplot2/</guid>
      <description>

&lt;h3 id=&#34;why-use-ggplot2:c38c63fac86d2290b6bc01da39216614&#34;&gt;Why use ggplot2&lt;/h3&gt;

&lt;p&gt;ggplot2æ¯æè§è¿æhuman friendlyçç»å¾è½¯ä»¶ï¼è¿å¾çäºLeland
Wilkinsonå¨ä»çèä½ã&lt;a href=&#34;http://book.douban.com/subject/10123863/&#34;&gt;The Grammar of
Graphics&lt;/a&gt;ãä¸­æåºäºä¸å¥å¾å½¢è¯­æ³ï¼æå¾å½¢åç´ æ½è±¡æå¯ä»¥èªç±ç»åçæåï¼Hadley
Wickhamæè¿å¥æ³æ³å¨Rä¸­å®ç°ã&lt;/p&gt;

&lt;p&gt;ä¸ºä»ä¹è¦å­¦ä¹ ggplot2ï¼å¯ä»¥åè&lt;a href=&#34;http://book.douban.com/subject/24527091/&#34;&gt;ggplot2: æ°æ®åæä¸å¾å½¢èºæ¯&lt;/a&gt;ç&lt;a href=&#34;https://github.com/cosname/ggplot2-translation/blob/master/preface.md&#34;&gt;åºè¨&lt;/a&gt;ï¼btw:
å¨åºè¨çæåï¼æè¢«è´è°¢äºï¼ã&lt;/p&gt;

&lt;p&gt;Hadley
Wickhamä¹ç»åº&lt;a href=&#34;https://github.com/hadley/ggplot2/wiki/Why-use-ggplot2&#34;&gt;ä¸å çç±&lt;/a&gt;è®©æä»¬è¯´æèªå·±ï¼ææ³åè¡¥åä¸ç¹ï¼Hadley
Wickhamæ¯å­¦å»åºèº«çï¼åä¸ºå­¦çç©åºèº«çäººæä»ä¹çç±ä¸æ¯æå¢:)&lt;/p&gt;

&lt;p&gt;ggplot2åºæ¬è¦ç´ &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;æ°æ®ï¼Dataï¼åæ å°ï¼Mappingï¼&lt;/li&gt;
&lt;li&gt;å ä½å¯¹è±¡ï¼Geometricï¼&lt;/li&gt;
&lt;li&gt;æ å°ºï¼Scaleï¼&lt;/li&gt;
&lt;li&gt;ç»è®¡åæ¢ï¼Statisticsï¼&lt;/li&gt;
&lt;li&gt;åæ ç³»ç»ï¼Coordinanteï¼&lt;/li&gt;
&lt;li&gt;å¾å±ï¼Layerï¼&lt;/li&gt;
&lt;li&gt;åé¢ï¼Facetï¼&lt;/li&gt;
&lt;li&gt;ä¸»é¢ï¼Themeï¼&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;è¿éå°ä»è¿äºåºæ¬è¦ç´ å¯¹ggplot2è¿è¡ä»ç»ã&lt;/p&gt;

&lt;h3 id=&#34;æ°æ®-data-åæ å°-mapping:c38c63fac86d2290b6bc01da39216614&#34;&gt;æ°æ®ï¼Dataï¼åæ å°ï¼Mapping)&lt;/h3&gt;

&lt;p&gt;ä¸é¢ä»¥ä¸ä»½é»ç³çæ°æ®ä¸ºä¾ï¼è¿ä»½æ°æ®éå¸¸å¤§ï¼éæºåä¸ä¸ªå­éæ¥ç»å¾ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require(ggplot2)
data(diamonds)
set.seed(42)
small &amp;lt;- diamonds[sample(nrow(diamonds), 1000), ]
head(small)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##       carat       cut color clarity depth table price    x    y    z
## 49345  0.71 Very Good     H     SI1  62.5    60  2096 5.68 5.75 3.57
## 50545  0.79   Premium     H     SI1  61.8    59  2275 5.97 5.91 3.67
## 15434  1.03     Ideal     F     SI1  62.4    57  6178 6.48 6.44 4.03
## 44792  0.50     Ideal     E     VS2  62.2    54  1624 5.08 5.11 3.17
## 34614  0.27     Ideal     E     VS1  61.6    56   470 4.14 4.17 2.56
## 27998  0.30   Premium     E     VS2  61.7    58   658 4.32 4.34 2.67
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;summary(small)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##      carat              cut      color      clarity        depth     
##  Min.   :0.220   Fair     : 28   D:121   SI1    :258   Min.   :55.2  
##  1st Qu.:0.400   Good     : 88   E:186   VS2    :231   1st Qu.:61.0  
##  Median :0.710   Very Good:227   F:164   SI2    :175   Median :61.8  
##  Mean   :0.819   Premium  :257   G:216   VS1    :141   Mean   :61.7  
##  3rd Qu.:1.070   Ideal    :400   H:154   VVS2   : 91   3rd Qu.:62.5  
##  Max.   :2.660                   I:106   VVS1   : 67   Max.   :72.2  
##                                  J: 53   (Other): 37                 
##      table          price             x              y       
##  Min.   :50.1   Min.   :  342   Min.   :3.85   Min.   :3.84  
##  1st Qu.:56.0   1st Qu.:  990   1st Qu.:4.74   1st Qu.:4.76  
##  Median :57.0   Median : 2595   Median :5.75   Median :5.78  
##  Mean   :57.4   Mean   : 4111   Mean   :5.79   Mean   :5.79  
##  3rd Qu.:59.0   3rd Qu.: 5495   3rd Qu.:6.60   3rd Qu.:6.61  
##  Max.   :65.0   Max.   :18795   Max.   :8.83   Max.   :8.87  
##                                                              
##        z       
##  Min.   :2.33  
##  1st Qu.:2.92  
##  Median :3.55  
##  Mean   :3.57  
##  3rd Qu.:4.07  
##  Max.   :5.58  
## 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ç»å¾å®éä¸æ¯ææ°æ®ä¸­çåéæ å°å°å¾å½¢å±æ§ä¸ãä»¥åæ(carat)æ°ä¸ºXè½´åéï¼ä»·æ ¼(price)ä¸ºYè½´åéã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(data = small, mapping = aes(x = carat, y = price))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ä¸é¢è¿è¡ä»£ç ææ°æ®æ å°XYåæ è½´ä¸ï¼éè¦åè¯ggplot2ï¼è¿äºæ°æ®è¦æ å°æä»ä¹æ ·çå ä½å¯¹è±¡ï¼ä¸é¢ä»¥æ£ç¹ä¸ºä¾ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p + geom_point()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;å ä½å¯¹è±¡å°å¨ä¸é¢çå°èä»ç»ï¼è¿ä¸èï¼å³æ³¨çæ¯æ°æ®åå¾å½¢å±æ§ä¹é´çæ å°ã&lt;/p&gt;

&lt;p&gt;å¦ææ³å°åå·¥ï¼cutï¼æ å°å°å½¢ç¶å±æ§ãåªéè¦ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(data=small, mapping=aes(x=carat, y=price, shape=cut))
p+geom_point()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;åæ¯å¦ææ³å°é»ç³çé¢è²ï¼colorï¼æ å°é¢è²å±æ§ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(data=small, mapping=aes(x=carat, y=price, shape=cut, colour=color))
p+geom_point()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;å ä½å¯¹è±¡-geometric:c38c63fac86d2290b6bc01da39216614&#34;&gt;å ä½å¯¹è±¡ï¼Geometricï¼&lt;/h3&gt;

&lt;p&gt;å¨ä¸é¢çä¾å­ä¸­ï¼åç§å±æ§æ å°ç±ggplotå½æ°æ§è¡ï¼åªéè¦å ä¸ä¸ªå¾å±ï¼ä½¿ç¨geom_point()åè¯ggplotè¦ç»æ£ç¹ï¼äºæ¯ææçå±æ§é½æ å°å°æ£ç¹ä¸ã&lt;/p&gt;

&lt;p&gt;geom_point()å®æçå°±æ¯å ä½å¯¹è±¡çæ å°ï¼ggplot2æä¾äºåç§å ä½å¯¹è±¡æ å°ï¼å¦geom_histogramç¨äºç´æ¹å¾ï¼geom_barç¨äºç»æ±ç¶å¾ï¼geom_boxplotç¨äºç»ç®±å¼å¾ç­ç­ã&lt;/p&gt;

&lt;p&gt;ä¸åçå ä½å¯¹è±¡ï¼è¦æ±çå±æ§ä¼æäºä¸åï¼è¿äºå±æ§ä¹å¯ä»¥å¨å ä½å¯¹è±¡æ å°æ¶æä¾ï¼æ¯å¦ä¸ä¸å¾ï¼ä¹å¯ä»¥ç¨ä»¥ä¸è¯­æ³æ¥ç»ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(small)
p+geom_point(aes(x=carat, y=price, shape=cut, colour=color))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ggplot2æ¯æå¾å±ï¼æéå¸¸æä¸åçå¾å±ä¸­å±ç¨çæ å°æä¾ç»ggplotå½æ°ï¼èæä¸å ä½å¯¹è±¡æéè¦çæ å°åæ°æä¾ç»geom_xxxå½æ°ã&lt;/p&gt;

&lt;p&gt;è¿ä¸å°èæä»¬æ¥çä¸ä¸åç§å¸¸ç¨çå ä½å¯¹è±¡ã&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ç´æ¹å¾&lt;/strong&gt; ç´æ¹å¾æå®¹æï¼æä¾ä¸ä¸ªxåéï¼ç»åºæ°æ®çåå¸ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_histogram(aes(x=price))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;åæ ·å¯ä»¥æ ¹æ®å¦å¤çåéç»å®å¡«åé¢è²ï¼æ¯å¦æä¸åçåå·¥ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_histogram(aes(x=price, fill=cut))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ä¹å¯ä»¥å°å¶åå¼ï¼side-by-sideå°ç»ç´æ¹å¾ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_histogram(aes(x=price, fill=cut), position=&amp;quot;dodge&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;è¿å¯ä»¥ä½¿ç¨position=&amp;ldquo;fill&amp;rdquo;ï¼æç§ç¸å¯¹æ¯ä¾æ¥ç»ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_histogram(aes(x=price, fill=cut), position=&amp;quot;fill&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;æ±ç¶å¾&lt;/strong&gt;
æ±ç¶å¾éå¸¸éåäºç»åç±»åéãå¨è¿éä»¥éæåº¦ï¼clarityï¼åéä¸ºä¾ãæç§ä¸åéæåº¦çé»ç³çæ°ç®ç»æ±ç¶å¾ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_bar(aes(x=clarity))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig8.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;æ±ç¶å¾ä¸¤ä¸ªè¦ç´ ï¼ä¸ä¸ªæ¯åç±»åéï¼ä¸ä¸ªæ¯æ°ç®ï¼ä¹å°±æ¯æ±å­çé«åº¦ãæ°ç®å¨è¿éä¸ç¨æä¾ï¼å ä¸ºggplot2ä¼éè¿xåéè®¡ç®åä¸ªåç±»çæ°ç®ã&lt;/p&gt;

&lt;p&gt;å½ç¶ä½ æ³æä¾ä¹æ¯å¯ä»¥çï¼éè¿statåæ°ï¼å¯ä»¥è®©geom_barææå®é«åº¦ç»å¾ï¼æ¯å¦ä»¥ä¸ä»£ç ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot()+geom_bar(aes(x=c(LETTERS[1:3]),y=1:3), stat=&amp;quot;identity&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig24.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;æ±ç¶å¾åç´æ¹å¾æ¯å¾åçï¼ç´æ¹å¾æè¿ç»­åçæ°æ®æç§ä¸ä¸ªä¸ªç­é¿çååºï¼binï¼æ¥ååï¼ç¶åè®¡æ°ï¼ç»æ±ç¶å¾ãèæ±ç¶å¾æ¯åç±»æ°æ®ï¼æç±»å«è®¡æ°ãæä»¬å¯ä»¥ç¨åé¢ç´æ¹å¾çåæ°æ¥ç»side-by-sideçæ±ç¶å¾ï¼å¡«åé¢è²æèææ¯ä¾ç»å¾ï¼å®ä»¬æ¯é«åº¦ä¸è´çã&lt;/p&gt;

&lt;p&gt;æ±ç¶å¾æ¯ç¨æ¥è¡¨ç¤ºè®¡æ°æ°æ®çï¼ä½å¨çç©çå´è¢«ç»å¸¸æ¿æ¥è¡¨ç¤ºåå¼ï¼å ä¸è¯¯å·®æ¥è¡¨ç¤ºæ°æ®åå¸ï¼è¿å¯ä»¥éå¸¸å¾å±æ¥å®ç°ï¼æå°å¨å¾å±ä¸èä¸­ç»åºå®ä¾ã&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;å¯åº¦å½æ°å¾&lt;/strong&gt;
è¯´å°ç´æ¹å¾ï¼å°±ä¸å¾ä¸è¯´å¯åº¦å½æ°å¾ï¼æ°æ®åæ å°åç´æ¹å¾æ¯ä¸æ ·çï¼å¯ä¸ä¸åçæ¯å ä½å¯¹è±¡ï¼geom_histogramåè¯ggplotè¦ç»ç´æ¹å¾ï¼ègeom_densityåè¯´æä»¬è¦ç»å¯åº¦å½æ°å¾ï¼å¨æä»¬çæåé¢è¯­æ³çæåµä¸ï¼å¾å®¹æç»åºï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_density(aes(x=price, colour=cut))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig9.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_density(aes(x=price,fill=clarity))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig10.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;colouråæ°æå®çæ¯æ²çº¿çé¢è²ï¼èfillæ¯å¾æ²çº¿ä¸é¢å¡«åé¢è²ã&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ç®±å¼å¾&lt;/strong&gt;
æ°æ®éæ¯è¾å¤§çæ¶åï¼ç¨ç´æ¹å¾åå¯åº¦å½æ°å¾æ¯è¡¨ç¤ºæ°æ®åå¸çå¥½æ¹æ³ï¼èå¨æ°æ®éè¾å°çæ¶åï¼æ¯å¦å¾å¤ççç©å®éªï¼å¾å¤æ¶åå¤§å®¶é½æ¯ä½¿ç¨æ±ç¶å¾+errorbarçå½¢å¼æ¥è¡¨ç¤ºï¼ä¸è¿è¿ç§æ¹æ³çä¿¡æ¯ééå¸¸ä½ï¼è¢«&lt;a href=&#34;http://guangchuangyu.github.io/2014/03/boxplot/&#34;&gt;Nature Methodsåæ§½&lt;/a&gt;ï¼è¿ç§æåµæ¨èä½¿ç¨boxplotã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_boxplot(aes(x=cut, y=price,fill=color))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;geom_boxplotå°æ°æ®æ å°å°ç®±å¼å¾ä¸ï¼ä¸é¢çä»£ç ï¼æä»¬åºè¯¥å¾çæäºï¼æåå·¥(cut)åç±»ï¼å¯¹ä»·æ ¼(price)åéç»ç®±å¼å¾ï¼ååå¼æç§coloråéå¡«åé¢è²ã&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig11.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ggplot2æä¾äºå¾å¤çgeom_xxxå½æ°ï¼å¯ä»¥æ»¡è¶³æä»¬å¯¹åç§å¾å½¢ç»å¶çéæ±ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;geom_abline     geom_area   
geom_bar        geom_bin2d
geom_blank      geom_boxplot    
geom_contour    geom_crossbar
geom_density    geom_density2d  
geom_dotplot    geom_errorbar
geom_errorbarh  geom_freqpoly   
geom_hex        geom_histogram
geom_hline      geom_jitter     
geom_line       geom_linerange
geom_map        geom_path   
geom_point      geom_pointrange
geom_polygon    geom_quantile   
geom_raster     geom_rect
geom_ribbon     geom_rug    
geom_segment    geom_smooth
geom_step       geom_text   
geom_tile       geom_violin
geom_vline
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;æ å°º-scale:c38c63fac86d2290b6bc01da39216614&#34;&gt;æ å°ºï¼Scaleï¼&lt;/h3&gt;

&lt;p&gt;åé¢æä»¬å·²ç»çå°äºï¼ç»å¾å°±æ¯å¨åæ å°ï¼ä¸ç®¡æ¯æ å°å°ä¸åçå ä½å¯¹è±¡ä¸ï¼è¿æ¯æ å°åç§å¾å½¢å±æ§ãè¿ä¸å°èä»ç»æ å°ºï¼å¨å¯¹å¾å½¢å±æ§è¿è¡æ å°ä¹åï¼ä½¿ç¨æ å°ºå¯ä»¥æ§å¶è¿äºå±æ§çæ¾ç¤ºæ¹å¼ï¼æ¯å¦åæ å»åº¦ï¼å¯è½éè¿æ å°ºï¼å°åæ è¿è¡å¯¹æ°åæ¢ï¼æ¯å¦é¢è²å±æ§ï¼ä¹å¯ä»¥éè¿æ å°ºï¼è¿è¡æ¹åã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_point(aes(x=carat, y=price, shape=cut, colour=color))+scale_y_log10()+scale_colour_manual(values=rainbow(7))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig12.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ä»¥æ°æ®ï¼Dataï¼åæ å°ï¼Mapping)ä¸èä¸­æç»æ£ç¹å¾ä¸ºä¾ï¼å°Yè½´åæ è¿è¡log10åæ¢ï¼åèªå·±å®ä¹é¢è²ä¸ºå½©è¹è²ã&lt;/p&gt;

&lt;h3 id=&#34;ç»è®¡åæ¢-statistics:c38c63fac86d2290b6bc01da39216614&#34;&gt;ç»è®¡åæ¢ï¼Statisticsï¼&lt;/h3&gt;

&lt;p&gt;ç»è®¡åæ¢å¯¹åå§æ°æ®è¿è¡æç§è®¡ç®ï¼ç¶åå¨å¾ä¸è¡¨ç¤ºåºæ¥ï¼ä¾å¦å¯¹æ£ç¹å¾ä¸å ä¸æ¡åå½çº¿ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small, aes(x=carat, y=price))+geom_point()+scale_y_log10()+stat_smooth()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig13.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;è¿éå°±ä¸æé¢è²ãåå·¥æ¥åäºï¼ä¸ç¶ggplotä¼æä¸åçåç±»åéåå«ååå½ï¼å¾å°±å¾ä¹±ï¼å¦ææä»¬éè¦è¿æ ·åï¼æä»¬å¯ä»¥ä½¿ç¨åé¢ï¼è¿ä¸ªå°å¨åé¢ä»ç»ã&lt;/p&gt;

&lt;p&gt;è¿éï¼aesææä¾çåæ°ï¼å°±éè¿ggplotæä¾ï¼èä¸æ¯æä¾ç»geom_pointï¼å ä¸ºggplotéçåæ°ï¼ç¸å½äºå¨å±åéï¼geom_point()åstat_smooth()é½ç¥éx,yçæ å°ï¼å¦æåªæä¾ç»geom_point()ï¼åç¸å½äºæ¯å±é¨åéï¼geom_pointç¥éè¿ç§æ å°ï¼èstat_smoothä¸ç¥éï¼å½ç¶ä½ åç»stat_smoothä¹æä¾x,yçæ å°ï¼ä¸è¿å±ç¨çæ å°ï¼è¿æ¯æä¾ç»ggplotå¥½ã
ggplot2æä¾äºå¤ç§ç»è®¡åæ¢æ¹å¼ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stat_abline       stat_contour      stat_identity     stat_summary
stat_bin          stat_density      stat_qq           stat_summary2d
stat_bin2d        stat_density2d    stat_quantile     stat_summary_hex
stat_bindot       stat_ecdf         stat_smooth       stat_unique
stat_binhex       stat_function     stat_spoke        stat_vline
stat_boxplot      stat_hline        stat_sum          stat_ydensity
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ç»è®¡åæ¢æ¯éå¸¸éè¦çåè½ï¼æä»¬å¯ä»¥èªå·±åå½æ°ï¼åºäºåå§æ°æ®åæç§è®¡ç®ï¼å¹¶å¨å¾ä¸è¡¨ç°åºæ¥ï¼ä¹å¯ä»¥éè¿å®æ¹ågeom_xxxå½æ°ç»å¾çé»è®¤ç»è®¡åæ°ã
æ¯å¦æå¨&lt;a href=&#34;http://www.sciencedirect.com/science/article/pii/S1874391912007567&#34;&gt;Proteomic investigation of the interactome of FMNL1 in hematopoietic cells unveils a role in calcium-dependent membrane plasticity&lt;/a&gt;çå¾ä¸ä¸­ï¼å°±æboxplotçä¸­ä½çº¿æ¿æ¢æäºå¹³åå¼æ¥ä½å¾ã&lt;/p&gt;

&lt;h3 id=&#34;åæ ç³»ç»-coordinante:c38c63fac86d2290b6bc01da39216614&#34;&gt;åæ ç³»ç»ï¼Coordinanteï¼&lt;/h3&gt;

&lt;p&gt;åæ ç³»ç»æ§å¶åæ è½´ï¼å¯ä»¥è¿è¡åæ¢ï¼ä¾å¦XYè½´ç¿»è½¬ï¼ç¬å¡å°åæ åæåæ è½¬æ¢ï¼ä»¥æ»¡è¶³æä»¬çåç§éæ±ã&lt;/p&gt;

&lt;p&gt;åæ è½´ç¿»è½¬ç±coord_flip()å®ç°&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_bar(aes(x=cut, fill=cut))+coord_flip()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig14.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;èè½¬æ¢ææåæ å¯ä»¥ç±coord_polar()å®ç°ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_bar(aes(x=factor(1), fill=cut))+coord_polar(theta=&amp;quot;y&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2.fig15.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;è¿ä¹æ¯ä¸ºä»ä¹ä¹åä»ç»å¸¸ç¨å¾å½¢ç»æ³æ¶æ²¡ææåé¥¼å¾çåå ï¼é¥¼å¾å®éä¸å°±æ¯æ±ç¶å¾ï¼åªä¸è¿æ¯ä½¿ç¨æåæ èå·²ï¼æ±ç¶å¾çé«åº¦ï¼å¯¹åºäºé¥¼å¾çå¼§åº¦ï¼é¥¼å¾å¹¶ä¸æ¨èï¼å ä¸ºäººç±»çç¼çæ¯è¾å¼§åº¦çè½åæ¯ä¸ä¸æ¯è¾é«åº¦ï¼æ±ç¶å¾ï¼&lt;/p&gt;

&lt;p&gt;è¿å¯ä»¥ç»é¶å¿å¾ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_bar(aes(x=factor(1), fill=cut))+coord_polar()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig16.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ä»¥åé£ç«ç°å¾(windrose)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small)+geom_bar(aes(x=clarity, fill=cut))+coord_polar()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig17.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;å¾å±-layer:c38c63fac86d2290b6bc01da39216614&#34;&gt;å¾å±ï¼Layerï¼&lt;/h3&gt;

&lt;p&gt;photoshopæµè¡çåå å¨äºPS
3.0æ¶å¼å¥å¾å±çæ¦å¿µï¼ggplotççBä¹å¤å¨äºä½¿ç¨+å·æ¥å å å¾å±ï¼è¿å ªç§°æ¯æ³åç¼ç¨çå¸èã
å¨åé¢æ£ç¹å¾ä¸ï¼æä»¬å·²ç»è§è¯è¿ï¼å ä¸äºä¸ä¸ªåå½çº¿æåçå¾å±ã&lt;/p&gt;

&lt;p&gt;æäºå¾å±çæ¦å¿µï¼ä½¿ç¨ggplotç»èµ·å¾æ¥ï¼å°±æ´å å¾å¿åºæã&lt;/p&gt;

&lt;p&gt;åä¸ºå¾å±çä¸ä¸ªå¾å¥½çä¾å­æ¯&lt;a href=&#34;http://guangchuangyu.github.io/2011/08/the-batman-equation/&#34;&gt;èè ä¾ logo&lt;/a&gt;ï¼batman
logoç±6ä¸ªå½æ°ç»æï¼å¨ä¸é¢çä¾å­ä¸­ï¼æåç»ç¬¬ä¸ä¸ªå½æ°ï¼ä¹ååå ä¸ä¸ªå¾å±ç»ç¬¬äºä¸ªå½æ°ï¼ä¸æ­éå¤è¿ä¸è¿ç¨ï¼ç´å°å­ä¸ªå½æ°å¨é¨ç»å¥½ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require(ggplot2)
f1 &amp;lt;- function(x) {
    y1 &amp;lt;- 3*sqrt(1-(x/7)^2)
    y2 &amp;lt;- -3*sqrt(1-(x/7)^2)
    y &amp;lt;- c(y1,y2)
    d &amp;lt;- data.frame(x=x,y=y)
    d &amp;lt;- d[d$y &amp;gt; -3*sqrt(33)/7,]
    return(d)
}
 
x1 &amp;lt;- c(seq(3, 7, 0.001), seq(-7, -3, 0.001))
d1 &amp;lt;- f1(x1)
p1 &amp;lt;- ggplot(d1,aes(x,y)) + geom_point(color=&amp;quot;red&amp;quot;) +xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;) + theme_bw()
 
x2 &amp;lt;- seq(-4,4, 0.001)
y2 &amp;lt;- abs(x2/2)-(3*sqrt(33)-7)*x2^2/112-3 + sqrt(1-(abs(abs(x2)-2)-1)^2)
d2 &amp;lt;- data.frame(x2=x2, y2=y2)
p2 &amp;lt;- p1 + geom_point(data=d2, aes(x=x2,y=y2), color=&amp;quot;yellow&amp;quot;)
 
x3 &amp;lt;- c(seq(0.75,1,0.001), seq(-1,-0.75,0.001))
y3 &amp;lt;- 9-8*abs(x3)
d3 &amp;lt;- data.frame(x3=x3, y3=y3)
p3 &amp;lt;- p2+geom_point(data=d3, aes(x=x3,y=y3), color=&amp;quot;green&amp;quot;)
 
x4 &amp;lt;- c(seq(0.5,0.75,0.001), seq(-0.75,-0.5,0.001))
y4 &amp;lt;- 3*abs(x4)+0.75
d4 &amp;lt;- data.frame(x4=x4,y4=y4)
p4 &amp;lt;- p3+geom_point(data=d4, aes(x=x4,y=y4), color=&amp;quot;steelblue&amp;quot;)
  
x5 &amp;lt;- seq(-0.5,0.5,0.001)
y5 &amp;lt;- rep(2.25,length(x5))
d5 &amp;lt;- data.frame(x5=x5,y5=y5)
p5 &amp;lt;- p4+geom_point(data=d5, aes(x=x5,y=y5))
 
x6 &amp;lt;- c(seq(-3,-1,0.001), seq(1,3,0.001))
y6 &amp;lt;- 6 * sqrt(10)/7 +
    (1.5 - 0.5 * abs(x6)) * sqrt(abs(abs(x6)-1)/(abs(x6)-1)) -
    6 * sqrt(10) * sqrt(4-(abs(x6)-1)^2)/14
d6 &amp;lt;- data.frame(x6=x6,y6=y6)
p6 &amp;lt;- p5+geom_point(data=d6,aes(x=x6,y=y6), colour=&amp;quot;blue&amp;quot;)

multiplot &amp;lt;- function (..., plotlist = NULL, cols = 1, layout = NULL) {
    plots &amp;lt;- c(list(...), plotlist)
    numPlots = length(plots)
    if (is.null(layout)) {
        layout &amp;lt;- matrix(seq(1, cols * ceiling(numPlots/cols)),
            ncol = cols, nrow = ceiling(numPlots/cols))
    }
    if (numPlots == 1) {
        print(plots[[1]])
    }
    else {
        grid.newpage()
        pushViewport(viewport(layout = grid.layout(nrow(layout),
            ncol(layout))))
        for (i in 1:numPlots) {
            matchidx &amp;lt;- as.data.frame(which(layout == i, arr.ind = TRUE))
            print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                layout.pos.col = matchidx$col))
        }
    }
}

multiplot(p1,p2,p3,p4,p5,p6, cols=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_batman.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;åé¢-facet:c38c63fac86d2290b6bc01da39216614&#34;&gt;åé¢ï¼Facetï¼&lt;/h3&gt;

&lt;p&gt;å¨ã&lt;a href=&#34;http://book.douban.com/subject/24527091/&#34;&gt;ggplot2: æ°æ®åæä¸å¾å½¢èºæ¯&lt;/a&gt;ãä¸ä¹¦çç¿»è¯ä¸­ï¼ä¸å¼å§è¯èæfacetç¿»è¯æåçï¼æå¨æ ¡ç¨¿çæ¶ååç°äºï¼ç»ä»ä»¬åä¿¡ï¼æ¨èç¿»è¯æåé¢ï¼å¦ææ¯sliceè¿ä¸ªè¯ï¼ç¿»è¯æåçåæ¯å¾ç²¾åï¼BSDçç¡¬çååºå°±å«sliceï¼ä½facetä»è¯æºä¸çå°±æ¯å°è¸çææï¼ç¿»è¯æåé¢æå°ä½ãç»ä»ä»¬åä¿¡çæ¶åï¼æè¿ä¸é¨æ¥äº&lt;a href=&#34;http://dict.cnki.net/&#34;&gt;CNKIç¿»è¯å©æ&lt;/a&gt;ï¼åç°è¿è¯å¨ä¿¡æ¯å­¦ä¸­ï¼ç¿»æåé¢æ©å·²æ¯åºå®çãææè§è¿æ¯æå¯¹è¿æ¬ä¹¦ç¿»è¯çæå¤§è´¡ç®ï¼æ ¡ç¨¿è¿ç¨ä¸­åç°çå°éå°é®é¢è¿æ¯ä¸ä¸è¿ä¸ªå³é®è¯ææçææ¡ä¸ã&lt;/p&gt;

&lt;p&gt;åé¢å¯ä»¥è®©æä»¬æç§æç§ç»å®çæ¡ä»¶ï¼å¯¹æ°æ®è¿è¡åç»ï¼ç¶ååå«ç»å¾ã
å¨ç»è®¡åæ¢ä¸èä¸­ï¼æå°å¦ææåå·¥åç»ä½åå½çº¿ï¼æ¾ç¶å¾ä¼å¾ä¹±ï¼æäºåé¢åè½ï¼æä»¬å¯ä»¥åå«ä½å¾ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(small, aes(x=carat, y=price))+geom_point(aes(colour=cut))+scale_y_log10() +facet_wrap(~cut)+stat_smooth()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig18.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;ä¸»é¢-theme:c38c63fac86d2290b6bc01da39216614&#34;&gt;ä¸»é¢ï¼Themeï¼&lt;/h3&gt;

&lt;p&gt;éè¿ggplotç»å¾ä¹åï¼æä»¬å¯è½è¿éè¦å¯¹å¾è¿è¡å®å¶ï¼åtitle, xlab,
ylabè¿äºé«é¢éè¦ç¨å°çï¼èªä¸ç¨è¯´ï¼ggplot2æä¾äºggtitle(),
xlab()åylab()æ¥å®ç°ã æ¯å¦ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(small)+geom_boxplot(aes(x=cut, y=price,fill=color))
p + ggtitle(&amp;quot;Price vs Cut&amp;quot;)+xlab(&amp;quot;Cut&amp;quot;)+ylab(&amp;quot;Price&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2.fig19.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ä½æ¯è¿ä¸ªè¿è¿æ»¡è¶³ä¸äºéæ±ï¼æä»¬éè¦æ¹åå­ä½ï¼å­ä½å¤§å°ï¼åæ è½´ï¼èæ¯ç­åç§åç´ ï¼è¿éè¦éè¿theme()å½æ°æ¥å®æã&lt;/p&gt;

&lt;p&gt;ggplot2æä¾ä¸äºå·²ç»åå¥½çä¸»é¢ï¼æ¯å¦&lt;code&gt;theme_grey()&lt;/code&gt;ä¸ºé»è®¤ä¸»é¢ï¼æç»å¸¸ç¨ç&lt;code&gt;theme_bw()&lt;/code&gt;ä¸ºç½è²èæ¯çä¸»é¢ï¼è¿æ&lt;code&gt;theme_classic()&lt;/code&gt;ä¸»é¢ï¼åRçåºç¡ç»å¾å½æ°è¾åã&lt;/p&gt;

&lt;p&gt;å«å¤ggthemesåæä¾äºä¸äºä¸»é¢å¯ä¾ä½¿ç¨ï¼åæ¬ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;theme_economist theme_economist_white
theme_wsj       theme_excel
theme_few       theme_foundation
theme_igray     theme_solarized
theme_stata     theme_tufte
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;require(ggthemes)
p + theme_wsj()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig20.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;å¨2013å¹´åè¡¨çæç« &lt;a href=&#34;http://pubs.rsc.org/en/content/articlelanding/2013/mt/c3mt00126a#!divAbstract&#34;&gt;Putative cobalt- and nickel-binding proteins and motifs in Streptococcus pneumoniae&lt;/a&gt;ä¸­çå¾3å°±æ¯ä½¿ç¨&lt;code&gt;theme_stata&lt;/code&gt;æ¥ç»çã&lt;/p&gt;

&lt;p&gt;è³äºå¦ä½æ¹åè¿äºåç´ ï¼æè§å¾æä¹å&lt;a href=&#34;http://guangchuangyu.github.io/2012/02/draw-chinese-character-jiong-using-ggplot2/&#34;&gt;ç»å§å­çåæ&lt;/a&gt;å¯ä»¥åä¸ºä¾å­ï¼&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;f &amp;lt;- function(x) 1/(x^2-1)
x &amp;lt;- seq(-3,3, by=0.001)
y &amp;lt;- f(x)
d &amp;lt;- data.frame(x=x,y=y)
 
p &amp;lt;- ggplot()
p &amp;lt;- p+geom_rect(fill = &amp;quot;white&amp;quot;,color=&amp;quot;black&amp;quot;,size=3,
aes(NULL, NULL,xmin=-3, xmax=3,
ymin=-3,ymax=3, alpha=0.1))
 
p &amp;lt;- p + geom_line(data=d, aes(x,y), size=3)+ylim(-3,3)
theme_null &amp;lt;- function() {
    theme_bw() %+replace%
    theme(axis.text.x=element_blank(),
    axis.text.y=element_blank(),
    legend.position=&amp;quot;none&amp;quot;,
    panel.grid.minor=element_blank(),
    panel.grid.major=element_blank(),
    panel.background=element_blank(),
    axis.ticks=element_blank(),
    panel.border=element_blank())
}
 
p+theme_null()+xlab(&amp;quot;&amp;quot;)+ylab(&amp;quot;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2012/02/jiong.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;è¯¦ç»çè¯´æï¼å¯ä»¥åè?themeçå¸®å©ææ¡£ã&lt;/p&gt;

&lt;h3 id=&#34;äºç»´å¯åº¦å¾:c38c63fac86d2290b6bc01da39216614&#34;&gt;äºç»´å¯åº¦å¾&lt;/h3&gt;

&lt;p&gt;å¨è¿ä¸ªææ¡£éï¼ä¸ºäºä½å¾æ¹ä¾¿ï¼æä»¬ä½¿ç¨diamondsæ°æ®éçä¸ä¸ªå­éï¼å¦æä½¿ç¨å¨éï¼æ°æ®éå¤ªå¤§ï¼ç»åºæ¥æ£ç¹å°±ç³äºï¼è¿ç§æåµå¯ä»¥ä½¿ç¨äºç»´å¯åº¦åæ¥åç°ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(diamonds, aes(carat, price))+ stat_density2d(aes(fill = ..level..), geom=&amp;quot;polygon&amp;quot;)+ scale_fill_continuous(high=&#39;darkred&#39;,low=&#39;darkgreen&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2.fig22.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;ggplot2å®ä¾:c38c63fac86d2290b6bc01da39216614&#34;&gt;ggplot2å®ä¾&lt;/h3&gt;

&lt;p&gt;è´è¶å¾ï¼è¯¦è§ãModern Applied Statistics with S-PLUSãç¬¬ä¸ç« ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;theta &amp;lt;- seq(0,24*pi, len=2000)
radius &amp;lt;- exp(cos(theta)) - 2*cos(4*theta) + sin(theta/12)^5
dd &amp;lt;- data.frame(x=radius*sin(theta), y=radius*cos(theta))
ggplot(dd, aes(x, y))+geom_path()+theme_null()+xlab(&amp;quot;&amp;quot;)+ylab(&amp;quot;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_fig25.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;è¿ä¸ªå¾ï¼ææ³å±ç¤ºçæ¯å¯¹ç»èçä¿®æ¹ä¸ï¼å¨ç»å§å­çæ¶åï¼æç»å¸ä¸çåç´ é½ç»æ¸æ¥äºï¼ææå®å®ä¹ä¸ºtheme_nullä¸»é¢ï¼å¨è¿éï¼ç´æ¥åºç¨ï¼æä»¬å¯ä»¥å½¢æèªå·±çç»å¾é£æ ¼ï¼å¹¶ååºèªå·±çä¸»é¢å½æ°åºå®ä¸æ¥ã&lt;/p&gt;

&lt;p&gt;æåä»¥çç©çä¸­å¸¸ç¨çæ±ç¶å¾+è¯¯å·®å¾ä¸ºå®ä¾ï¼å±ç¤ºggplot2éå¸¸çµæ´»çå¾å±ãä»¥æ2011å¹´åè¡¨çæç« &lt;a href=&#34;http://guangchuangyu.github.io/2010/11/phosphoproteome-profile-of-human-lung-cancer-cell-line-a549/&#34;&gt;Phosphoproteome
profile of human lung cancer cell line
A549&lt;/a&gt;ä¸­çwesternblotæ°æ®ä¸ºä¾ãè¿ä¸ªå®ä¾å±ç¤ºäºå¾å±ï¼æ å°ºï¼ä¸»é¢ï¼æ³¨éååç§ç»èå¾®è°å¤ç§åç´ ã&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Normal &amp;lt;- c(0.83, 0.79, 0.99, 0.69)
Cancer &amp;lt;- c(0.56, 0.56, 0.64, 0.52)
m &amp;lt;- c(mean(Normal), mean(Cancer))
s &amp;lt;- c(sd(Normal), sd(Cancer))
d &amp;lt;- data.frame(V=c(&amp;quot;Normal&amp;quot;, &amp;quot;Cancer&amp;quot;), mean=m, sd=s)
d$V &amp;lt;- factor(d$V, levels=c(&amp;quot;Normal&amp;quot;, &amp;quot;Cancer&amp;quot;))

p &amp;lt;- ggplot(d, aes(V, mean, fill=V, width=.5))
p &amp;lt;- p+geom_errorbar(aes(ymin=mean, ymax=mean+sd, width=.2), 
                     position=position_dodge(width=.8))
p &amp;lt;- p + geom_bar(stat=&amp;quot;identity&amp;quot;, position=position_dodge(width=.8), colour=&amp;quot;black&amp;quot;)
p &amp;lt;- p + scale_fill_manual(values=c(&amp;quot;grey80&amp;quot;, &amp;quot;white&amp;quot;))
p &amp;lt;- p + theme_bw() +theme(legend.position=&amp;quot;none&amp;quot;) + xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;)
p &amp;lt;- p + theme(axis.text.x = element_text(face=&amp;quot;bold&amp;quot;, size=12), 
               axis.text.y = element_text(face=&amp;quot;bold&amp;quot;, size=12))
p &amp;lt;- p+scale_y_continuous(expand=c(0,0), limits=c(0, 1.2), breaks=seq(0, 1.2, by=.2))
p &amp;lt;- p+geom_segment(aes(x=1, y=.98, xend=1, yend=1.1))
p &amp;lt;- p+geom_segment(aes(x=2, y=.65, xend=2, yend=1.1))
p &amp;lt;- p+geom_segment(aes(x=1, y=1.1, xend=2, yend=1.1))
p &amp;lt;- p + annotate(&amp;quot;text&amp;quot;, x=1.5, y=1.08, label=&amp;quot;*&amp;quot;)
print(p)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2014/05/ggplot2_26.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;æ´å¤å®ä¾ï¼å¯ä»¥åèæä½¿ç¨&lt;a href=&#34;http://guangchuangyu.github.io/2011/08/ggplot2-version-of-figures-in-25-recipes-for-getting-started-with-r/&#34;&gt;ggplot2å®ç°&lt;25 Recipes for Getting Started with R&gt;ä¸ä¹¦ä¸­çææå¾ç&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>draw chinese character Jiong using ggplot2</title>
      <link>http://guangchuangyu.github.io/post/r/ggplot2/2012_draw-chinese-character-jiong-ggplot2/</link>
      <pubDate>Fri, 17 Feb 2012 09:26:50 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/post/r/ggplot2/2012_draw-chinese-character-jiong-ggplot2/</guid>
      <description>&lt;p&gt;The Chinese character Jiong (å§) is now widely used for expressing ideas
or feelings such as annoyance, shock, embarrassment, awkwardness, scorn.&lt;/p&gt;

&lt;p&gt;The function plot of &lt;code&gt;y=1/(x^2-1)&lt;/code&gt; looks very similar of this symbol.&lt;/p&gt;

&lt;p&gt;I use ggplot2 to draw the symbol of Jiong.&lt;/p&gt;

&lt;p&gt;It looks like:
&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2012/02/jiong.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The function line is very easy to draw, but the options to hone this graph need some tricky tips.&lt;/p&gt;

&lt;p&gt;The source code for generating this plot can be found in &lt;a href=&#34;https://gist.github.com/1852074&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>violin plot</title>
      <link>http://guangchuangyu.github.io/post/r/ggplot2/2012_violin-plot/</link>
      <pubDate>Tue, 07 Feb 2012 06:31:55 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/post/r/ggplot2/2012_violin-plot/</guid>
      <description>&lt;p&gt;ggplot2 0.9.0çæ¬å°å¨3æ1å·åå¸ï¼æ¹å¨è¾å¤§ï¼æè¿bioc mailing
listä¹æè¯¸å¤è®¨è®ºï¼å ä¸ºå®å¯¼è´äºæäºåç¼è¯åºéï¼ä¼°è®¡æ¯NAMESPACEå¼èµ·çï¼ã&lt;/p&gt;

&lt;p&gt;æç§hadleyçè¯´æ³æ¯è¿æ¯ä¸ºäºæä»ä¸ªäººçé¡¹ç®åæä¸ä¸ªç¤¾åºé¡¹ç®ã&lt;/p&gt;

&lt;p&gt;å¤§å¤æ°çæ¹å¨å¯¹ç¨æ·æ¥è¯´æ¯invisibleçï¼ç¨roxygen2å»æ³¨éå½æ°ï¼æ ¸å¿ä»£ç ä½¿ç¨S3éåï¼åç¦»åºä¸äºç¹æ§ï¼scalesåï¼ç­ã&lt;/p&gt;

&lt;p&gt;æææ¾çæ¯ç°å¨ç»å¾éåº¦åå¿«äºï¼ä¸è¿æè§å¾æè®©äººå´å¥çæ¯&lt;code&gt;guide_legend()&lt;/code&gt;å&lt;code&gt;guide_colorbar()&lt;/code&gt;ä¸¤ä¸ªå½æ°ï¼å¯ä»¥ä¿®æ¹legend.&lt;/p&gt;

&lt;p&gt;ç»å¾çè¯ï¼å äºåä¸ªå½æ°&lt;code&gt;geom_map()&lt;/code&gt;, &lt;code&gt;geom_raster()&lt;/code&gt;,
&lt;code&gt;geom_dotplot()&lt;/code&gt;å&lt;code&gt;geom_violin()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;violin plotç»åäºbox plotåkernel density estimateï¼æäºå®ï¼box
plotåºæ¬å¯ä»¥æäºã&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2012/02/violin.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2 Version of Figures in &lt;25 Recipes for Getting Started with R&gt;</title>
      <link>http://guangchuangyu.github.io/post/r/ggplot2/2011_ggplot2-version-figures-25-recipes-started-r/</link>
      <pubDate>Tue, 16 Aug 2011 18:26:36 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/post/r/ggplot2/2011_ggplot2-version-figures-25-recipes-started-r/</guid>
      <description>&lt;p&gt;In order to provide an option to compare graphs produced by basic
internal plot function and ggplot2, I have recreated the figures in the
book, &lt;a href=&#34;http://book.douban.com/subject/5992544/&#34;&gt;25 Recipes for Getting Started with
R&lt;/a&gt;, with ggplot2.&lt;/p&gt;

&lt;p&gt;The code used to create the images is in separate paragraphs, allowing
easy comparison. &lt;strong&gt;1.16 Creating a Scatter Plot&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;plot(cars)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://guangchuangyu.github.io/blog_images/2011/08/scatter1.png&#34;&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2011/08/scatter1.png&#34; alt=&#34;&#34; title=&#34;scatter1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot(cars,aes(speed,dist))+geom_point()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://guangchuangyu.github.io/blog_images/2011/08/scatter2.png&#34;&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2011/08/scatter2.png&#34; alt=&#34;&#34; title=&#34;scatter2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.17 Creating a Bar Chart&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;heights &amp;lt;- tapply(airquality$Temp, airquality$Month, mean)
par(mfrow=c(1,2))
barplot(heights)
barplot(heights,
        main=&amp;quot;Mean Temp. by Month&amp;quot;,
        names.arg=c(&amp;quot;May&amp;quot;, &amp;quot;Jun&amp;quot;, &amp;quot;Jul&amp;quot;, &amp;quot;Aug&amp;quot;, &amp;quot;Sep&amp;quot;),
        ylab=&amp;quot;Temp (deg. F)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://guangchuangyu.github.io/blog_images/2011/08/bar1.png&#34;&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2011/08/bar1.png&#34; alt=&#34;&#34; title=&#34;bar1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require(gridExtra)
heights=ddply(airquality,.(Month), mean)
heights$Month=as.character(heights$Month)
p1 &amp;lt;- ggplot(heights, aes(x=Month,weight=Temp))+ geom_bar()
p2 &amp;lt;- ggplot(heights, aes(x=factor(Month,
                          labels=c(&amp;quot;May&amp;quot;, &amp;quot;Jun&amp;quot;, &amp;quot;Jul&amp;quot;, &amp;quot;Aug&amp;quot;, &amp;quot;Sep&amp;quot;)),
                          weight=Temp))+
        geom_bar()+
          ggtitle(&amp;quot;Mean Temp. By Month&amp;quot;) +
            xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;Temp (deg. F)&amp;quot;)

grid.arrange(p1,p2, ncol=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://guangchuangyu.github.io/blog_images/2011/08/bar2.png&#34;&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2011/08/bar2.png&#34; alt=&#34;&#34; title=&#34;bar2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.18 Creating a Box Plot&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;y &amp;lt;- c(-5, rnorm(100), 5)
boxplot(y)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://guangchuangyu.github.io/blog_images/2011/08/box1.png&#34;&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2011/08/box1.png&#34; alt=&#34;&#34; title=&#34;box1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ggplot()+geom_boxplot(aes(x=factor(1),y=y))+xlab(&amp;quot;&amp;quot;)+ylab(&amp;quot;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://guangchuangyu.github.io/blog_images/2011/08/box2.png&#34;&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2011/08/box2.png&#34; alt=&#34;&#34; title=&#34;box2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.19 Creating a Histogram&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;data(Cars93, package=&amp;quot;MASS&amp;quot;)
par(mfrow=c(1,2))
hist(Cars93$MPG.city)
hist(Cars93$MPG.city, 20)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://guangchuangyu.github.io/blog_images/2011/08/hist1.png&#34;&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2011/08/hist1.png&#34; alt=&#34;&#34; title=&#34;hist1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(Cars93, aes(MPG.city))
p1 &amp;lt;- p + geom_histogram(binwidth=diff(range(Cars93$MPG.city))/5)
p2 &amp;lt;- p + geom_histogram(binwidth=diff(range(Cars93$MPG.city))/20)
grid.arrange(p1,p2, ncol=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://guangchuangyu.github.io/blog_images/2011/08/hist2.png&#34;&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2011/08/hist2.png&#34; alt=&#34;&#34; title=&#34;hist2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.23 Diagnosing a Linear Regression&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;data(iris)
m = lm( Sepal.Length ~ Sepal.Width, data=iris)
par(mfrow=c(2,2))
plot(m)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://guangchuangyu.github.io/blog_images/2011/08/lm1.png&#34;&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2011/08/lm1.png&#34; alt=&#34;&#34; title=&#34;lm1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r &amp;lt;- residuals(m)
yh &amp;lt;- predict(m)
scatterplot &amp;lt;- function(x,y,
                        title=&amp;quot;&amp;quot;,
                        xlab=&amp;quot;&amp;quot;,
                        ylab=&amp;quot;&amp;quot;) {
    d &amp;lt;- data.frame(x=x,y=y)
    p &amp;lt;- ggplot(d, aes(x=x,y=y)) +
            geom_point() +
                ggtitle(title) +
                    xlab(xlab) +
                        ylab(ylab)
    return(p)
    }
p1 &amp;lt;- scatterplot(yh,r,
                  title=&amp;quot;Residuals vs Fitted&amp;quot;,
                  xlab=&amp;quot;Fitted values&amp;quot;,
                  ylab=&amp;quot;Residuals&amp;quot;)
p1 &amp;lt;- p1 +geom_hline(yintercept=0)+geom_smooth()

s &amp;lt;- sqrt(deviance(m)/df.residual(m))
rs &amp;lt;- r/s

qqplot &amp;lt;- function(y,
                   distribution=qnorm,
                   title=&amp;quot;Normal Q-Q&amp;quot;,
                   xlab=&amp;quot;Theretical Quantiles&amp;quot;,
                   ylab=&amp;quot;Sample Quantiles&amp;quot;) {
    require(ggplot2)
    x &amp;lt;- distribution(ppoints(y))
    d &amp;lt;- data.frame(x=x, y=sort(y))
    p &amp;lt;- ggplot(d, aes(x=x, y=y)) +
        geom_point() +
            geom_line(aes(x=x, y=x)) +
                ggtitle(title=title) +
                    xlab(xlab) +
                        ylab(ylab)
    return(p)
}

p2 &amp;lt;- qqplot(rs, ylab=&amp;quot;Standardized residuals&amp;quot;)

sqrt.rs &amp;lt;- sqrt(abs(rs))
p3 &amp;lt;- scatterplot(yh,sqrt.rs,
                  title=&amp;quot;Scale-Location&amp;quot;,
                  xlab=&amp;quot;Fitted values&amp;quot;,
                  ylab=expression(sqrt(&amp;quot;Standardized residuals&amp;quot;)))
p3 &amp;lt;- p3 + geom_smooth()

hii &amp;lt;- lm.influence(m, do.coef = FALSE)$hat
p4 &amp;lt;- scatterplot(hii,rs)
p4 &amp;lt;- p4+
    geom_hline(yintercept=0)+
    geom_smooth() +
    geom_text(aes(x=min(hii)+diff(range(hii))*0.3,
                  y=min(rs)+diff(range(rs))*0.04,
                  label=&amp;quot;--   Cook&#39;s distance&amp;quot;, size=3))+
    theme(legend.position=&amp;quot;none&amp;quot;)

grid.arrange(p1,p2,p3,p4, ncol=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://guangchuangyu.github.io/blog_images/2011/08/lm2.png&#34;&gt;&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2011/08/lm2.png&#34; alt=&#34;&#34; title=&#34;lm2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>the batman equation</title>
      <link>http://guangchuangyu.github.io/post/r/ggplot2/2011_bat-man/</link>
      <pubDate>Sat, 13 Aug 2011 17:44:42 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/post/r/ggplot2/2011_bat-man/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.hardocp.com/news/2011/07/29/batman_equation/&#34;&gt;HardOCP&lt;/a&gt; has
an image with an equation which apparently draws the Batman logo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.hardocp.com/images/news/1311973762NiYVK7SXvm_1_1_l.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;$((\frac{x}{7})^2 \cdot \sqrt{\frac{||x|-3|}{(|x|-3)}}+
(\frac{y}{3})^2 \cdot \sqrt{\frac{|y+3 \cdot
\frac{\sqrt{33}}{7}|}{y+3 \cdot \frac{\sqrt{33}}{7}}}-1) \cdot
(|\frac{x}{2}|-((3 \cdot \frac{\sqrt{33}-7)}{112}) \cdot
x^2-3+\sqrt{1-(||x|-2|-1)^2}-y) \cdot (9 \cdot
\sqrt{\frac{|(|x|-1) \cdot (|x|-0.75)|}{((1-|x|)*(|x|-0.75))}}-8
\cdot |x|-y) \cdot (3 \cdot |x|+0.75 \cdot \sqrt{\frac{|(|x|-0.75)
\cdot (|x|-0.5)|}{((0.75-|x|) \cdot (|x|-0.5))}}-y) \cdot (2.25
\cdot \sqrt{\frac{|(x-0.5) \cdot (x+0.5)|}{((0.5-x) \cdot
(0.5+x))}}-y) \cdot (\frac{6 \cdot \sqrt{10}}{7}+(1.5-0.5 \cdot
|x|) \cdot \sqrt{\frac{||x|-1|}{|x|-1}}-(\frac{6 \cdot
\sqrt{10}}{14}) \cdot \sqrt{4-(|x|-1)^2}-y) =0$&lt;/p&gt;

&lt;p&gt;This function is very delightful for drawing such a graph, but write it
down in latex is very tedious. As a product of factors is 0 if and only
if any one of them is 0, multiplying these six factors puts the curves
together. This graph is no more than the combination of six curves.&lt;/p&gt;

&lt;p&gt;All these six curves are very simple, for instance, the first factor is
the ellipse $(\frac{x}{7})^2 + (\frac{y}{3})^2 = 1 $, in the
region where &lt;code&gt;|x|&amp;gt;3&lt;/code&gt; and &lt;code&gt;y&amp;gt;-3$\sqrt{33}$/7&lt;/code&gt;; the region
were restricted by $\sqrt{\frac{||x|-3|}{(|x|-3)}} $ and
$\sqrt{\frac{|y+3 \cdot \frac{\sqrt{33}}{7}|}{y+3 \cdot \frac{\sqrt{33}}{7}}}$&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s what I got from the equation using ggplot2&amp;hellip;
&lt;img src=&#34;http://guangchuangyu.github.io/blog_images/2011/08/X.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
require(ggplot2)

f1 &amp;lt;- function(x) {
    y1 &amp;lt;- 3*sqrt(1-(x/7)^2)
    y2 &amp;lt;- -3*sqrt(1-(x/7)^2)
    y &amp;lt;- c(y1,y2)
    d &amp;lt;- data.frame(x=x,y=y)
    d &amp;lt;- d[d$y &amp;gt; -3*sqrt(33)/7,]
    return(d)
}

x1 &amp;lt;- c(seq(3, 7, 0.001), seq(-7, -3, 0.001))
d1 &amp;lt;- f1(x1)
p1 &amp;lt;- ggplot(d1,aes(x,y)) + geom_point(color=&amp;quot;red&amp;quot;)

x2 &amp;lt;- seq(-4,4, 0.001)
y2 &amp;lt;- abs(x2/2)-(3*sqrt(33)-7)*x2^2/112-3 + sqrt(1-(abs(abs(x2)-2)-1)^2)

#only work with ggplot2 &amp;lt;= 0.8.9
#p2 &amp;lt;- p1 + geom_point(aes(x=x2,y=y2), color=&amp;quot;yellow&amp;quot;) 

# in ggplot2 0.9.0, should be:
d2 &amp;lt;- data.frame(x2=x2, y2=y2)
p2 &amp;lt;- p1 + geom_point(data=d2, aes(x=x2,y=y2), color=&amp;quot;yellow&amp;quot;)



x3 &amp;lt;- c(seq(0.75,1,0.001), seq(-1,-0.75,0.001))
y3 &amp;lt;- 9-8*abs(x3)
#p3 &amp;lt;- p2+geom_point(aes(x=x3,y=y3), color=&amp;quot;green&amp;quot;)
d3 &amp;lt;- data.frame(x3=x3, y3=y3)
p3 &amp;lt;- p2+geom_point(data=d3, aes(x=x3,y=y3), color=&amp;quot;green&amp;quot;)


x4 &amp;lt;- c(seq(0.5,0.75,0.001), seq(-0.75,-0.5,0.001))
y4 &amp;lt;- 3*abs(x4)+0.75
#p4 &amp;lt;- p3+geom_point(aes(x=x4,y=y4), color=&amp;quot;steelblue&amp;quot;)
d4 &amp;lt;- data.frame(x4=x4,y4=y4)
p4 &amp;lt;- p3+geom_point(data=d4, aes(x=x4,y=y4), color=&amp;quot;steelblue&amp;quot;)


x5 &amp;lt;- seq(-0.5,0.5,0.001)
y5 &amp;lt;- rep(2.25,length(x5))
#p5 &amp;lt;- p4+geom_point(aes(x=x5,y=y5))
d5 &amp;lt;- data.frame(x5=x5,y5=y5)
p5 &amp;lt;- p4+geom_point(data=d5, aes(x=x5,y=y5))

x6 &amp;lt;- c(seq(-3,-1,0.001), seq(1,3,0.001))
y6 &amp;lt;- 6 * sqrt(10)/7 +
    (1.5 - 0.5 * abs(x6)) * sqrt(abs(abs(x6)-1)/(abs(x6)-1)) -
    6 * sqrt(10) * sqrt(4-(abs(x6)-1)^2)/14
#p6 &amp;lt;- p5+geom_point(aes(x=x6,y=y6), colour=&amp;quot;blue&amp;quot;)
d6 &amp;lt;- data.frame(x6=x6,y6=y6)
p6 &amp;lt;- p5+geom_point(data=d6,aes(x=x6,y=y6), colour=&amp;quot;blue&amp;quot;)

p &amp;lt;- p6+theme_bw()
print(p)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>