[{"authors":["admin"],"categories":null,"content":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://guangchuangyu.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet.","tags":null,"title":"Guangchuang Yu","type":"authors"},{"authors":null,"categories":null,"content":" List your academic interests. [interests] interests = [ \u0026ldquo;Bioinformatics\u0026rdquo;, \u0026ldquo;Metagenomics\u0026rdquo;, \u0026ldquo;Molecular Evolution\u0026rdquo;, \u0026ldquo;Visualization\u0026rdquo; ]\nList your qualifications (such as academic degrees). [[education.courses]] course = \u0026ldquo;PhD in Molecular Evolution\u0026rdquo; institution = \u0026ldquo;The University of Hong Kong\u0026rdquo; year = 2017\n[[education.courses]] course = \u0026ldquo;Master in Biochemistry and Molecular Biology\u0026rdquo; institution = \u0026ldquo;Anhui Medical University\u0026rdquo; year = 2009\n[[education.courses]] course = \u0026ldquo;BSc in Biotechnology\u0026rdquo; institution = \u0026ldquo;South China Agricultural University\u0026rdquo; year = 2005\n+++\nBiography I am a Professor of Bioinformatics at Southern Medical University. I am broadly interested in bioinformatics, metagenomics and molecular evolution.\nI love the R programming language and have contributed 10 Bioconductor packages to the community.\n","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461110400,"objectID":"dde899e724be9f52e9a4dbce0e33aae0","permalink":"https://guangchuangyu.github.io/home/about/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/home/about/","section":"home","summary":"List your academic interests. [interests] interests = [ \u0026ldquo;Bioinformatics\u0026rdquo;, \u0026ldquo;Metagenomics\u0026rdquo;, \u0026ldquo;Molecular Evolution\u0026rdquo;, \u0026ldquo;Visualization\u0026rdquo; ]\nList your qualifications (such as academic degrees). [[education.courses]] course = \u0026ldquo;PhD in Molecular Evolution\u0026rdquo; institution = \u0026ldquo;The University of Hong Kong\u0026rdquo; year = 2017\n[[education.courses]] course = \u0026ldquo;Master in Biochemistry and Molecular Biology\u0026rdquo; institution = \u0026ldquo;Anhui Medical University\u0026rdquo; year = 2009\n[[education.courses]] course = \u0026ldquo;BSc in Biotechnology\u0026rdquo; institution = \u0026ldquo;South China Agricultural University\u0026rdquo; year = 2005","tags":null,"title":"Biography","type":"home"},{"authors":null,"categories":null,"content":"","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461110400,"objectID":"7f6e4d9797a7c0a7535fdb7cbfd9134d","permalink":"https://guangchuangyu.github.io/home/publications_selected/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/home/publications_selected/","section":"home","summary":"","tags":null,"title":"Selected Publications","type":"home"},{"authors":null,"categories":null,"content":"","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461110400,"objectID":"3b8be3c3e99a94c71f5a4950c9057d4c","permalink":"https://guangchuangyu.github.io/home/publications/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/home/publications/","section":"home","summary":"","tags":null,"title":"Recent Publications","type":"home"},{"authors":null,"categories":null,"content":"","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461110400,"objectID":"47c2dafacf82cab88a225a6a237025b3","permalink":"https://guangchuangyu.github.io/home/talks/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/home/talks/","section":"home","summary":"","tags":null,"title":"Recent \u0026 Upcoming Talks","type":"home"},{"authors":null,"categories":null,"content":"","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461110400,"objectID":"71e0c93909166a9bcc9d519e359df2be","permalink":"https://guangchuangyu.github.io/home/posts/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/home/posts/","section":"home","summary":"","tags":[],"title":"Recent Posts","type":"home"},{"authors":null,"categories":null,"content":"","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461110400,"objectID":"cb234fb1cbd65d4d877e3939c417eb08","permalink":"https://guangchuangyu.github.io/home/projects/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/home/projects/","section":"home","summary":"","tags":null,"title":"Projects","type":"home"},{"authors":null,"categories":null,"content":"This is an example of using the custom widget to create your own homepage section.\nI am a teaching instructor for the following courses at University X:\n xx yy  ","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461110400,"objectID":"67b61fe6987980ae1a91d0cd5a7ef83a","permalink":"https://guangchuangyu.github.io/home/teaching/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/home/teaching/","section":"home","summary":"This is an example of using the custom widget to create your own homepage section.\nI am a teaching instructor for the following courses at University X:\n xx yy  ","tags":null,"title":"Teaching","type":"home"},{"authors":null,"categories":null,"content":"","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461110400,"objectID":"60bce91911248c5545092ef6ed638808","permalink":"https://guangchuangyu.github.io/home/contact/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/home/contact/","section":"home","summary":"","tags":null,"title":"Contact","type":"home"},{"authors":null,"categories":["Visualization","R"],"content":"Applying different color palettes is also easy using scale_fill_manual to manually specify color to fill the heatmaps. However, the legends of different heatmaps (different rings here) are mixed together.\nrequire(RColorBrewer) col \u0026lt;- c(brewer.pal(5, \u0026quot;Dark2\u0026quot;), brewer.pal(4, \u0026quot;Pastel1\u0026quot;)) names(col) = c(letters[1:6], letters[24:26]) pp \u0026lt;- p2 + scale_fill_manual(values=col) print(pp) It is possible/tricky to separate them, by overriding aes. Here I introduce a solution that is easy to understand and follow. We can plot the tree with each individual heatmap and extract each of the legend. Then we can use cowplot to combine our tree (without legend) and all the separated legends.\np1x \u0026lt;- p1 + scale_fill_manual(values=col) p2x \u0026lt;- gheatmap(circ, df[, \u0026quot;second\u0026quot;, drop=F], offset=5, width=.1) + scale_fill_manual(values=col) require(cowplot) leg1 \u0026lt;- get_legend(p1x) leg2 \u0026lt;- get_legend(p2x) pp \u0026lt;- pp + theme(legend.position=\u0026quot;none\u0026quot;) plot_grid(pp, leg1, leg2, ncol=3, rel_widths=c(1, .1, .1)) ","date":1536548408,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536548408,"objectID":"c45dd9ed3d38b4122369865953760e23","permalink":"https://guangchuangyu.github.io/2018/09/separating-legends-of-heatmaps-in-ggtree/","publishdate":"2018-09-10T11:00:08+08:00","relpermalink":"/2018/09/separating-legends-of-heatmaps-in-ggtree/","section":"post","summary":"  I’ve been having great success with ggtree now and have recommended it to several colleages here in Oxford.\n  Is there any way to seperate the legend in heatmaps? Eg I have plotted a tree in a circular style with outer rings given extra data - I would like a seperate key for each ring - is this possible?\n This is a user question. Plotting multiple heatmaps that align to the phylogenetic tree is easy with gheatmap function.\nHere is a simple example:\nlibrary(\u0026quot;ggplot2\u0026quot;) library(\u0026quot;ggtree\u0026quot;) nwk \u0026lt;- system.file(\u0026quot;extdata\u0026quot;, \u0026quot;sample.nwk\u0026quot;, package=\u0026quot;treeio\u0026quot;) tree \u0026lt;- read.tree(nwk) circ \u0026lt;- ggtree(tree, layout = \u0026quot;circular\u0026quot;) df \u0026lt;- data.frame(first=c(\u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;a\u0026quot;, \u0026quot;c\u0026quot;, \u0026quot;d\u0026quot;, \u0026quot;d\u0026quot;, \u0026quot;a\u0026quot;, \u0026quot;b\u0026quot;, \u0026quot;e\u0026quot;, \u0026quot;e\u0026quot;, \u0026quot;f\u0026quot;, \u0026quot;c\u0026quot;, \u0026quot;f\u0026quot;), second= c(\u0026quot;z\u0026quot;, \u0026quot;z\u0026quot;, \u0026quot;z\u0026quot;, \u0026quot;z\u0026quot;, \u0026quot;y\u0026quot;, \u0026quot;y\u0026quot;, \u0026quot;y\u0026quot;, \u0026quot;y\u0026quot;, \u0026quot;x\u0026quot;, \u0026quot;x\u0026quot;, \u0026quot;x\u0026quot;, \u0026quot;a\u0026quot;, \u0026quot;a\u0026quot;)) rownames(df) \u0026lt;- tree$tip.label p1 \u0026lt;- gheatmap(circ, df[, \u0026quot;first\u0026quot;, drop=F], offset=.8, width=.1, colnames_angle=90, colnames_offset_y = .25) p2 \u0026lt;- gheatmap(p1, df[, \u0026quot;second\u0026quot;, drop=F], offset=5, width=.1, colnames_angle=90, colnames_offset_y = .25) ","tags":["ggtree"],"title":"separating legends of heatmaps in ggtree","type":"post"},{"authors":null,"categories":["Evolution","Visualization","R"],"content":"require(treeio) ## Loading required package: treeio ## Registered S3 method overwritten by \u0026#39;treeio\u0026#39;: ## method from ## root.phylo ape require(ggtree) ## Loading required package: ggtree ## ggtree v1.99.1 For help: https://yulab-smu.github.io/treedata-book/ ## ## If you use ggtree in published research, please cite the most appropriate paper(s): ## ## \u001b[36m-\u001b[39m Guangchuang Yu, Tommy Tsan-Yuk Lam, Huachen Zhu, Yi Guan. Two methods for mapping and visualizing associated data on phylogeny using ggtree. Molecular Biology and Evolution 2018, 35(12):3041-3043. doi: 10.1093/molbev/msy194 ## \u001b[36m-\u001b[39m Guangchuang Yu, David Smith, Huachen Zhu, Yi Guan, Tommy Tsan-Yuk Lam. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution 2017, 8(1):28-36, doi:10.1111/2041-210X.12628 tr \u0026lt;- read.tree(text = \u0026quot;((a,(b,c)),d);\u0026quot;) genus \u0026lt;- c(\u0026quot;Gorilla\u0026quot;, \u0026quot;Pan\u0026quot;, \u0026quot;Homo\u0026quot;, \u0026quot;Pongo\u0026quot;) species \u0026lt;- c(\u0026quot;gorilla\u0026quot;, \u0026quot;spp.\u0026quot;, \u0026quot;sapiens\u0026quot;, \u0026quot;pygmaeus\u0026quot;) geo \u0026lt;- c(\u0026quot;Africa\u0026quot;, \u0026quot;Africa\u0026quot;, \u0026quot;World\u0026quot;, \u0026quot;Asia\u0026quot;) d \u0026lt;- data.frame(label = tr$tip.label, genus = genus, species = species, geo = geo) d ## label genus species geo ## 1 a Gorilla gorilla Africa ## 2 b Pan spp. Africa ## 3 c Homo sapiens World ## 4 d Pongo pygmaeus Asia ggtree(tr) %\u0026lt;+% d + xlim(NA, 5) + geom_tiplab(aes(label=paste0(\u0026#39;italic(\u0026#39;, genus, \u0026#39;)~bolditalic(\u0026#39;, species, \u0026#39;)~\u0026#39;, geo)), parse=T) However, it is also possible to rename taxa of the tree object (either treedata or phylo) in treeio:\ntr2 = rename_taxa(tr, d, label, genus) write.tree(tr2) ## [1] \u0026quot;((Gorilla,(Pan,Homo)),Pongo);\u0026quot; d2 = dplyr::mutate(d, newlab = paste(genus, species, sep=\u0026#39;|\u0026#39;)) d2 ## label genus species geo newlab ## 1 a Gorilla gorilla Africa Gorilla|gorilla ## 2 b Pan spp. Africa Pan|spp. ## 3 c Homo sapiens World Homo|sapiens ## 4 d Pongo pygmaeus Asia Pongo|pygmaeus tr3 = rename_taxa(tr, d2, label, newlab) write.tree(tr3) ## [1] \u0026quot;((Gorilla|gorilla,(Pan|spp.,Homo|sapiens)),Pongo|pygmaeus);\u0026quot; If the input tree object is a treedata instance, you can use write.beast to export the tree with associated data to a BEAST compatible NEXUS file.\nVignettes  Importing trees with data Exporting trees with data   ","date":1524106808,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1524106808,"objectID":"e64635a2d634830b384433598a6cc043","permalink":"https://guangchuangyu.github.io/2018/04/rename-phylogeny-tip-labels-in-treeio/","publishdate":"2018-04-19T11:00:08+08:00","relpermalink":"/2018/04/rename-phylogeny-tip-labels-in-treeio/","section":"post","summary":" I don’t know whether ‘rename taxa’ is a common task or not. It seems not a good idea to rename taxa in Newick tree text, since it may introduce problems when mapping the original sequence alignment to the tree.\nIf you just want to show different or additional information when plotting the tree, it is fine and easy to do it using ggtree:\n","tags":["ggtree","treeio"],"title":"rename phylogeny tip labels in treeio","type":"post"},{"authors":null,"categories":["R","Visualization"],"content":"require(ggimage) img = \u0026quot;https://assets.bakker.com/ProductPics/560x676/10028-00-BAKI_20170109094316.jpg\u0026quot; ggbackground(p, img) This image file is too colorful and it is hard to see the patterns of the data points. We can manipulate the image using the functions provided by magick package. For example, the following function emulate a classic high-pass filter from photoshop:\nrequire(magick) ggbackground(p, img, image_fun = function(x) image_negate(image_convolve(x, \u0026#39;DoG:0,0,2\u0026#39;))) Here are examples of setting transparency and color:\nimg = \u0026quot;http://phylopic.org/assets/images/submissions/bf5fe2c5-1247-4ed9-93e2-d5af255ec462.512.png\u0026quot; p1 = ggbackground(p, img) + ggtitle(\u0026quot;ggbackground(p, img)\u0026quot;) p2 = ggbackground(p, img, alpha=.3) + ggtitle(\u0026quot;ggbackground(p, img, alpha=.3)\u0026quot;) p3 = ggbackground(p, img, alpha=.3, color=\u0026quot;steelblue\u0026quot;) + ggtitle(\u0026#39;ggbackground(p, img, alpha=.3, color=\u0026quot;steelblue\u0026quot;)\u0026#39;) cowplot::plot_grid(p1, p2, p3, ncol=3) Links  ggimage package: CRAN, GitHub ggimage introduction Annotating phylogenetic tree with images using ggtree and ggimage   ","date":1524056400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1524056400,"objectID":"3894702cf21c6755a410a293b2af77ef","permalink":"https://guangchuangyu.github.io/2018/04/setting-ggplot2-background-with-ggbackground/","publishdate":"2018-04-18T21:00:00+08:00","relpermalink":"/2018/04/setting-ggplot2-background-with-ggbackground/","section":"post","summary":" ggimage 0.1.4 is available on CRAN.\nThis release introduces a new function called ggbackground for setting image background as ggplot canvas.\nrequire(ggplot2) p \u0026lt;- ggplot(iris) + aes(x = Sepal.Length, y = Sepal.Width, color=Species) + geom_point(size=5) + theme_classic() Suppose we have the above ggplot object, p, the only thing we need to do is passing the p with an image file name (local or remote) to ggbackground, as demonstrated below:\n","tags":["ggimage"],"title":"setting ggplot2 background with ggbackground","type":"post"},{"authors":null,"categories":["Visualization","R"],"content":"Annotate tips library(ggimage) library(ggtree) url \u0026lt;- paste0(\u0026quot;https://raw.githubusercontent.com/TreeViz/\u0026quot;, \u0026quot;metastyle/master/design/viz_targets_exercise/\u0026quot;) x \u0026lt;- read.tree(paste0(url, \u0026quot;tree_boots.nwk\u0026quot;)) info \u0026lt;- read.csv(paste0(url, \u0026quot;tip_data.csv\u0026quot;)) p \u0026lt;- ggtree(x) %\u0026lt;+% info + xlim(NA, 6) p + geom_tiplab(aes(image= imageURL), geom=\u0026quot;image\u0026quot;, offset=2, align=T, size=.16, hjust=0) + geom_tiplab(geom=\u0026quot;label\u0026quot;, offset=1, hjust=.5)  Annotate internal nodes ## example from https://rgriff23.github.io/2017/05/11/primate-phylogeny-ggtree.html library(ape) tree \u0026lt;- read.nexus(\u0026quot;https://raw.githubusercontent.com/rgriff23/Dissertation/master/Chapter_2/data/tree.nex\u0026quot;) phylopic_info \u0026lt;- data.frame(node = c(124, 113, 110, 96, 89, 70), phylopic = c(\u0026quot;7fb9bea8-e758-4986-afb2-95a2c3bf983d\u0026quot;, \u0026quot;bac25f49-97a4-4aec-beb6-f542158ebd23\u0026quot;, \u0026quot;f598fb39-facf-43ea-a576-1861304b2fe4\u0026quot;, \u0026quot;aceb287d-84cf-46f1-868c-4797c4ac54a8\u0026quot;, \u0026quot;0174801d-15a6-4668-bfe0-4c421fbe51e8\u0026quot;, \u0026quot;72f2f854-f3cd-4666-887c-35d5c256ab0f\u0026quot;), species = c(\u0026quot;galagoids\u0026quot;, \u0026quot;lemurs\u0026quot;, \u0026quot;tarsiers\u0026quot;, \u0026quot;cebids\u0026quot;, \u0026quot;hominoids\u0026quot;, \u0026quot;cercopithecoids\u0026quot;)) pg \u0026lt;- ggtree(tree) pg %\u0026lt;+% phylopic_info + geom_nodelab(aes(image=phylopic), geom=\u0026quot;phylopic\u0026quot;, alpha=.5, color=\u0026#39;steelblue\u0026#39;) d \u0026lt;- data.frame(node = c(\u0026quot;70\u0026quot;,\u0026quot;89\u0026quot;,\u0026quot;96\u0026quot;,\u0026quot;110\u0026quot;,\u0026quot;113\u0026quot;,\u0026quot;124\u0026quot;), images = c(\u0026quot;https://i.imgur.com/8VA9cYw.png\u0026quot;, \u0026quot;https://i.imgur.com/XYM1T2x.png\u0026quot;, \u0026quot;https://i.imgur.com/EQs5ZZe.png\u0026quot;, \u0026quot;https://i.imgur.com/2xin0UK.png\u0026quot;, \u0026quot;https://i.imgur.com/hbftayl.png\u0026quot;, \u0026quot;https://i.imgur.com/3wDHW8n.png\u0026quot;)) pg %\u0026lt;+% d + geom_nodelab(aes(image=images), geom=\u0026quot;image\u0026quot;)  Use image as background pg + geom_phylopic(image=\u0026quot;79ad5f09-cf21-4c89-8e7d-0c82a00ce728\u0026quot;, size=Inf, alpha=.5, color=\u0026#39;firebrick\u0026#39;) Here is another example that uses Tabikaeru (known as traveling frog, a popular mobile game) image to decorate a phylogenetic tree of frog, see reproducible source code on https://github.com/GuangchuangYu/frog_tree.\n ","date":1519873848,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1519873848,"objectID":"cbce46faf1aa7b6a72bdaa5e260362a5","permalink":"https://guangchuangyu.github.io/2018/03/annotating-phylogenetic-tree-with-images-using-ggtree-and-ggimage/","publishdate":"2018-03-01T11:10:48+08:00","relpermalink":"/2018/03/annotating-phylogenetic-tree-with-images-using-ggtree-and-ggimage/","section":"post","summary":" With ggimage, we are able to plot images using grammar of graphics. The layers defined in ggimage can be directly applied to ggtree to annotate phylogenetic tree using local/online image files.\nggtree seamlessly work with ggimage. The geom_tiplab and geom_nodelab can accept parameter of geom=\"image\" to parse taxa labels as image files and use them to “label” the taxa using images instead of text strings. Here are some examples for demonstration.\n","tags":["ggtree","ggimage","tree"],"title":"Annotating phylogenetic tree with images using ggtree and ggimage","type":"post"},{"authors":null,"categories":["Genomics","R"],"content":"Reassortment is an important strategy for influenza A viruses to introduce a HA subtype that is new to human populations, which creates the possibilities of pandemic.\nA diagram showed above (Figure 2 of doi:10.1038/srep25549) is widely used to illustrate the reassortment events. While such diagrams are mostly manually draw and edit without software tool to automatically generate. Here, I implemented the hybrid_plot function for producing publication quality figure of reassortment events.\nlibrary(tibble) library(ggplot2) n \u0026lt;- 8 virus_info \u0026lt;- tibble( id = 1:7, x = c(rep(1990, 4), rep(2000, 2), 2009), y = c(1,2,3,5, 1.5, 3, 4), segment_color = list( rep('purple', n), rep('red', n), rep('darkgreen', n), rep('lightgreen', n), c('darkgreen', 'darkgreen', 'red', 'darkgreen', 'red', 'purple', 'red', 'purple'), c('darkgreen', 'darkgreen', 'red', 'darkgreen', 'darkgreen', 'purple', 'red', 'purple'), c('darkgreen', 'lightgreen', 'lightgreen', 'darkgreen', 'darkgreen', 'purple', 'red', 'purple')) ) flow_info \u0026lt;- tibble(from = c(1,2,3,3,4,5,6), to = c(5,5,5,6,7,6,7)) hybrid_plot(virus_info, flow_info)  The hybrid_plot requires two tibble data frame of virus information and genetic flow information.\nUsers need to provide x and y positions to plot the virus, this make sense for geographically and temporally information are usually available in such phylodynamic study and can be employed to set x or y to provide more information and help interpretation of the reassortment events.\nWe use hexagon to represent virus. Users can set the virus outer boundary color by v_color and fill the virus by v_fill. Color of line segments that indicate the genetic flow relationship can be specify via l_color parameter.\nhybrid_plot(virus_info, flow_info, v_color='firebrick', v_fill='darkgreen', l_color='steelblue')  We usually have more information to present, for example host information and HA subtype etc. and these information can be used to color the virus either by v_color or v_fill\nvirus_info$Host = c(\u0026quot;Avian\u0026quot;, \u0026quot;Human\u0026quot;, rep(\u0026quot;Swine\u0026quot;, 4), \u0026quot;Human\u0026quot;) hybrid_plot(virus_info, flow_info, v_color=~Host, v_fill=~Host)  The relative virus size can also be specify if a virus_size column is available in the input virus_info data.\nvirus_info$virus_size \u0026lt;- c(rep(1, 3), 2, 1, 1, 1.5) hybrid_plot(virus_info, flow_info, v_color=~Host, v_fill=~Host)  If label and label_position coloumns are available, the virus labels (virus name or other information) will be added automatically.\nvirus_info$label \u0026lt;- c(\u0026quot;Avian\u0026quot;, \u0026quot;Human\\nH3N2\u0026quot;, \u0026quot;Classic\\nswine\\nH1N1\u0026quot;, \u0026quot;Eurasian swine\u0026quot;, \u0026quot;North American swine\\n triple reassrotant H3N2\u0026quot;, \u0026quot;North American swine\\n triple reassortant H1N2\u0026quot;, \u0026quot;2009 Human H1N1\u0026quot;) virus_info$label_position \u0026lt;- c('left', 'left', 'left', 'below', 'below', 'upper', 'below') hybrid_plot(virus_info, flow_info, v_color=~Host, v_fill=~Host)  User can use asp to set the aspect ratio of hexagons, asp \u0026lt; 1 for thick/short and asp \u0026gt; 1 for thin/tall.\nhybrid_plot(virus_info, flow_info, v_color=~Host, v_fill=~Host, asp=2)  The output of hybrid_plot is a ggplot object and users can use ggplot2 to modify the details.\ntitle \u0026lt;- \u0026quot;Reassortment events in evolution of the 2009 influenza A (H1N1) virus\u0026quot; caption \u0026lt;- 'Gene segments: PB2, PB1, PA, HA, NP, NA, M, NS' color \u0026lt;- c(Avian=\u0026quot;purple\u0026quot;, Human=\u0026quot;red\u0026quot;, Swine=\u0026quot;darkgreen\u0026quot;) hybrid_plot(virus_info, flow_info, v_color=~Host, v_fill=~Host) + labs(caption=caption, title=title) + scale_color_manual(values=color) + scale_fill_manual(values=color) + scale_x_continuous(breaks=c(1990, 2000, 2009)) + xlab(NULL) + ylab(NULL) + theme_minimal() + theme(axis.line.y = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), panel.grid.minor=element_blank(), panel.grid.major.y=element_blank(), legend.position = c(.95, .1) )  Top-down or bottom-up style is also supported.\nx \u0026lt;- virus_info$x virus_info$x \u0026lt;- virus_info$y virus_info$y \u0026lt;- x virus_info$label_position \u0026lt;- c(rep(\u0026quot;right\u0026quot;, 3), \u0026quot;left\u0026quot;, \u0026quot;left\u0026quot;, \u0026quot;right\u0026quot;, \u0026quot;right\u0026quot;) hybrid_plot(virus_info, flow_info, v_color=~Host, v_fill=~Host) + scale_y_reverse() + scale_x_continuous(limits=c(0, 5.5))  User can also use Emoji to label the virus (host information in this example):\nvirus_info$label \u0026lt;- c(\u0026quot;chicken\u0026quot;, \u0026quot;woman\u0026quot;, \u0026quot;pig\u0026quot;, \u0026quot;pig\u0026quot;, \u0026quot;pig\u0026quot;, \u0026quot;pig\u0026quot;, \u0026quot;woman\u0026quot;) hybrid_plot(virus_info, flow_info, v_color=~Host, v_fill=~Host, parse='emoji', t_size=8, t_color='firebrick') + scale_y_reverse()  In case you don\u0026rsquo;t have xy-coordination information, you can use set_layout function to auto setting the xy position using selected layout function.\nvirus_info \u0026lt;- set_layout(virus_info, flow_info, layout=\u0026quot;layout.kamada.kawai\u0026quot;) hybrid_plot(virus_info, flow_info, parse='emoji', t_size=8, t_color='firebrick')  virus_info \u0026lt;- set_layout(virus_info, flow_info, layout=\u0026quot;layout.fruchterman.reingold\u0026quot;) hybrid_plot(virus_info, flow_info, parse='emoji', t_size=8, t_color='firebrick')  Please let me know if you know any published reassortment data that contain spatial information, I will demonstrate how to visualize reassortment history on a map.\n","date":1512443347,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1512443347,"objectID":"8b06efc0f71133a4d3d8d3f07a6eeb38","permalink":"https://guangchuangyu.github.io/2017/12/visualizing-reassortment-history-using-seqcombo/","publishdate":"2017-12-05T11:09:07+08:00","relpermalink":"/2017/12/visualizing-reassortment-history-using-seqcombo/","section":"post","summary":"Reassortment is an important strategy for influenza A viruses to introduce a HA subtype that is new to human populations, which creates the possibilities of pandemic.\nA diagram showed above (Figure 2 of doi:10.1038/srep25549) is widely used to illustrate the reassortment events. While such diagrams are mostly manually draw and edit without software tool to automatically generate. Here, I implemented the hybrid_plot function for producing publication quality figure of reassortment events.\nlibrary(tibble) library(ggplot2) n \u0026lt;- 8 virus_info \u0026lt;- tibble( id = 1:7, x = c(rep(1990, 4), rep(2000, 2), 2009), y = c(1,2,3,5, 1.5, 3, 4), segment_color = list( rep('purple', n), rep('red', n), rep('darkgreen', n), rep('lightgreen', n), c('darkgreen', 'darkgreen', 'red', 'darkgreen', 'red', 'purple', 'red', 'purple'), c('darkgreen', 'darkgreen', 'red', 'darkgreen', 'darkgreen', 'purple', 'red', 'purple'), c('darkgreen', 'lightgreen', 'lightgreen', 'darkgreen', 'darkgreen', 'purple', 'red', 'purple')) ) flow_info \u0026lt;- tibble(from = c(1,2,3,3,4,5,6), to = c(5,5,5,6,7,6,7)) hybrid_plot(virus_info, flow_info)  ","tags":["seqcombo","influenza"],"title":"visualizing reassortment history using seqcombo","type":"post"},{"authors":null,"categories":["Biology","Research"],"content":"My friend who doing his PhD study at Johns Hopkins just send me the link about a SR paper of plagiarism. I have very similar experence of a paper published on BMC Systems Biology, which plagiarized my work and the editor just decided to publish an erratum.\nDeng etc. published an R package, ppiPre, that copied source code of my package, GOSemSim, and pretended that they developed these algorithms by themselves in their paper.\nHere is the screenshot of the source code (left: ppiPre, right: GOSemSim).\nYou can find out more on my blog post.\nAs a developer of several open source software, I am glad that someone find my source code useful and happy if someone use my source code to make something better. But I am not happy if someone copies my source code by removing author information and changing function names to pretend the code was developed by himself. The situation is even worse in academic. Taking someone else\u0026rsquo;s works and passing it off as one\u0026rsquo;s own is definitely plagiarism and not allow in academic.\nAfter I found ppiPre plagiarized my work, I contacted the editor:\nVery quickly, the editor replied my email:\nHe told me that they \u0026ldquo;do take cases of plagiarism very seriously\u0026rdquo;. I don\u0026rsquo;t know how long their \u0026ldquo;due course\u0026rdquo; is and waited for the editor\u0026rsquo;s reply for 5 months without receiving any updated information. I then contacted CRAN for the issue of the ppiPre that copied source code without acknowledgement and the package was removed from CRAN at that time. After that I sent another email to the editor to ask for update.\nHere is the reply:\nIn the passed 5 months, they never even contacted the authors.\nI waited for 2 more months and also didn\u0026rsquo;t receive any information. I sent them email to complain that they are ruining the reputation of their journal.\nAt this time, the editor told me he had contacted the author and we can \u0026ldquo;expect an update soon\u0026rdquo;.\nI waited for another 3 months and as usual without any update received. I sent another email to ask for update.\nHere is the reply of the editor:\nThe author said that they just \u0026ldquo;failing to cite my work\u0026rdquo;. Of course this is not an issue of citation as they pretended that they implemented several algorithms that were actually developed by me in their paper. This is definitely plagiarism. The editor\u0026rsquo;s words, \u0026ldquo;submit a correction\u0026rdquo; and \u0026ldquo;within our policy\u0026rdquo;, indicate that the editor is totally fine for a paper of plagiarism to say sorry and publish a correction. (BTW: this is the last email I received from the editor)\nOf course I can\u0026rsquo;t accept this, and here is my repsponse:\n Ignorance of the law is no defence, for otherwise anyone can choose not to know the law and have a defence in committing an offence. The same applies to plagiarism.\n Ignorance of GPL license is also not an defence of publishing someone else\u0026rsquo;s work in a scientific journal to claim that they did it themselves.\nAND AGAIN, the editor just disappear. I sent emails several times to several editors and they just ignore my emails.\nI wrote blog post and asked peoples to share it on twitter and weibo. Then the first author contacted me. After severl emails\u0026rsquo; communication, he promised to retract his paper and even send me a statement:\nI never know how they interact with the editors. It was totally a black box for me as I never receive any email from both sides after the email above. They did not keep me updated. Even after they decided to publish an erratum, they didn\u0026rsquo;t notify me of their decision.\nHere is their erratum:\n The authors wish to acknowledge that the software package associated with our Research Article [1], under the name ‘ppiPre’, re-used software code for some of its functions from an existing software package, GOSemSim [2], without proper attribution and in breach of the software’s licencing terms. Additionally we neglected to cite the article by Yu et al. [3] describing the GoSemSim software.\nThe software code from GoSemSim [2] is used in the implementation of two GO semantic similarity measures, TCSS and IntelliGO. ppiPre additionally implements a KEGG-based similarity measure and three topological similarity measures, and integrates features with a support vector machine.\nWe have now updated our software package such that it is licensed under a compatible GPL version 2 licence, and revised the package to give the appropriate attribution.\nWe apologize for any inconvenience this oversight may have caused.\n They just \u0026ldquo;re-used\u0026rdquo; source code \u0026ldquo;without proper attribution\u0026rdquo; and these source code \u0026ldquo;is used in the implementation of two GO semantic similarity measures\u0026rdquo;. It seems that they implemented these methods themselves. Of course the paper is not only an issue of source code plagiarism, but also an issue of publication ethics. The ppiPre paper intended to introduce my implementation of GO semantic similarity measurement as their own to cheat reviewers and readers. They did not say a word about publication ethics and the editors also ignore such issue.\nThe case is very clear that they copied my source code and intended to pretend that\u0026rsquo;s their original work and use it to publish a paper. That\u0026rsquo;s definitely plagiarism. I am very disappointed! The editors are protecting paper of plagiarism and encouraging people to steal other\u0026rsquo;s work and publish on BMC.\n","date":1510235503,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1510235503,"objectID":"b6443b00b3b1452e5ab08d5fc8ec2b10","permalink":"https://guangchuangyu.github.io/2017/11/bmc-journal-protects-paper-of-plagiarism/","publishdate":"2017-11-09T21:51:43+08:00","relpermalink":"/2017/11/bmc-journal-protects-paper-of-plagiarism/","section":"post","summary":"My friend who doing his PhD study at Johns Hopkins just send me the link about a SR paper of plagiarism. I have very similar experence of a paper published on BMC Systems Biology, which plagiarized my work and the editor just decided to publish an erratum.\nDeng etc. published an R package, ppiPre, that copied source code of my package, GOSemSim, and pretended that they developed these algorithms by themselves in their paper.\nHere is the screenshot of the source code (left: ppiPre, right: GOSemSim).\nYou can find out more on my blog post.\nAs a developer of several open source software, I am glad that someone find my source code useful and happy if someone use my source code to make something better. But I am not happy if someone copies my source code by removing author information and changing function names to pretend the code was developed by himself. The situation is even worse in academic. Taking someone else\u0026rsquo;s works and passing it off as one\u0026rsquo;s own is definitely plagiarism and not allow in academic.\n","tags":["BMC","plagiarism","GOSemSim","ppiPre"],"title":"BMC journal protects paper of plagiarism","type":"post"},{"authors":null,"categories":["R","Visualization"],"content":"After the release of meme package, I received several feedbacks from users.\nThe most usefule one is the comment on my blog post:\n Sercan Kahveci\nGreetings Mr. Yu,\nI am very happy that this package exists. Thank you for making it! I would like to request a feature, to ensure the package is able to compete with professional meme-creation tools like memegenerator and paint.net. Since memes often use the font Impact, in white and with black outline, I believe the package would be more powerful if it also did that automatically.\nRegards,\nSercan Kahveci, MSc\nContent creator at Questionable Research Memes on Facebook https://www.facebook.com/QResearchMemes/\n The words, \u0026lsquo;compete with professional meme-creation tools\u0026rsquo;, stimulated me to develop text plotting with background outline effect.\nNow this feature is available in meme v\u0026gt;=0.0.7, which can be downloaded from CRAN.\nHere is an example:\nlibrary(meme) u \u0026lt;- system.file(\u0026quot;angry8.jpg\u0026quot;, package=\u0026quot;meme\u0026quot;) meme(u, \u0026quot;code\u0026quot;, \u0026quot;all the things!\u0026quot;)  To make this shadow text feature available to the R community, I created another package, shadowtext, that creates/draws text grob with background shadow for grid and ggplot2. If you are interesting, please refer to the online vignette.\n","date":1509607800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1509607800,"objectID":"b392a4a50cd3c412e691adf28149af78","permalink":"https://guangchuangyu.github.io/2017/11/shadow-text-effect-in-grid-and-ggplot2-graphics/","publishdate":"2017-11-02T15:30:00+08:00","relpermalink":"/2017/11/shadow-text-effect-in-grid-and-ggplot2-graphics/","section":"post","summary":"After the release of meme package, I received several feedbacks from users.\nThe most usefule one is the comment on my blog post:\n Sercan Kahveci\nGreetings Mr. Yu,\nI am very happy that this package exists. Thank you for making it! I would like to request a feature, to ensure the package is able to compete with professional meme-creation tools like memegenerator and paint.net. Since memes often use the font Impact, in white and with black outline, I believe the package would be more powerful if it also did that automatically.\nRegards,\nSercan Kahveci, MSc\nContent creator at Questionable Research Memes on Facebook https://www.facebook.com/QResearchMemes/\n The words, \u0026lsquo;compete with professional meme-creation tools\u0026rsquo;, stimulated me to develop text plotting with background outline effect.\nNow this feature is available in meme v\u0026gt;=0.0.7, which can be downloaded from CRAN.\n","tags":["shadowtext","meme","grid","ggplot2"],"title":"shadow text effect in grid and ggplot2 graphics","type":"post"},{"authors":null,"categories":["R","Visualization"],"content":"I developed a tiny toy package, meme, which is now on CRAN. As it\u0026rsquo;s name indicated, it was designed to create memes, which are captioned photos that are intended to be funny, riduculous.\nmeme() The package is quite simple. You can use meme() function to add meme captions, and this is all the package supposed to do:\nlibrary(meme) u \u0026lt;- \u0026quot;http://www.happyfamilyneeds.com/wp-content/uploads/2017/08/angry8.jpg\u0026quot; meme(u, \u0026quot;code\u0026quot;, \u0026quot;all the things!\u0026quot;)  the grammar 🙈 The meme package was implemented using grid graphic system. Since grid is the most flexible graphic system in R, I try to mimic ggplot2 (although very superficial) for practice.\nUser can use mmplot() to read and plot the input image and then using + mm_caption() to add meme captions.\nmmplot(u) + mm_caption(\u0026quot;calm down\u0026quot;, \u0026quot;and RTFM\u0026quot;, color=\u0026quot;purple\u0026quot;)  meme_save() The meme output can be saved as an object, and can be exported to file using ggsave(). Since we would like to keep the original figure aspect ratio for output meme figure, I provide a helper function, meme_save(), which takes care of the figure aspect ratio and then called ggsave() to export the figure.\nu2 \u0026lt;- \u0026quot;http://i0.kym-cdn.com/entries/icons/mobile/000/000/745/success.jpg\u0026quot; x \u0026lt;- meme(u2, \u0026quot;please\u0026quot;, \u0026quot;tell me more\u0026quot;) meme_save(x, file=\u0026quot;docs/Figs/meme.png\u0026quot;)  the plot method Users can plot the meme() output and change the caption or other parameters in real time.\nplot(x, size = 2, \u0026quot;happy friday!\u0026quot;, \u0026quot;wait, sorry, it's monday\u0026quot;, color = \u0026quot;firebrick\u0026quot;, font = \u0026quot;Courier\u0026quot;)  the + method Instead of using parameters in plot() explictely, Users can use + aes() to set the plot parameters:\nx + aes(upper = \u0026quot;#barbarplots\u0026quot;, lower = \u0026quot;friends don't let friends make bar plots\u0026quot;, color = firebrick, font = Courier, size=1.5)  or using + list(). The following command will also generate the figure displayed above.\nx + list(upper = \u0026quot;#barbarplots\u0026quot;, lower = \u0026quot;friends don't let friends make bar plots\u0026quot;, color = \u0026quot;firebrick\u0026quot;, font = \u0026quot;Courier\u0026quot;, size=1.5)  multi-language support I didn\u0026rsquo;t do anything about it. Multi-language was supported internally. Just simply select a font for your language.\ny \u0026lt;- meme(u, \u0026quot;卧槽\u0026quot;, \u0026quot;听说你想用中文\u0026quot;, font=\u0026quot;STHeiti\u0026quot;) y  As the meme package was developed using grid, It would be better to provide function to convert the output object to grob. Similar to ggplotGrob() for ggplot object, I provide memeGrob() for the meme object and this making it possible to edit the details of the graph and compatible with the grid ecosystem.\nHere are the examples of using meme in grid, ggplot2 and cowplot.\ngrid support library(grid) mm \u0026lt;- meme(u, \u0026quot;code\u0026quot;, \u0026quot;all the things!\u0026quot;, size=.3, color='firebrick') grid.newpage() pushViewport(viewport(width=.9, height=.9)) grid.rect(gp = gpar(lty=\u0026quot;dashed\u0026quot;)) xx \u0026lt;- seq(0, 2*pi , length.out=10) yy \u0026lt;- sin(xx) for (i in seq_along(xx)) { vp \u0026lt;- viewport(x = xx[i]/(2*pi), y = (yy[i]-min(yy))/2, width=.05, height=.05) print(mm, vp = vp) }  ggplot2 support library(ggplot2) library(ggimage) d \u0026lt;- data.frame(x = xx, y = yy) ggplot(d, aes(x, y)) + geom_line() + geom_subview(mm, x = xx, y = yy, width=.3, height=.15)  ggplot(d, aes(x, y)) + geom_subview(mm+aes(size=3), x=0, y=0, width=Inf, height=Inf) + geom_point() + geom_line()  cowplot support cowplot::plot_grid(x, y, ncol=1, labels = c(\u0026quot;A\u0026quot;, \u0026quot;B\u0026quot;))  ","date":1508915615,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1508915615,"objectID":"920c231ca6c19ecc8ec80e88dcf8bd2e","permalink":"https://guangchuangyu.github.io/2017/10/create-meme-in-r/","publishdate":"2017-10-25T15:13:35+08:00","relpermalink":"/2017/10/create-meme-in-r/","section":"post","summary":"I developed a tiny toy package, meme, which is now on CRAN. As it\u0026rsquo;s name indicated, it was designed to create memes, which are captioned photos that are intended to be funny, riduculous.\nmeme() The package is quite simple. You can use meme() function to add meme captions, and this is all the package supposed to do:\nlibrary(meme) u \u0026lt;- \u0026quot;http://www.happyfamilyneeds.com/wp-content/uploads/2017/08/angry8.jpg\u0026quot; meme(u, \u0026quot;code\u0026quot;, \u0026quot;all the things!\u0026quot;)  ","tags":["grid","meme"],"title":"create meme in R","type":"post"},{"authors":null,"categories":["R"],"content":"I am very glad to find that someone figure out how to use ggjoy with ggtree.\nI really love ggjoy and believe it can be a good tool to visualize gene set enrichment (GSEA) result. DOSE/clusterProfiler support several visualization methods.\nrunning score:\nenrichment map:\ncategory-gene-network:\ndotplot:\nThese visualization methods are designed for visualizing/summarizing enrichment results and none of them can incoporate expression values.\nIn DOSE v\u0026gt;=3.3.2, I defined a joyplot function, which can visualize GSEA result with expression distribution of the enriched categories.\nHere is an example:\nrequire(clusterProfiler) data(geneList) x \u0026lt;- gseKEGG(geneList) joyplot(x)  ","date":1503233460,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1503233460,"objectID":"441a115900b4a37a642cab30a86f5d27","permalink":"https://guangchuangyu.github.io/2017/08/joyplot-for-gsea-result/","publishdate":"2017-08-20T20:51:00+08:00","relpermalink":"/2017/08/joyplot-for-gsea-result/","section":"post","summary":"I am very glad to find that someone figure out how to use ggjoy with ggtree.\nI really love ggjoy and believe it can be a good tool to visualize gene set enrichment (GSEA) result. DOSE/clusterProfiler support several visualization methods.\n","tags":["DOSE","clusterProfiler","ReactomePA","meshes"],"title":"joyplot for GSEA result","type":"post"},{"authors":null,"categories":["R","Visualization"],"content":"I just discovered an interesting ggplot2 extension, geofacet, that supports arranging facet panels that mimics geographic topoloty.\nAfter playing with it, I realized that it is not only for visualizing geo-related data, but also can be fun for presenting data to mimics pixel art.\nHere is an example using the Turkey shape:\nTurkey \u0026lt;- read.csv(\u0026quot;http://pages.iu.edu/~cdesante/turkey.csv\u0026quot;) colnames(Turkey)[2:1] = c(\u0026quot;row\u0026quot;, \u0026quot;col\u0026quot;) Turkey$row = max(Turkey$row) - Turkey$row +1 Turkey$name \u0026lt;- Turkey$code \u0026lt;- paste0('turkey', 1:nrow(Turkey)) require(ggplot2) require(geofacet) x \u0026lt;- split(eu_gdp, eu_gdp$code) x \u0026lt;- x[sample.int(length(x), nrow(Turkey), replace=T)] for (i in 1:length(x)) { x[[i]]$code = Turkey$code[i] } y \u0026lt;- do.call(rbind, x) color = Turkey$Turkey.Colors names(color) = Turkey$code y$color = color[y$code] Turkey = Turkey[, -3] p1 \u0026lt;- ggplot(y, aes(gdp_pc, year))+ geom_line() + facet_geo(~code, grid=Turkey, scales='free') print(p1)  p1 + theme_void() + aes(color=color) + theme(strip.text.x = element_blank(), legend.position='none')  ","date":1498479215,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1498479215,"objectID":"cb0b0018532881a145510ed2c0e19349","permalink":"https://guangchuangyu.github.io/2017/06/pixel-art-of-ggplot2-faceting-using-geofacet/","publishdate":"2017-06-26T20:13:35+08:00","relpermalink":"/2017/06/pixel-art-of-ggplot2-faceting-using-geofacet/","section":"post","summary":"I just discovered an interesting ggplot2 extension, geofacet, that supports arranging facet panels that mimics geographic topoloty.\nAfter playing with it, I realized that it is not only for visualizing geo-related data, but also can be fun for presenting data to mimics pixel art.\n","tags":["ggplot2","geofacet"],"title":"pixel art of ggplot2 faceting using geofacet","type":"post"},{"authors":null,"categories":["R"],"content":"I have 8 packages published within the Bioconductor project.\n ChIPseeker clusterProfiler DOSE ggtree GOSemSim meshes ReactomePA treeio  A new package treeio was included in BioC 3.5 release.\nChIPseeker Bug fixed of intron rank and optimized getGeneAnno function.\nclusterProfiler  Defined simplify generics as it was removed from IRanges. enrichGO now supports ont=\u0026quot;ALL\u0026quot; and will test three GO ontologies simultaneously. dotplot for compareClusterResult not supports three GO sub-ontologies. bitr_kegg supports converting Path/Module to geneID and vice versa. plotGOgraph supports gseGO output by using core enriched gene. see the updates of DOSE for other updates.  DOSE  Now user can use options(mc.cores=x) to specify x cores for GSEA analysis. throw more friendly error msg if setReadable function fail to determine setType automatically. Call grid.newpage in gseaplot only if dev.interactive() is TRUE. dotplot now supports gseaResult. Output expected sample gene ID (sample from background) when input gene ID type not match.  ggtree Now ggtree was splitted to treeio for tree input and output, and ggtree for tree visualization and annotation.\n facet_plot supports ggbio::geom_alignment. support setting x axis limits of Tree panel via xlim_tree. xlim_expand for setting x axis limits of any specific panel. revts for reverse time scale. groupOTU method now accept \u0026lsquo;overlap = c(\u0026ldquo;overwrite\u0026rdquo;, \u0026ldquo;origin\u0026rdquo;, \u0026ldquo;abandon\u0026rdquo;)\u0026rsquo; parameter 2-dimensional tree layout supports phylo4d object aes(subset) now support logical vector contains NA supports parse=\u0026ldquo;emoji\u0026rdquo; in geom_cladelabel, geom_text2, geom_label2, geom_tiplab, geom_tiplab2 unrooted layout now supports \u0026lsquo;daylight\u0026rsquo; algorithm  GOSemSim only documentation update.\nmeshes no update\nReactomePA only documentation update.\ntreeio  defined new tree class treedata. as.treeedata.ggtree can convert ggtree output to treedata object. as.phylo.ggtree can convert ggtree output to phylo object. as.treedata.phylo4 \u0026amp; as.treedata.phylo4d for converting phylo4 and phylo4d object to treedata object. read.beast now also supports MrBayes output read.newick for parsing node.label as support values. drop.tip method for `treedata object.   Citation Yu G, Wang LG and He QY*. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. Bioinformatics 2015, 31(14):2382-2383.\n\nYu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\nG Yu, LG Wang, GR Yan, QY He. DOSE: an R/Bioconductor package for Disease Ontology Semantic and Enrichment analysis. Bioinformatics 2015, 31(4):608-609.\n\nG Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \nYu G†, Li F†, Qin Y, Bo X*, Wu Y and Wang S*. GOSemSim: an R package for measuring semantic similarity among GO terms and gene products. Bioinformatics. 2010, 26(7):976-978.\n \nG Yu, QY He*. ReactomePA: an R/Bioconductor package for reactome pathway analysis and visualization. Molecular BioSystems 2016, 12(2):477-479.\n\n","date":1495188837,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1495188837,"objectID":"febdf4d50d1dca8fb5572e4d59715923","permalink":"https://guangchuangyu.github.io/2017/05/bioc-3.5-news-of-my-bioc-packages/","publishdate":"2017-05-19T18:13:57+08:00","relpermalink":"/2017/05/bioc-3.5-news-of-my-bioc-packages/","section":"post","summary":"I have 8 packages published within the Bioconductor project.\n ChIPseeker clusterProfiler DOSE ggtree GOSemSim meshes ReactomePA treeio  A new package treeio was included in BioC 3.5 release.\n","tags":["BioC","GOSemSim","clusterProfiler","DOSE","ReactomePA","ggtree","ChIPseeker","meshes","treeio"],"title":"[Bioc 3.5] NEWS of my BioC packages","type":"post"},{"authors":null,"categories":["R","Visualization"],"content":"With ggtree (Yu et al. 2017), it is very easy to create phylomoji. Emoji is internally supported by ggtree.\nUse emoji in taxa labels library(ggtree) tree_text \u0026lt;- \u0026quot;(((((cow, (whale, dolphin)), (pig2, boar)), camel), fish), seedling);\u0026quot; x \u0026lt;- read.tree(text=tree_text) ggtree(x, linetype=\u0026quot;dashed\u0026quot;, color='firebrick') + xlim(NA, 7) + ylim(NA, 8.5) + geom_tiplab(aes(color=label), parse='emoji', size=14, vjust=0.25) + labs(title=\u0026quot;phylomoji\u0026quot;, caption=\u0026quot;powered by ggtree + emojifont\u0026quot;)  p \u0026lt;- ggtree(x, layout='circular') + geom_tiplab2(aes(color=label), parse='emoji', size=12, vjust=0.25) print(p)  open_tree(p, angle=200)  open_tree(p, angle=60) %\u0026gt;% rotate_tree(-75)  Labeling clades using emoji set.seed(123) tr \u0026lt;- rtree(30) ggtree(tr) + xlim(NA, 5) + geom_cladelabel(node=41, label=\u0026quot;chicken\u0026quot;, parse=\u0026quot;emoji\u0026quot;, fontsize=12, align=TRUE, color=\u0026quot;firebrick\u0026quot;) + geom_cladelabel(node=51, label=\u0026quot;duck\u0026quot;, parse=\u0026quot;emoji\u0026quot;, fontsize=12, align=TRUE, color=\u0026quot;steelblue\u0026quot;) + geom_cladelabel(node=32, label=\u0026quot;family\u0026quot;, parse=\u0026quot;emoji\u0026quot;, fontsize=12, align=TRUE, color=\u0026quot;darkkhaki\u0026quot;)  Apple Color Emoji Although R\u0026rsquo;s graphical devices don\u0026rsquo;t support AppleColorEmoji font, it\u0026rsquo;s still possible to use it. We can export the plot to svg file and render it in Safari.\nlibrary(ggimage) library(gridSVG) p \u0026lt;- ggtree(x, size=2) + geom_tiplab(size=20, parse='emoji') + xlim(NA, 7) + ylim(NA, 8.5) + geom_phylopic(image=\u0026quot;79ad5f09-cf21-4c89-8e7d-0c82a00ce728\u0026quot;, color=\u0026quot;firebrick\u0026quot;, alpha = .3, size=Inf) p ps = grid.export(\u0026quot;emoji.svg\u0026quot;, addClass=T)  Further reading Please visit ggtree homepage, https://guangchuangyu.github.io/ggtree, to find out more.\nReferences Yu, Guangchuang, David Smith, Huachen Zhu, Yi Guan, and Tommy Tsan-Yuk Lam. 2017. “Ggtree: An R Package for Visualization and Annotation of Phylogenetic Trees with Their Covariates and Other Associated Data.” Methods in Ecology and Evolution 8 (1): 28–36. doi:10.1111\u0026frasl;2041-210X.12628.\n \n","date":1494990671,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1494990671,"objectID":"e0d48173b54c1c5614cfae8fbfaefabf","permalink":"https://guangchuangyu.github.io/2017/05/phylomoji-with-ggtree-and-emojifont/","publishdate":"2017-05-17T11:11:11+08:00","relpermalink":"/2017/05/phylomoji-with-ggtree-and-emojifont/","section":"post","summary":"With ggtree (Yu et al. 2017), it is very easy to create phylomoji. Emoji is internally supported by ggtree.\nUse emoji in taxa labels library(ggtree) tree_text \u0026lt;- \u0026quot;(((((cow, (whale, dolphin)), (pig2, boar)), camel), fish), seedling);\u0026quot; x \u0026lt;- read.tree(text=tree_text) ggtree(x, linetype=\u0026quot;dashed\u0026quot;, color='firebrick') + xlim(NA, 7) + ylim(NA, 8.5) + geom_tiplab(aes(color=label), parse='emoji', size=14, vjust=0.25) + labs(title=\u0026quot;phylomoji\u0026quot;, caption=\u0026quot;powered by ggtree + emojifont\u0026quot;)  ","tags":["ggplot2","ggtree","emoji","emojifont"],"title":"Phylomoji with ggtree and emojifont","type":"post"},{"authors":null,"categories":["R"],"content":"I have splitted ggtree to 2 packages, treeio and ggtree. Now ggtree is mainly focus on visualization and annotation, while treeio focus on parsing and exporting tree files. Here is a welcome message from treeio that you can convert ggtree output to tree object which can be exported as newick or nexus file if you want.\nThanks to ggplot2, output of ggtree is actually a ggplot object. The ggtree object can be rendered as graph by print method, but internally it is an object that contains data. treeio defines as.phylo and as.treedata to convert ggtree object to phylo or treedata object.\nrequire(ggtree) nhxfile \u0026lt;- system.file(\u0026ldquo;extdata/NHX\u0026rdquo;, \u0026ldquo;ADH.nhx\u0026rdquo;, package=\u0026ldquo;treeio\u0026rdquo;) nhx \u0026lt;- read.nhx(nhxfile) p \u0026lt;- ggtree(nhx)\nAfter parsing the NHX file via read.nhx function, we can visualize it using ggtree, and the output ggtree object can be converted back as a phylo object using as.phylo method:\n as.phylo(p)\nPhylogenetic tree with 8 tips and 4 internal nodes.\nTip labels: ADH2, ADH1, ADHY, ADHX, ADH4, ADH3, \u0026hellip;\nRooted; includes branch lengths.\n The output phylo object contains the tree structure.\nIf we want to also save associated annotation data, we can use as.treedata method:\n as.treedata(p)\n\u0026lsquo;treedata\u0026rsquo; S4 object that stored information of \u0026ldquo;.\n\u0026hellip;@ tree: Phylogenetic tree with 8 tips and 4 internal nodes.\nTip labels:\nADH2, ADH1, ADHY, ADHX, ADH4, ADH3, \u0026hellip;\nRooted; includes branch lengths.\nwith the following features available: \u0026rsquo;S\u0026rsquo;, \u0026rsquo;D\u0026rsquo;, \u0026lsquo;B\u0026rsquo;.\n In ggtree, we can use %\u0026lt;+% operator to attach user\u0026rsquo;s own data to graphic object and then use it to annotate the tree. as.treedata can also export these attached data to the tree object.\n d = data.frame(label=as.phylo(nhx)$tip.label, trait=abs(rnorm(Ntip(nhx))))\np = p %\u0026lt;+% d\nas.treedata(p)\n\u0026lsquo;treedata\u0026rsquo; S4 object that stored information of \u0026ldquo;.\n\u0026hellip;@ tree:\nPhylogenetic tree with 8 tips and 4 internal nodes.\nTip labels:\nADH2, ADH1, ADHY, ADHX, ADH4, ADH3, \u0026hellip;\nRooted; includes branch lengths.\nwith the following features available: \u0026rsquo;S\u0026rsquo;, \u0026rsquo;D\u0026rsquo;, \u0026lsquo;B\u0026rsquo;, \u0026lsquo;trait\u0026rsquo;.\n Here as an example, the trait variable was attached and exported to the tree object.\nThis trait variable can also be used in tree annotation.\nx \u0026lt;- as.treedata(p) ggtree(x) + geom_tiplab(align=T, offset=.005) + geom_tippoint(aes(size=trait)) + xlim(NA, 0.28) + geom_label(aes(x=branch, label=S))  We can visualize the tree by ggtree(tree_object) and we can convert the ggtree object back to tree object via as.treedata(ggtree_object).\nIf you lost your tree file but have the ggtree object saved, you can convert it back to tree object and export the tree object to newick or nexus file.\n","date":1483426690,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483426690,"objectID":"d1f0a49c5368345f9094ddf314713c0d","permalink":"https://guangchuangyu.github.io/2017/01/convert-graphic-object-to-tree-object-using-treeio/","publishdate":"2017-01-03T14:58:10+08:00","relpermalink":"/2017/01/convert-graphic-object-to-tree-object-using-treeio/","section":"post","summary":"I have splitted ggtree to 2 packages, treeio and ggtree. Now ggtree is mainly focus on visualization and annotation, while treeio focus on parsing and exporting tree files. Here is a welcome message from treeio that you can convert ggtree output to tree object which can be exported as newick or nexus file if you want.\nThanks to ggplot2, output of ggtree is actually a ggplot object. The ggtree object can be rendered as graph by print method, but internally it is an object that contains data. treeio defines as.phylo and as.treedata to convert ggtree object to phylo or treedata object.\n","tags":["ggtree","treeio"],"title":"convert graphic object to tree object using treeio","type":"post"},{"authors":null,"categories":null,"content":"Embed your slides or video here using shortcodes. Further details can easily be added using Markdown and $\\rm \\LaTeX$ math code.\n","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"cd6d9d084287506b4668ad90c6aff50a","permalink":"https://guangchuangyu.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"talk","summary":"Embed your slides or video here using shortcodes. Further details can easily be added using Markdown and $\\rm \\LaTeX$ math code.","tags":null,"title":"Example Talk","type":"talk"},{"authors":null,"categories":["R"],"content":"For GSEA analysis, we are familar with the above figure which shows the running enrichment score. But for most of the software, it lack of visualization method to summarize the whole enrichment result.\nIn DOSE (and related tools including clusterProfiler, ReactomePA and meshes), we provide enrichMap and cnetplot to summarize GSEA result.\nHere is an example of using enrichMap which is good to visualize relationship among enriched gene sets.\ncnetplot excel on visualizing relationship among gene sets and corresponding core genes.\nNow DOSE support visualize GSEA result using dotplot which can visualize more enriched gene sets in one figure. This is a feature request from @guidohooiveld.\ndotplot was previously implemented in DOSE to visualize hypergeometric test result. I modified it to support GSEA result.\nInternally, .sign was reserved for the sign of NES (activated for NES \u0026gt; 0 and suppressed for NES \u0026lt; 0). We can pass split parameter and then it will apply showCategory by splitting the results. The following example plot 30 activated and 30 suppressed enriched disease sets.\nPS: Count is the number of core genes and GeneRatio is Count/setSize.\nCitation G Yu, LG Wang, GR Yan, QY He. DOSE: an R/Bioconductor package for Disease Ontology Semantic and Enrichment analysis. Bioinformatics 2015, 31(4):608-609.\n\n","date":1483073890,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483073890,"objectID":"56c7162e13e2d52dd8913f1407e8748a","permalink":"https://guangchuangyu.github.io/2016/12/dotplot-for-gsea-result/","publishdate":"2016-12-30T12:58:10+08:00","relpermalink":"/2016/12/dotplot-for-gsea-result/","section":"post","summary":"For GSEA analysis, we are familar with the above figure which shows the running enrichment score. But for most of the software, it lack of visualization method to summarize the whole enrichment result.\nIn DOSE (and related tools including clusterProfiler, ReactomePA and meshes), we provide enrichMap and cnetplot to summarize GSEA result.\n","tags":["DOSE","clusterProfiler","ReactomePA","GSEA"],"title":"dotplot for GSEA result","type":"post"},{"authors":null,"categories":["R","Visualization","Evolution"],"content":"This is a question from ggtree google group:\n Dear ggtree team,\nhow can I apply a geom_xxx to only one facet panel? For example if i want to get geom_hline(yintersect=1:30) or a geom_text() in the dot panel? I cant see the facet_grid(. ~ var) function call, so I don\u0026rsquo;t know which subsetting to use. I have already read http://stackoverflow.com/questions/29873155/geom-text-and-facets-not-working\n tr \u0026lt;- rtree(30) d1 \u0026lt;- data.frame(id=tr$tip.label, val=rnorm(30, sd=3)) p \u0026lt;- ggtree(tr) p2 \u0026lt;- facet_plot(p, panel=\u0026quot;dot\u0026quot;, data=d1, geom=geom_point, aes(x=val), color='firebrick') d2 \u0026lt;- data.frame(id=tr$tip.label, value = abs(rnorm(30, mean=100, sd=50))) p3 \u0026lt;- facet_plot(p2, panel='bar', data=d2, geom=geom_segment, aes(x=0, xend=value, y=y, yend=y), size=3, color='steelblue') + theme_tree2()  Thanks! Andreas\n If this can be done, we can create even more comprehensive tree plots.\nIn fact, it\u0026rsquo;s quite easy to do. In facet_plot, ggtree used a variable .panel to store the panel information. We can add a dummy column .panel to our data and pass it to geom layer function and the layer will be added to selected panel we specify in the .panel column.\nTo follow up the above example, we can create a data.frame that contains y and .panel=\u0026quot;dot\u0026quot; as we want to add horizontal lines in dot panel.\nd=data.frame(y=1:30, .panel='dot') p3 + geom_hline(data=d, aes(yintercept=y))  Here is what we can get:\nThe xlim_expand is actually adding a geom_blank layer to selected panel for setting x-axis limits of that panel.\nAnother approach is using facet_plot with panel parameter setting to existing one.\nAn example is posted in google group:\nlibrary(dplyr) library(ggstance) library(ggtree) tr \u0026lt;- rtree(30) p \u0026lt;- ggtree(tr) + theme_tree2() df \u0026lt;- data.frame(id = rep(tr$tip.label, each=2), value = abs(rnorm(60, mean=100, sd=50)), category = rep(LETTERS[1:2], 30)) sum_value \u0026lt;- df %\u0026gt;% group_by(id) %\u0026gt;% summarize(total = sum(value)) p2 \u0026lt;- facet_plot(p, panel = 'Stacked Barplot', data = df, geom = geom_barh, mapping = aes(x = value, fill = as.factor(category)), stat='identity' ) facet_plot(p2, panel='Stacked Barplot', data=sum_value, geom=geom_text, mapping=aes(x=total+20, label=round(total)))  Citation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1482928200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1482928200,"objectID":"b4a5497b4fa691c099f0287eef295772","permalink":"https://guangchuangyu.github.io/2016/12/add-layer-to-specific-panel-of-facet_plot-output/","publishdate":"2016-12-28T20:30:00+08:00","relpermalink":"/2016/12/add-layer-to-specific-panel-of-facet_plot-output/","section":"post","summary":"This is a question from ggtree google group:\n Dear ggtree team,\nhow can I apply a geom_xxx to only one facet panel? For example if i want to get geom_hline(yintersect=1:30) or a geom_text() in the dot panel? I cant see the facet_grid(. ~ var) function call, so I don\u0026rsquo;t know which subsetting to use. I have already read http://stackoverflow.com/questions/29873155/geom-text-and-facets-not-working\n tr \u0026lt;- rtree(30) d1 \u0026lt;- data.frame(id=tr$tip.label, val=rnorm(30, sd=3)) p \u0026lt;- ggtree(tr) p2 \u0026lt;- facet_plot(p, panel=\u0026quot;dot\u0026quot;, data=d1, geom=geom_point, aes(x=val), color='firebrick') d2 \u0026lt;- data.frame(id=tr$tip.label, value = abs(rnorm(30, mean=100, sd=50))) p3 \u0026lt;- facet_plot(p2, panel='bar', data=d2, geom=geom_segment, aes(x=0, xend=value, y=y, yend=y), size=3, color='steelblue') + theme_tree2()  Thanks! Andreas\n If this can be done, we can create even more comprehensive tree plots.\n","tags":["ggtree","ggplot2"],"title":"add layer to specific panel of facet_plot output","type":"post"},{"authors":null,"categories":["R"],"content":"PLOTTING TREES + DATA is difficult. @DrKatHolt developed plotTree (R and Python scripts) to visualize associated data with trees, e.g. heatmap, horizontal bar etc.\nI reproduced the examples presented in the plotTree repo using ggtree. Source code is freely available in https://github.com/GuangchuangYu/plotTree-ggtree.\nHere are the outputs produced by ggtree:\nTree with basic strain info Pan genome heatmap Curated genes, coloured It can be very easy to produce a circular/fan layout version, and the tree was used to generate the ggtree hex sticker.\nGeneral solution with facet_plot ggtree provide the facet_plot function which can be used to associate different types of data to the tree. With ggtree we can associate more data (can be different types) and combine them freely.\nsee also examples in 1 and 2.\nCitation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1481953980,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1481953980,"objectID":"d41aec71053eda01e4e46a12e48b6f10","permalink":"https://guangchuangyu.github.io/2016/12/ggtree-version-of-plottree/","publishdate":"2016-12-17T13:53:00+08:00","relpermalink":"/2016/12/ggtree-version-of-plottree/","section":"post","summary":"PLOTTING TREES + DATA is difficult. @DrKatHolt developed plotTree (R and Python scripts) to visualize associated data with trees, e.g. heatmap, horizontal bar etc.\nI reproduced the examples presented in the plotTree repo using ggtree. Source code is freely available in https://github.com/GuangchuangYu/plotTree-ggtree.\nHere are the outputs produced by ggtree:\n","tags":["ggtree"],"title":"ggtree version of plotTree","type":"post"},{"authors":null,"categories":["R"],"content":"Coloring edges in ggtree is quite easy, as we can map the color to numerical or categorical values via the aes(color=VAR) syntax. For user\u0026rsquo;s own data, it is also easy as ggtree provide the %\u0026lt;+% operator to attach user data.\nBut as it seems not so obviously for ggtree users, see question 1, 2, and 3, I will demonstrate how to color edges using user data here.\nThere are several solutions to this question. Let\u0026rsquo;s first start with a hard one by using phylo4d class defined by phylobase package:\nrequire(ggtree) require(phylobase) set.seed(123) tr = rtree(30) g1 = as(tr, 'phylo4') d = data.frame(color=sample(c('red', 'blue', 'green'), 30, replace=T)) rownames(d) = tr$tip.label g2 = phylo4d(g1, d) rNodeData \u0026lt;- data.frame(randomTrait = rnorm(nNodes(g1)), color = sample(c('purple', 'yellow', 'black'), nNodes(g1), replace=T), row.names = nodeId(g1, \u0026quot;internal\u0026quot;)) nodeData(g2) \u0026lt;- rNodeData  We can store the information in a phylo4d object and as this object is supported by ggtree. We can directly coloring the tree by mapping the color to specific variable.\nggtree(g2, aes(color=I(color)))  ggtree itself also provide solution by using the operator, %\u0026lt;+% to attach user data. After attaching, we can re-scale edge color by aes.\nd = data.frame(node=1:59, color=sample(c('red', 'blue', 'green'), 59, replace=T)) ggtree(tr) %\u0026lt;+% d + aes(color=I(color))  Citation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1481475180,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1481475180,"objectID":"c7d305a953bbe9a50c0840a94d41a5a0","permalink":"https://guangchuangyu.github.io/2016/12/edge-coloring-with-user-data/","publishdate":"2016-12-12T00:53:00+08:00","relpermalink":"/2016/12/edge-coloring-with-user-data/","section":"post","summary":"Coloring edges in ggtree is quite easy, as we can map the color to numerical or categorical values via the aes(color=VAR) syntax. For user\u0026rsquo;s own data, it is also easy as ggtree provide the %\u0026lt;+% operator to attach user data.\nBut as it seems not so obviously for ggtree users, see question 1, 2, and 3, I will demonstrate how to color edges using user data here.\n","tags":["ggtree"],"title":"Edge coloring with user data","type":"post"},{"authors":null,"categories":["R"],"content":"Plotting pies on ggplot/ggmap is not an easy task, as ggplot2 doesn\u0026rsquo;t provide native pie geom. The pie we produced in ggplot2 is actually a barplot transform to polar coordination. This make it difficult if we want to produce a map like the above screenshot, which was posted by Tyler Rinker, the author of R package pacman.\nThe question remained unsolved until he discovered that ggtree can do it. The ggtree solution is to use the subview function, which is good for embeding subplots and can embed different types of plots and even user\u0026rsquo;s own image files.\nBut it has its own drawbacks for plotting pies on map. First, it render plots as raster image make it slow to render when we plotting a lot of pies. Second we need some hacks to add legend.\nThanks to the ggforce package, which provides a native implementation of the pie geom, we can plot pies on cartesian coordination.\nI created a wrapper function to make it more easy to plot a set of pies.\nFor example, suppose we have the following data:\nset.seed(123) long \u0026lt;- rnorm(50, sd=100) lat \u0026lt;- rnorm(50, sd=50) d \u0026lt;- data.frame(long=long, lat=lat) d \u0026lt;- with(d, d[abs(long) \u0026lt; 150 \u0026amp; abs(lat) \u0026lt; 70,]) n \u0026lt;- nrow(d) d$region \u0026lt;- factor(1:n) d$A \u0026lt;- abs(rnorm(n, sd=1)) d$B \u0026lt;- abs(rnorm(n, sd=2)) d$C \u0026lt;- abs(rnorm(n, sd=3)) d$D \u0026lt;- abs(rnorm(n, sd=4)) d$radius \u0026lt;- 6 * abs(rnorm(n)) head(d) ## long lat region A B C D ## 1 -56.047565 12.665926 1 0.71040656 2.887786 1.309570 2.892264 ## 2 -23.017749 -1.427338 2 0.25688371 1.403569 1.375096 4.945092 ## 4 7.050839 68.430114 3 0.24669188 0.524395 3.189978 5.138863 ## 5 12.928774 -11.288549 4 0.34754260 3.144288 3.789556 2.295894 ## 8 -126.506123 29.230687 5 0.95161857 3.029335 1.048951 2.471943 ## 9 -68.685285 6.192712 6 0.04502772 3.203072 2.596539 4.439393 ## radius ## 1 6.4847970 ## 2 3.7845247 ## 4 0.6818394 ## 5 9.1974120 ## 8 3.1267039 ## 9 2.9392227  It is very easy to draw the pies on the map by the geom_scatterpie layer.\nlibrary(ggplot2) library(scatterpie) world \u0026lt;- map_data('world') p \u0026lt;- ggplot(world, aes(long, lat)) + geom_map(map=world, aes(map_id=region), fill=NA, color=\u0026quot;black\u0026quot;) + coord_quickmap() p + geom_scatterpie(aes(x=long, y=lat, group=region, r=radius), data=d, cols=LETTERS[1:4], color=NA, alpha=.8) + geom_scatterpie_legend(d$radius, x=-160, y=-55)  This is just a simple application of the ggforce, and I find many people like it. They even asked me to implement the pie size legend. I do implemented a geom_scatterpie_legend layer and as the name indicated, it add a legend of the pie sizes as demonstrated in the above figure.\nThe source code is quite simple, and it is impossible without ggforce. Now this package is availabel on CRAN, you can use install.packages('scatterpie') to install it and visit the online vignette.\n","date":1481043180,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1481043180,"objectID":"ff8861d5723f04f3b6d2897de3220d82","permalink":"https://guangchuangyu.github.io/2016/12/scatterpie-for-plotting-pies-on-ggplot/","publishdate":"2016-12-07T00:53:00+08:00","relpermalink":"/2016/12/scatterpie-for-plotting-pies-on-ggplot/","section":"post","summary":"Plotting pies on ggplot/ggmap is not an easy task, as ggplot2 doesn\u0026rsquo;t provide native pie geom. The pie we produced in ggplot2 is actually a barplot transform to polar coordination. This make it difficult if we want to produce a map like the above screenshot, which was posted by Tyler Rinker, the author of R package pacman.\n","tags":["scatterpie"],"title":"scatterpie for plotting pies on ggplot","type":"post"},{"authors":null,"categories":["Visualization","R"],"content":"A question on biostars asking how to generate the following figure:\nThis can be quite easy to implement in ggtree, I can write a geom layer to layout the alignment. As ggbio already provides many geom for genomic data and I don\u0026rsquo;t want to re-invent the wheel, I decided to try ggtree+ggbio. This is also the beauty of R that packages complete each others.\nHere is a sample data presented in ggbio vignette:\nlibrary(ggbio) library(biovizBase) library(Homo.sapiens) library(TxDb.Hsapiens.UCSC.hg19.knownGene) txdb \u0026lt;- TxDb.Hsapiens.UCSC.hg19.knownGene data(genesymbol, package = \u0026quot;biovizBase\u0026quot;) wh \u0026lt;- genesymbol[c(\u0026quot;BRCA1\u0026quot;, \u0026quot;NBR1\u0026quot;)] wh \u0026lt;- range(wh, ignore.strand = TRUE) gr.txdb \u0026lt;- crunch(txdb, which = wh) ## change column to model colnames(values(gr.txdb))[4] \u0026lt;- \u0026quot;model\u0026quot; grl \u0026lt;- split(gr.txdb, gr.txdb$tx_id) set.seed(2016-10-25) names(grl) \u0026lt;- sample(LETTERS, size = length(grl), replace = TRUE)  \u0026gt; print(grl) GRangesList object of length 32: $J GRanges object with 7 ranges and 4 metadata columns: seqnames ranges strand | tx_id tx_name \u0026lt;Rle\u0026gt; \u0026lt;IRanges\u0026gt; \u0026lt;Rle\u0026gt; | \u0026lt;factor\u0026gt; \u0026lt;factor\u0026gt; [1] chr17 [41277600, 41277787] + | 61241 uc002idf.3 [2] chr17 [41283225, 41283287] + | 61241 uc002idf.3 [3] chr17 [41284973, 41285154] + | 61241 uc002idf.3 [4] chr17 [41290674, 41292342] + | 61241 uc002idf.3 [5] chr17 [41277788, 41283224] * | 61241 uc002idf.3 [6] chr17 [41283288, 41284972] * | 61241 uc002idf.3 [7] chr17 [41285155, 41290673] * | 61241 uc002idf.3 gene_id model \u0026lt;factor\u0026gt; \u0026lt;factor\u0026gt; [1] 10230 exon [2] 10230 exon [3] 10230 exon [4] 10230 exon [5] 10230 gap [6] 10230 gap [7] 10230 gap $U GRanges object with 3 ranges and 4 metadata columns: seqnames ranges strand | tx_id tx_name [1] chr17 [41277600, 41277787] + | 61242 uc010czb.2 [2] chr17 [41290674, 41292342] + | 61242 uc010czb.2 [3] chr17 [41277788, 41290673] * | 61242 uc010czb.2 gene_id model [1] 10230 exon [2] 10230 exon [3] 10230 gap $D GRanges object with 9 ranges and 4 metadata columns: seqnames ranges strand | tx_id tx_name [1] chr17 [41277600, 41277787] + | 61243 uc002idg.3 [2] chr17 [41283225, 41283287] + | 61243 uc002idg.3 [3] chr17 [41290674, 41290939] + | 61243 uc002idg.3 [4] chr17 [41291833, 41292300] + | 61243 uc002idg.3 [5] chr17 [41296745, 41297125] + | 61243 uc002idg.3 [6] chr17 [41277788, 41283224] * | 61243 uc002idg.3 [7] chr17 [41283288, 41290673] * | 61243 uc002idg.3 [8] chr17 [41290940, 41291832] * | 61243 uc002idg.3 [9] chr17 [41292301, 41296744] * | 61243 uc002idg.3 gene_id model [1] 10230 exon [2] 10230 exon [3] 10230 exon [4] 10230 exon [5] 10230 exon [6] 10230 gap [7] 10230 gap [8] 10230 gap [9] 10230 gap ... \u0026lt;29 more elements\u0026gt; ------- seqinfo: 1 sequence from hg19 genome  We can visualize the alignment simply using:\nggplot() + geom_alignment(grl, alpha=.5)  The input data for geom_alignment is a GRangesList object, while facet_plot defined in ggtree expect the input data as a data.frame. I extend the facet_plot to work with geom_alignment. In doing this, I find a bug of the geom_alignment function and send a patch to Michael. My patch was incorporated in ggbio 1.23.2.\nWith the updates of both ggtree and ggbio, we can use facet_plot to align alignment with phylogenetic tree.\nSuppose we have the following tree:\nlibrary(ggtree) n \u0026lt;- names(grl) %\u0026gt;% unique %\u0026gt;% length set.seed(2016-10-25) tr = rtree(n) set.seed(2016-10-25) tr$tip.label = sample(unique(names(grl)), n) p \u0026lt;- ggtree(tr) + geom_tiplab()  It is quite easy to use facet_plot to visualize the above alignment with this tree:\nfacet_plot(p, 'alignment', grl, geom_alignment, inherit.aes=FALSE, mapping=aes())  Beware of mapping=aes() is required as ggbio can\u0026rsquo;t accept mapping=NULL.\nPS: I only test geom_alignment which works with GRanges and GRangesList. Other geoms defined in ggbio may not be supported. If you find facet_plot fail to work with other geoms, please open an issue in github. Feature requests are welcome.\nCitation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1479211848,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1479211848,"objectID":"a57398f8598d615596b7ab7b8c3b3d8a","permalink":"https://guangchuangyu.github.io/2016/11/align-genomic-features-with-phylogenetic-tree/","publishdate":"2016-11-15T20:10:48+08:00","relpermalink":"/2016/11/align-genomic-features-with-phylogenetic-tree/","section":"post","summary":"A question on biostars asking how to generate the following figure:\nThis can be quite easy to implement in ggtree, I can write a geom layer to layout the alignment. As ggbio already provides many geom for genomic data and I don\u0026rsquo;t want to re-invent the wheel, I decided to try ggtree+ggbio. This is also the beauty of R that packages complete each others.\n","tags":["ggtree","ggbio","tree"],"title":"align genomic features with phylogenetic tree","type":"post"},{"authors":null,"categories":["R","Visualization","Bioinformatics"],"content":" I am using dotplot() to visualize results from enrichGO(), enrichDO(), enricher() and compareCluster() in clusterProfiler R package. When specifying showCategory, I get the right number of categories except with the results of compareCluser().\nIn my case, I use compareCluster() on a list of 3 elements:\nstr(ClusterList) List of 3 $ All : chr [1:1450] \u0026quot;89886\u0026quot; \u0026quot;29923\u0026quot; \u0026quot;100132891\u0026quot; \u0026quot;101410536\u0026quot; ... $ g1 : chr [1:858] \u0026quot;89886\u0026quot; \u0026quot;29923\u0026quot; \u0026quot;100132891\u0026quot; \u0026quot;101410536\u0026quot; ... $ g2: chr [1:592] \u0026quot;5325\u0026quot; \u0026quot;170691\u0026quot; \u0026quot;29953\u0026quot; \u0026quot;283392\u0026quot; ... CompareGO_BP=compareCluster(ClusterList, fun=\u0026quot;enrichGO\u0026quot;, pvalueCutoff=0.01, pAdjustMethod=\u0026quot;BH\u0026quot;, OrgDb=org.Hs.eg.db,ont=\u0026quot;BP\u0026quot;,readable=T) dotplot(CompareGO_BP, showCategory=10, title=\u0026quot;GO - Biological Process\u0026quot;)  I ask for 10 categories, but I get 15 categories in All, 8 categories in g1 and 12 categories in g2. None of the categories, neither the sum of the categories are 10\u0026hellip;\nIs the option showCategory working in the case of comparison? Am I missing something here?\nAnd which categories precisely will it plot? the most significant whatever my 3 cases or the most significant of each case?\n The question was posted in Bioconductor support site. It seems quite confusing and I think I need to write a post to clarify it.\nIn this case, we expect to get \u0026lt;= 10 of most significant categories for each Cluster as the user specify showCategory=10. This is exactly the way of dotplot and barplot methods do for compareClusterResult. 8 categories for g1 is obvious that there are only 8 enriched terms found for g1.\nBut why there are 15 for All and 12 for g2?\ndotplot and barplot methods implemented in clusterProfiler try to make the comparison among clusters more informative and reasonable. After extracting e.g. 10 categories for each cluster, clusterProfiler try to collect overlap of these categories among clusters.\nFor example, term A is enriched in all the clusters (All, g1 and g2) and is in the 10 most significant categories for g1 but not All and g2. clusterProfiler try to capture these information and include term A in All and g2 clusters and making the comparison in dotplot/barplot more reasonable.\nIf users want to ignore these information, they can use dotplot(..., includeAll=FALSE), which is actually not recommended.\nSee the difference to the following example:\nlibrary(clusterProfiler) data(gcSample) x=compareCluster(gcSample, fun='enrichDO') dotplot(x, showCategory=5, includeAll=FALSE) dotplot(x, showCategory=5)  In the first figure, it seems that all these clusters are very different, with no overlapping terms enriched. This is not true as demonstrated in the second figure.\nCitation Yu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\n","date":1478140200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1478140200,"objectID":"32a44341cc7774032a96da0c967a49e2","permalink":"https://guangchuangyu.github.io/2016/11/showcategory-parameter-for-visualizing-comparecluster-output/","publishdate":"2016-11-03T10:30:00+08:00","relpermalink":"/2016/11/showcategory-parameter-for-visualizing-comparecluster-output/","section":"post","summary":" I am using dotplot() to visualize results from enrichGO(), enrichDO(), enricher() and compareCluster() in clusterProfiler R package. When specifying showCategory, I get the right number of categories except with the results of compareCluser().\nIn my case, I use compareCluster() on a list of 3 elements:\nstr(ClusterList) List of 3 $ All : chr [1:1450] \u0026quot;89886\u0026quot; \u0026quot;29923\u0026quot; \u0026quot;100132891\u0026quot; \u0026quot;101410536\u0026quot; ... $ g1 : chr [1:858] \u0026quot;89886\u0026quot; \u0026quot;29923\u0026quot; \u0026quot;100132891\u0026quot; \u0026quot;101410536\u0026quot; ... $ g2: chr [1:592] \u0026quot;5325\u0026quot; \u0026quot;170691\u0026quot; \u0026quot;29953\u0026quot; \u0026quot;283392\u0026quot; ... CompareGO_BP=compareCluster(ClusterList, fun=\u0026quot;enrichGO\u0026quot;, pvalueCutoff=0.01, pAdjustMethod=\u0026quot;BH\u0026quot;, OrgDb=org.Hs.eg.db,ont=\u0026quot;BP\u0026quot;,readable=T) dotplot(CompareGO_BP, showCategory=10, title=\u0026quot;GO - Biological Process\u0026quot;)  I ask for 10 categories, but I get 15 categories in All, 8 categories in g1 and 12 categories in g2. None of the categories, neither the sum of the categories are 10\u0026hellip;\nIs the option showCategory working in the case of comparison? Am I missing something here?\nAnd which categories precisely will it plot? the most significant whatever my 3 cases or the most significant of each case?\n The question was posted in Bioconductor support site. It seems quite confusing and I think I need to write a post to clarify it.\n","tags":["clusterProfiler","dotplot"],"title":"showCategory parameter for visualizing compareCluster output","type":"post"},{"authors":null,"categories":["R","Visualization","Evolution"],"content":"A ggtree user recently asked me the following question in google group:\n I try to plot long tip labels in ggtree and usually adjust them using xlim(), however when creating a facet_plot xlim affects all plots and minimizes them.\nIs it possible to work around this and only affect the tree and it\u0026rsquo;s tip labels leaving the other plots in facet_plot unaffected?\n This is indeed a desire feature, as ggplot2 can\u0026rsquo;t automatically adjust xlim for text since the units are in two different spaces (data and pixel).\nHere is an example, the tip labels are truncated.\nlibrary(ggtree) set.seed(2016-10-31) tr =rtree(50) tr$tip.label = paste(tr$tip.label, tr$tip.label, sep=\u0026quot;_\u0026quot;) p \u0026lt;- ggtree(tr) + geom_tiplab(align=TRUE) + theme_tree2() d = data.frame(id = tr$tip.label, v= rnorm(50)) facet_plot(p, geom=geom_point, data=d, mapping=aes(x=v), panel='dot') + ggtitle(\u0026quot;truncated tip labels\u0026quot;)  If we only visualize the tree, it is easy to solve by using xlim() to allocate more space for the lables. But xlim() works for all panels. Combination of facet_plot() and xlim() will produce figure with many spaces.\nfacet_plot(p+xlim(NA, 6), geom=geom_point, data=d, mapping=aes(x=v), panel='dot') + ggtitle(\u0026quot;xlim applies to all panels\u0026quot;)  To overcome this issue, ggtree provides xlim_tree to set x axis limits for only the Tree panel.\nfacet_plot(p+xlim_tree(6), geom=geom_point, data=d, mapping=aes(x=v), panel='dot') + ggtitle('*xlim_tree* only change x axis limits of *Tree* panel') # or using: # facet_plot(p, geom=geom_point, data=d, mapping=aes(x=v), panel='dot') + xlim_tree(6)  Actually, you can set xlim for selected panel by using +xlim_expand(xlim, panel).\nCitation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1477888200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1477888200,"objectID":"c14ef68d61444dd709bf19df6bc7cbd5","permalink":"https://guangchuangyu.github.io/2016/10/xlim_tree-set-x-axis-limits-for-only-tree-panel/","publishdate":"2016-10-31T12:30:00+08:00","relpermalink":"/2016/10/xlim_tree-set-x-axis-limits-for-only-tree-panel/","section":"post","summary":"A ggtree user recently asked me the following question in google group:\n I try to plot long tip labels in ggtree and usually adjust them using xlim(), however when creating a facet_plot xlim affects all plots and minimizes them.\nIs it possible to work around this and only affect the tree and it\u0026rsquo;s tip labels leaving the other plots in facet_plot unaffected?\n This is indeed a desire feature, as ggplot2 can\u0026rsquo;t automatically adjust xlim for text since the units are in two different spaces (data and pixel).\n","tags":["ggtree","ggplot2"],"title":"xlim_tree: set x axis limits for only Tree panel","type":"post"},{"authors":null,"categories":["R","Visualization","Evolution"],"content":"ggtree provides gheatmap for visualizing heatmap and msaplot for visualizing multiple sequence alignment with phylogenetic tree.\nWe may have different data types and want to visualize and align them with the tree. For example, dotplot of SNP site (e.g. using geom_point(shape='|')), barplot of trait values (e.g. using geom_barh(stat='identity')) et al.\nTo make it easy to associate different types of data with phylogenetic tree, I implemented the facet_plot function which accepts a geom function to draw the input data.frame and display it in an additional panel.\nassociate tree with different type of data by #ggtree https://t.co/6w755VWytZ pic.twitter.com/K8WViEi13E\n\u0026mdash; Guangchuang Yu (@guangchuangyu) September 7, 2016  tr \u0026lt;- rtree(30) p \u0026lt;- ggtree(tr) d1 \u0026lt;- data.frame(id=tr$tip.label, location=sample(c(\u0026ldquo;GZ\u0026rdquo;, \u0026ldquo;HK\u0026rdquo;, \u0026ldquo;CZ\u0026rdquo;), 30, replace=TRUE)) p1 \u0026lt;- p %\u0026lt;+% d1 + geom_tippoint(aes(color=location)) d2 \u0026lt;- data.frame(id=tr$tip.label, val=rnorm(30, sd=3)) p2 \u0026lt;- facet_plot(p1, panel=\u0026ldquo;dot\u0026rdquo;, data=d2, geom=geom_point, aes(x=val), color=\u0026lsquo;firebrick\u0026rsquo;) + theme_tree2()\nMost of the geom in ggplot2 draw vertical graph object, while for associating graph object with phylogenetic tree, we need horizontal versions. Luckily, we have ggstance which provides horizontal versions of geoms, including:\n geom_barh() geom_histogramh() geom_linerangeh() geom_pointrangeh() geom_errorbarh() geom_crossbarh() geom_boxploth() geom_violinh()  With ggstance, we can associate barplot, boxplot or other graphs to phylogenetic trees.\nlibrary(ggstance) d3 \u0026lt;- data.frame(id = rep(tr$tip.label, each=2), value = abs(rnorm(60, mean=100, sd=50)), category = rep(LETTERS[1:2], 30)) p3 \u0026lt;- facet_plot(p2, panel = 'Stacked Barplot', data = d3, geom = geom_barh, mapping = aes(x = value, fill = as.factor(category)), stat='identity' )  d4 = data.frame(id=rep(tr$tip.label, each=20), val=as.vector(sapply(1:30, function(i) rnorm(20, mean=i))) ) p4 \u0026lt;- facet_plot(p3, panel=\u0026quot;Boxplot\u0026quot;, data=d4, geom_boxploth, mapping = aes(x=val, group=label, color=location))  Citation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1477470600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1477470600,"objectID":"d6583b484bc36ea3a7284993ebb00b6d","permalink":"https://guangchuangyu.github.io/2016/10/facet_plot-a-general-solution-to-associate-data-with-phylogenetic-tree/","publishdate":"2016-10-26T16:30:00+08:00","relpermalink":"/2016/10/facet_plot-a-general-solution-to-associate-data-with-phylogenetic-tree/","section":"post","summary":"ggtree provides gheatmap for visualizing heatmap and msaplot for visualizing multiple sequence alignment with phylogenetic tree.\nWe may have different data types and want to visualize and align them with the tree. For example, dotplot of SNP site (e.g. using geom_point(shape='|')), barplot of trait values (e.g. using geom_barh(stat='identity')) et al.\nTo make it easy to associate different types of data with phylogenetic tree, I implemented the facet_plot function which accepts a geom function to draw the input data.frame and display it in an additional panel.\nassociate tree with different type of data by #ggtree https://t.co/6w755VWytZ pic.twitter.com/K8WViEi13E\n\u0026mdash; Guangchuang Yu (@guangchuangyu) September 7, 2016 ","tags":["ggtree","ggplot2","ggstance"],"title":"facet_plot: a general solution to associate data with phylogenetic tree","type":"post"},{"authors":null,"categories":["R"],"content":"I have 7 packages published within the Bioconductor project.\n ChIPseeker clusterProfiler DOSE ggtree GOSemSim meshes ReactomePA  A new package meshes was included in BioC 3.4 release.\nChIPseeker For ChIPseeker, this release fixed several minor bugs.\nGEO data was updated, now ChIPseeker contains 20947 bed file information.\nCHANGES IN VERSION 1.9.8 ------------------------ o plotAvgProf/plotAvgProf2 order of panel by names of input tagMatrix List \u0026lt;2016-09-25, Sun\u0026gt; o test ENSEMBL ID using '^ENS' instead of '^ENSG' \u0026lt;2016-09-20, Tue\u0026gt; + https://github.com/GuangchuangYu/ChIPseeker/issues/41 CHANGES IN VERSION 1.9.7 ------------------------ o unit test \u0026lt;2016-08-16, Tue\u0026gt; CHANGES IN VERSION 1.9.6 ------------------------ o update vignette \u0026lt;2016-08-16, Tue\u0026gt; CHANGES IN VERSION 1.9.5 ------------------------ o when TxDb doesn't have gene_id information, converting gene ID (ensembl/entrez and symbol) will be omitted instead of throw error. \u0026lt;2016-08-02, Tue\u0026gt; + https://www.biostars.org/p/204142 o bug fixed if testing targetPeak is a list of GRanges objects in enrichPeakOverlap function \u0026lt;2016-07-20, Wed\u0026gt; + https://github.com/GuangchuangYu/ChIPseeker/issues/37 + https://github.com/GuangchuangYu/ChIPseeker/issues/36 o fixed typo in determine gene ID type \u0026lt;2016-06-21, Tue\u0026gt; + https://github.com/GuangchuangYu/ChIPseeker/issues/28#issuecomment-227212519 o move upsetplot generics to DOSE and import from DOSE to prevent function name conflict \u0026lt;2016-06-14, Tue\u0026gt; CHANGES IN VERSION 1.9.4 ------------------------ o bug fixed \u0026lt;2016-06-08, Wed\u0026gt; + https://github.com/GuangchuangYu/ChIPseeker/issues/17#issuecomment-224407402 + https://github.com/GuangchuangYu/ChIPseeker/pull/24/files CHANGES IN VERSION 1.9.3 ------------------------ o use byte compiler \u0026lt;2016-05-18, Wed\u0026gt; o https://github.com/Bioconductor-mirror/ChIPseeker/commit/f1ada57b9c66a1a44355bbbbdaf5b0a88e10cf7d CHANGES IN VERSION 1.9.2 ------------------------ o name tagMatrix in plotAvgProf automatically if missing \u0026lt;2016-05-12, Thu\u0026gt; o https://github.com/Bioconductor-mirror/ChIPseeker/commit/d5f16b2bc01725e30282c3acb33007ef521a514c CHANGES IN VERSION 1.9.1 ------------------------ o bug fixed in getNearestFeatureIndicesAndDistances \u0026lt;2016-05-11, Wed\u0026gt; + correct metadata in dummy NA feature  clusterProfiler Thanks to the update of GOSemSim, now simplify method for removing redundent GO terms can be applied to all species that have OrgDb object.\nsummary for compareClusterResult object was deprecated, user need to use as.data.frame. Several accesor functions including $, [ and [[ were supported as well as head, tail and dim for compareClusterResult object.\nbrowseKEGG function was added, which can open browser and highligh enriched genes in the pathway.\nUpdates of DOSE also affect clusterProfiler, especially the leading edge analysis was incorporated.\nCHANGES IN VERSION 3.1.9 ------------------------ o bug fixed of simplify method for compareCluster object \u0026lt;2016-08-17, Mon\u0026gt; + use semData parameter according to the change of GOSemSim CHANGES IN VERSION 3.1.8 ------------------------ o as.data.frame method for compareClusterResult \u0026lt;2016-09-29, Thu\u0026gt; o geneID and geneInCategory methods \u0026lt;2016-09-19, Mon\u0026gt; CHANGES IN VERSION 3.1.7 ------------------------ o [, [[, head, tail, dim methods for compareClusterResult \u0026lt;2016-08-28, Sun\u0026gt; o fixed R-devel check \u0026lt;2016-08-16, Tue\u0026gt; CHANGES IN VERSION 3.1.6 ------------------------ o update vignette \u0026lt;2016-08-16, Tue\u0026gt; o browseKEGG \u0026lt;2016-08-15, Mon\u0026gt; o unit test \u0026lt;2016-08-15, Mon\u0026gt; CHANGES IN VERSION 3.1.5 ------------------------ o move enrichMeSH \u0026amp; gseMeSH to meshes \u0026lt;2016-08-11, Thu\u0026gt; CHANGES IN VERSION 3.1.4 ------------------------ o MeSH term enrichment analysis (enrichMeSH and gseMeSH) \u0026lt;2016-07-28, Thu\u0026gt; CHANGES IN VERSION 3.1.3 ------------------------ o export download_KEGG \u0026lt;2016-07-25, Mon\u0026gt; o according to the changes of GOSemSim and DOSE \u0026lt;2016-07-05, Tue\u0026gt; CHANGES IN VERSION 3.1.2 ------------------------ o 'by' parameter for GSEA analysis \u0026lt;2016-07-04, Mon\u0026gt; o duplicated KEGG path id for KEGG orthology, only use ko \u0026lt;2016-06-28, Tue\u0026gt; + e.g. map00010 and ko00010 + http://www.kegg.jp/dbget-bin/www_bget?ko+ko00010 + http://www.kegg.jp/dbget-bin/www_bget?ko+map00010 CHANGES IN VERSION 3.1.1 ------------------------ o getGOLevel and dropGO support using a vector of GO level \u0026lt;2016-05-20, Fri\u0026gt; + https://groups.google.com/forum/?utm_medium=email\u0026amp;utm_source=footer#!msg/clusterprofiler/zNYHLI6RpJI/1u4XRKfNAQAJ o use byte compiler \u0026lt;2016-05-18, Wed\u0026gt; o https://github.com/Bioconductor-mirror/clusterProfiler/commit/2949fe8db5464c419c9d1665cb24f43c49ac54ec  DOSE I am glad to release DOSE v3.0, the most important enhancement is now GSEA supports leading edge analysis.\nThanks to the invitation from Alexey Sergishichev, I switch to fgsea in DOSE for calculating enrichment score of GSEA analysis. User can still use my implementation by specifying by=\u0026quot;DOSE\u0026quot;.\nNow enrichMap and cnetplot output igraph object, so that it can be viewed by other software (e.g. networkD3). title parameter is supported in gseaplot.\nSeveral accessor functions, including $, [, and [[ were implemented for enrichResult and gseaResult object. head, tail and dim is also supported. summary method was deprecated, instead user should use as.data.frame to convert the enrichResult or gseaResult object to data.frame.\nIn additional to DO and NCG, DisGeNET data was incorporated and we can identify disease association by using this annotation.\nCHANGES IN VERSION 2.11.12 ------------------------ o deprecate summary method and use as.data.frame instead \u0026lt;2016-09-29, Thu\u0026gt; CHANGES IN VERSION 2.11.11 ------------------------ o export geneID and geneInCategory \u0026lt;2016-09-19, Mon\u0026gt; CHANGES IN VERSION 2.11.10 ------------------------ o geneID and geneInCategory accessor functions \u0026lt;2016-09-19, Mon\u0026gt; CHANGES IN VERSION 2.11.9 ------------------------ o enrichMap works with result contains only one term \u0026lt;2016-08-15, Wed\u0026gt; + https://github.com/GuangchuangYu/DOSE/issues/15 o build_Anno now works with tibble \u0026lt;2016-08-18, Tue\u0026gt; CHANGES IN VERSION 2.11.8 ------------------------ o add unit test \u0026lt;2016-08-15, Mon\u0026gt; CHANGES IN VERSION 2.11.7 ------------------------ o change for meshes packages \u0026lt;2016-08-11, Thu\u0026gt; CHANGES IN VERSION 2.11.6 ------------------------ o user can use options(DOSE_workers = x) to set using x cores for GSEA analysis \u0026lt;2016-08-02, Tue\u0026gt; o support DisGeNET enrichment analyses \u0026lt;2016-08-01, Mon\u0026gt; + enrichDGN, enrichDGNv, gseDGN o update vignettes \u0026lt;2016-07-29, Fri\u0026gt; CHANGES IN VERSION 2.11.5 ------------------------ o enrichMap now output igraph object that can be viewed using other software like networkD3 \u0026lt;2016-07-25, Mon\u0026gt; o dim methods for enrichResult and gseaResult \u0026lt;2016-07-22, Fri\u0026gt; o $ methods for enrichResult and gseaResult \u0026lt;2016-07-20, Wed\u0026gt; o switch from parallel to BiocParallel \u0026lt;2017-07-07, Thu\u0026gt; o [, head and tail methods for enrichResult and gseaResult \u0026lt;2016-07-06, Wed\u0026gt; o change according to GOSemSim \u0026lt;2016-07-05, Tue\u0026gt; CHANGES IN VERSION 2.11.4 ------------------------ o 'title' parameter for gseaplot \u0026lt;2016-07-04, Mon\u0026gt; + contributed by https://github.com/pedrostrusso + https://github.com/GuangchuangYu/DOSE/pull/13 o 'by' parameter in GSEA_internal, by default by = 'fgsea' \u0026lt;2016-07-04, Mon\u0026gt; + by = 'fgsea', use GSEA algorithm implemented in fgsea + by = 'DOSE', use GSEA algorithm implemented in DOSE o leading edge analysis for GSEA \u0026lt;2016-07-04, Mon\u0026gt; CHANGES IN VERSION 2.11.3 ------------------------ o output igraph object in cnetplot \u0026lt;2016-06-21, Tue\u0026gt; o upsetplot generics \u0026lt;2016-06-14, Tue\u0026gt; o [[ methods for enrichResult and gseaResult for accessing gene set \u0026lt;2016-06-14, Tue\u0026gt; CHANGES IN VERSION 2.11.2 ------------------------ o use byte compiler \u0026lt;2016-05-18, Wed\u0026gt; o https://github.com/Bioconductor-mirror/DOSE/commit/6c508c6a6816f465bb372f30f4ab99c839d81767 CHANGES IN VERSION 2.11.1 ------------------------ o https://github.com/Bioconductor-mirror/DOSE/commit/7e87d01e671ce1b5fbe974c06b796b1a2970f11c  ggtree I am very happy that ggtree was published in MEE.\nG Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\nIn this release, more functionalities were added and of course several bug fixed.\nFile parsing read.phyloT for parsing newick format of phyloT output.\nread.nhx supports newick file as NHX format allow tree without nhx tags.\nSupport reading BEAST MCC trees by read.beast function.\ntree object support phylo4d defined in phylobase package is supported, and associated data stored in phylo4d object can be used to annotate the tree directly in ggtree.\nGeom New geoms including geom_strip, geom_range, geom_balance (contributed by Justin Silverman, the author of philr).\ngeom_cladelabel now supports parsing expression to label clades.\nLayout fan layout is supported, and user can use open_tree function to transform a tree from rectangular or circular to fan layout.\nEnhancement and utilities identify method support annotating trees interactively.\nfacet_plot supports aligning other plots to phylogenetic trees.\nassociate tree with different type of data by #ggtree https://t.co/6w755VWytZ pic.twitter.com/K8WViEi13E\n\u0026mdash; Guangchuang Yu (@guangchuangyu) September 7, 2016  as.polytomy allow collapsing binary tree to polytomy by applying \u0026lsquo;fun\u0026rsquo; to selected \u0026lsquo;feature\u0026rsquo; (e.g. bootstrap value less than 70).\nrotate_tree allow user to rotating circular layout tree.\nCHANGES IN VERSION 1.5.17 ------------------------ o read.nhx support newick file \u0026lt;2016-10-17, Mon\u0026gt; + https://github.com/GuangchuangYu/ggtree/issues/79 CHANGES IN VERSION 1.5.16 ------------------------ o read.phyloT for parsing newick format of phyloT output \u0026lt;2016-10-11, Tue\u0026gt; + https://www.biostars.org/p/210401/#216128 o fixed aes mapping in geom_strip \u0026lt;2016-10-11, Tue\u0026gt; o fixed R check \u0026lt;2016-10-10, Mon\u0026gt; + check.aes parameter is not available in release version of ggplot2 yet CHANGES IN VERSION 1.5.15 ------------------------ o check.aes for layers defined in ggtree \u0026lt;2016-10-07, Fri\u0026gt; o recalculate 'angle' when collapse, expand and rotate clade \u0026lt;2016-10-06, Thu\u0026gt; + https://github.com/GuangchuangYu/ggtree/issues/78 CHANGES IN VERSION 1.5.14 ------------------------ o subset tip in geom_tiplab2 \u0026lt;2016-10-05, Wed\u0026gt; o add `compute_group` according to ggplot (v2.1.0) \u0026lt;2016-09-29, Thu\u0026gt; + https://github.com/hadley/ggplot2/issues/1797 o unit test for groupOTU and groupClade \u0026lt;2016-09-22, Thu\u0026gt; o groupOTU label groups by input group names (when input is a named list) \u0026lt;2016-09-22, Thu\u0026gt; o update angle calculation for geom_tiplab \u0026lt;2016-09-13, Thu\u0026gt; o as.polytomy to collapse binary tree to polytomy by applying 'fun' to selected 'feature' (e.g. bootstrap value less than 70). \u0026lt;2016-09-13, Tue\u0026gt; + currently only phylo object supported. + add test for as.polytomy CHANGES IN VERSION 1.5.13 ------------------------ o facet_plot for plotting data with tree \u0026lt;2016-09-06, Tue\u0026gt; o more parameters for column names in gheatmap \u0026lt;2016-09-06, Tue\u0026gt; + colnames_angle + colnames_offset_x + colnames_offset_y + hjust o offset parameter in geom_tiplab and geom_tiplab2 \u0026lt;2016-09-05, Mon\u0026gt; CHANGES IN VERSION 1.5.12 ------------------------ o use data in all layers instead of the base layer for coordination calculation in subview \u0026lt;2016-09-01, Thu\u0026gt; o bug fixed in subview, width \u0026amp; height should be width/2 \u0026amp; height/2 \u0026lt;2016-09-01, Thu\u0026gt; CHANGES IN VERSION 1.5.11 ------------------------ o gheatmap works with matrix \u0026lt;2016-08-28, Sun\u0026gt; + https://groups.google.com/forum/?utm_medium=email\u0026amp;utm_source=footer#!msg/bioc-ggtree/2YLvXHMJJ6U/c4zS7yfGCAAJ o support parsing expression in geom_strip \u0026lt;2016-08-18, Thu\u0026gt; o bug fixed in geom_tiplab \u0026lt;2016-08-17, Wed\u0026gt; + https://groups.google.com/forum/?utm_medium=email\u0026amp;utm_source=footer#!msg/bioc-ggtree/Tm9ULK7hd9E/HviXEh3CBwAJ o update citation info, add doi. \u0026lt;2016-08-16, Tue\u0026gt; CHANGES IN VERSION 1.5.10 ------------------------ o fixed issue #72 for label of geom_treescale not displayed \u0026lt;2016-08-16, Tue\u0026gt; + https://github.com/GuangchuangYu/ggtree/issues/72 CHANGES IN VERSION 1.5.9 ------------------------ o update citation info \u0026lt;2016-08-12, Fri\u0026gt; CHANGES IN VERSION 1.5.8 ------------------------ o add color parameter in geom_cladelabel, color should be of length 1 or 2 \u0026lt;2016-08-11, Thu\u0026gt; o geom_cladelabel support parsing expression \u0026lt;2016-08-11, Thu\u0026gt; CHANGES IN VERSION 1.5.7 ------------------------ o geom_strip can accept taxa name as input but labeling strip will not supported. To support labeling strip, user need to input node id \u0026lt;2016-07-27, Wed\u0026gt; o nodeid function for converting node label(s) to node id(s) \u0026lt;2016-07-27, Wed\u0026gt; CHANGES IN VERSION 1.5.6 ------------------------ o remove dependency of Biostring for installing ggtree \u0026lt;2016-07-21, Thu\u0026gt; + still needed for building vignette and for processing FASTA file o remove dependency of EBImage for building \u0026amp; installing ggtree \u0026lt;2016-07-21, Thu\u0026gt; + the package is still needed if user want to annotate tree with image file o `%\u0026lt;+%` now works with tbl_df \u0026lt;2016-07-21, Thu\u0026gt; + https://github.com/GuangchuangYu/ggtree/issues/66 o identify method for ggtree \u0026lt;2016-06-28, Tue\u0026gt; + see https://guangchuangyu.github.io/2016/06/identify-method-for-ggtree o geom_balance contributed by Justin Silverman \u0026lt;2016-06-22, Wed\u0026gt; + see https://github.com/GuangchuangYu/ggtree/pull/64 CHANGES IN VERSION 1.5.5 ------------------------ o update geom_tiplab2 according to angle change introduced by open_tree \u0026lt;2016-06-20, Mon\u0026gt; o bug fixed in collapse, now work with collapse a clade that contain a subclade that was already collapsed \u0026lt;2016-06-02-Thu\u0026gt; o bug fixed if time-scaled tree extend into the BCE. \u0026lt;2016-06-02, Thu\u0026gt; + as.Date won't work for BCE time. + as.Date=FALSE by default in fortify method, just use the time in decimal format (real number, not Date object). CHANGES IN VERSION 1.5.4 ------------------------ o reroot method for raxml object \u0026lt;2016-05-22, Sun\u0026gt; o bug fixed in scaleClade, now y positions are (hopefully) always correct. \u0026lt;2016-05-20, Fri\u0026gt; o bug fixed in collapse \u0026lt;2016-05-20, Fri\u0026gt; + if user collapse a node that is an offspring of a collapsed node, print warning msg and return the tree directly o use byte compiler \u0026lt;2016-05-18, Wed\u0026gt; o change any(is.na()) to anyNA() which is more efficient \u0026lt;2016-05-18, Wed\u0026gt; o https://github.com/Bioconductor-mirror/ggtree/commit/559548c66b51253e8ccb983d353385838a81f106 CHANGES IN VERSION 1.5.3 ------------------------ o add examples in vignettes \u0026lt;2016-05-13, Fri\u0026gt; + add fan layout example in treeVisualization vignette + add open_tree and rotate_tree example in treeManipulation vignette o add angle in ggtree function, fan layout supported \u0026lt;2016-05-12, Thu\u0026gt; o rotate_tree and open_tree function \u0026lt;2016-05-12, Thu\u0026gt; o support reading BEAST MCC trees (multiple trees in one file) via the read.beast function \u0026lt;2016-05-12, Thu\u0026gt; o https://github.com/Bioconductor-mirror/ggtree/commit/51eec4721595c274c24dc4df2f1fdf40700cb1a5 CHANGES IN VERSION 1.5.2 ------------------------ o add multiplot in ggtreeUtilities vignette \u0026lt;2016-05-12, Thu\u0026gt; o add example of integrate user's data using phylo4d in treeAnnotation vignette \u0026lt;2016-05-11, Wed\u0026gt; o add extend, extendto parameter in geom_hilight \u0026lt;2016-05-10, Tue\u0026gt; o geom_hilight now supports hilight tips \u0026lt;2016-05-10, Tue\u0026gt; + https://github.com/GuangchuangYu/ggtree/issues/53 o more accurate ylim \u0026amp; angle for circular layout \u0026lt;2016-05-10, Tue\u0026gt; + https://github.com/GuangchuangYu/ggtree/issues/40 o supports phylo4d object \u0026lt;2016-05-10, Tue\u0026gt; + https://github.com/GuangchuangYu/ggtree/issues/47 CHANGES IN VERSION 1.5.1 ------------------------ o update vignettes \u0026lt;2016-05-10, Tue\u0026gt; + add geom_range example in treeImport + add geom_strip and geom_taxalink example in treeAnnotation + add ggtreeUtilities vignette o gheatmap now works with data.frame of only one column \u0026lt;2016-05-09, Mon\u0026gt; + contributed by Justin Silverman \u0026lt;jsilve24@gmail.com\u0026gt; + https://github.com/GuangchuangYu/ggtree/pull/57 o geom_strip for associated taxa \u0026lt;2016-05-09, Mon\u0026gt; + https://github.com/GuangchuangYu/ggtree/issues/52  GOSemSim After 7.5 years in Bioconductor, I bump up the version of GOSemSim to 2.0 for optimization of Wang method and extend GOSemSim to all species that have OrgDb object which can be queried by AnnotationHub.\nCHANGES IN VERSION 1.99.4 ------------------------ o fixed NOTE in R check \u0026lt;2016-08-12, Fri\u0026gt; o add unit test using testthat \u0026lt;2016-08-11, Thu\u0026gt; CHANGES IN VERSION 1.99.3 ------------------------ o changes to satisfy meshes package \u0026lt;2016-08-05, Fri\u0026gt; CHANGES IN VERSION 1.99.2 ------------------------ o fixed Rcpp issue \u0026lt;2016-07-19, Tue\u0026gt; + https://github.com/GuangchuangYu/GOSemSim/issues/6 CHANGES IN VERSION 1.99.1 ------------------------ o update vignette \u0026lt;2016-07-14, Thu\u0026gt; CHANGES IN VERSION 1.99.0 ------------------------ o support all organisms that have OrgDb object \u0026lt;2016-07-05, Tue\u0026gt; o optimize Wang method \u0026lt;2016-07-04, Mon\u0026gt;  meshes  MeSH (Medical Subject Headings) is the NLM controlled vocabulary used to manually index articles for MEDLINE/PubMed. MeSH terms were associated by Entrez Gene ID by three methods, gendoo, gene2pubmed and RBBH. This association is fundamental for enrichment and semantic analyses. meshes supports enrichment analysis (over-representation and gene set enrichment analysis) of gene list or whole expression profile. The semantic comparisons of MeSH terms provide quantitative ways to compute similarities between genes and gene groups. meshes implemented five methods proposed by Resnik, Schlicker, Jiang, Lin and Wang respectively and supports more than 70 species.\n meshes was newly introduced in this BioC release branch. It supports semantic similarity measurement and enrichment analysis of more than 70 species.\nCHANGES IN VERSION 0.99.7 ------------------------ o Depends DOSE \u0026lt;2016-09-29, Thu\u0026gt; CHANGES IN VERSION 0.99.6 ------------------------ o update docs \u0026lt;2016-09-19, Mon\u0026gt; CHANGES IN VERSION 0.99.3 ------------------------ o remove non-ASCII character in vignettes/meshes.bib \u0026lt;2016-08-16, Tue\u0026gt; CHANGES IN VERSION 0.99.2 ------------------------ o all exported functions have runnable examples required by BiocCheck \u0026lt;2016-08-16, Tue\u0026gt; CHANGES IN VERSION 0.99.1 ------------------------ o R check passed \u0026lt;2016-08-16, Tue\u0026gt; CHANGES IN VERSION 0.99.0 ------------------------ o add vignette \u0026lt;2016-08-11, Thu\u0026gt; o enrichMeSH and gseMeSH \u0026lt;2016-08-11, Thu\u0026gt; + move from clusterProfiler CHANGES IN VERSION 0.0.1 ------------------------ o geneSim \u0026lt;2016-08-10, Wed\u0026gt; o meshSim \u0026lt;2016-08-05, Fri\u0026gt;  ReactomePA For ReactomePA itself, the change is minor. I only add unit test to this package.\nBut there are some changes of DOSE also affect this package as it internally use DOSE for enrichment analysis, including leading edge analysis for GSEA and other minor changes.\nCHANGES IN VERSION 1.17.4 ------------------------ o unit test \u0026lt;2016-08-15, Mon\u0026gt; CHANGES IN VERSION 1.17.3 ------------------------ o move getDb from GOSemSim (no longer need this function) to ReactomePA and remove dependency of GOSemSim \u0026lt;2016-07-06, Wed\u0026gt; o 'by' parameter for GSEA analysis \u0026lt;2016-07-04, Mon\u0026gt; CHANGES IN VERSION 1.17.2 ------------------------ o use byte compiler \u0026lt;2016-05-18, Wed\u0026gt; o https://github.com/Bioconductor-mirror/ReactomePA/commit/6ce32c8e03e1b252662a07901cce022fab038086 CHANGES IN VERSION 1.17.1 ------------------------ o https://github.com/Bioconductor-mirror/ReactomePA/commit/5d150f5fe545cfa3983872bf5485af1b9ba3129d  Citation Yu G, Wang LG and He QY*. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. Bioinformatics 2015, 31(14):2382-2383.\n\nYu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\nG Yu, LG Wang, GR Yan, QY He. DOSE: an R/Bioconductor package for Disease Ontology Semantic and Enrichment analysis. Bioinformatics 2015, 31(4):608-609.\n\nG Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \nYu G†, Li F†, Qin Y, Bo X*, Wu Y and Wang S*. GOSemSim: an R package for measuring semantic similarity among GO terms and gene products. Bioinformatics. 2010, 26(7):976-978.\n \nG Yu, QY He*. ReactomePA: an R/Bioconductor package for reactome pathway analysis and visualization. Molecular BioSystems 2016, 12(2):477-479.\n\n","date":1476872037,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1476872037,"objectID":"43c4066191e7515946de6e74abeb5be9","permalink":"https://guangchuangyu.github.io/2016/10/bioc-34-news-of-my-bioc-packages/","publishdate":"2016-10-19T18:13:57+08:00","relpermalink":"/2016/10/bioc-34-news-of-my-bioc-packages/","section":"post","summary":"I have 7 packages published within the Bioconductor project.\n ChIPseeker clusterProfiler DOSE ggtree GOSemSim meshes ReactomePA  A new package meshes was included in BioC 3.4 release.\n","tags":["BioC","GOSemSim","clusterProfiler","DOSE","ReactomePA","ggtree","ChIPseeker","meshes"],"title":"[Bioc 34] NEWS of my BioC packages","type":"post"},{"authors":null,"categories":["R","Visualization"],"content":"ggtree provides many helper functions for manupulating phylogenetic trees and make it easy to explore tree structure visually.\nHere, as examples, I used ggtree to draw capital character G and C, which are first letter of my name :-).\nTo draw a tree in such shape, we need fan layout (circular layout with open angle) and then rotating the tree to let the open space on the correct position. Here are the source codes to produce the G and C shapes of tree. I am thinking about using the G shaped tree as ggtree logo. Have fun with ggtree :-)\nlibrary(ggtree)\nbeast_file \u0026lt;- system.file(\u0026quot;examples/MCC_FluA_H3.tree\u0026quot;, package=\u0026quot;ggtree\u0026quot;) beast_tree \u0026lt;- read.beast(beast_file) genotype_file \u0026lt;- system.file(\u0026quot;examples/Genotype.txt\u0026quot;, package=\u0026quot;ggtree\u0026quot;) genotype \u0026lt;- read.table(genotype_file, sep=\u0026quot;\\t\u0026quot;, stringsAsFactor=F) p \u0026lt;- ggtree(beast_tree, layout='circular', color=\u0026quot;#4DAF4A\u0026quot;, size=2, branch.length='none', right=T) + annotate('text', x=0, y=40, label='ggtree', family='mono', size=16) p2 \u0026lt;- gheatmap(p, genotype, width=0.2, hjust='left', colnames_angle=-10, font.size=1.5) + scale_fill_manual(values=c(\u0026quot;#E41A1C\u0026quot;,\u0026quot;#377EB8\u0026quot;,\u0026quot;#FC8D59\u0026quot;)) + theme_tree() open_tree(p2, 80) %\u0026gt;% rotate_tree(80)  p \u0026lt;- ggtree(beast_tree, layout='circular', color=\u0026quot;#4DAF4A\u0026quot;, size=2, branch.length='none', right=T) + xlim(-30, NA) p2 \u0026lt;- gheatmap(p, genotype, width=0.2, hjust='left', colnames=F) + scale_fill_manual(values=c(\u0026quot;#E41A1C\u0026quot;,\u0026quot;#377EB8\u0026quot;,\u0026quot;#FC8D59\u0026quot;)) + theme_tree() open_tree(p2, 90) %\u0026gt;% rotate_tree(50)  Citation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1476453000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1476453000,"objectID":"51869c37931a492fe46f79a3d11899ab","permalink":"https://guangchuangyu.github.io/2016/10/reproducible-logo-generated-by-ggtree/","publishdate":"2016-10-14T21:50:00+08:00","relpermalink":"/2016/10/reproducible-logo-generated-by-ggtree/","section":"post","summary":"ggtree provides many helper functions for manupulating phylogenetic trees and make it easy to explore tree structure visually.\nHere, as examples, I used ggtree to draw capital character G and C, which are first letter of my name :-).\nTo draw a tree in such shape, we need fan layout (circular layout with open angle) and then rotating the tree to let the open space on the correct position. Here are the source codes to produce the G and C shapes of tree. I am thinking about using the G shaped tree as ggtree logo. Have fun with ggtree :-)\n","tags":["ggtree","ggplot2"],"title":"reproducible logo generated by ggtree","type":"post"},{"authors":null,"categories":null,"content":"","date":1475280000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1475280000,"objectID":"e0ef41586a98d4d1f70e9c810e163b71","permalink":"https://guangchuangyu.github.io/project/meshes/","publishdate":"2016-10-01T00:00:00Z","relpermalink":"/project/meshes/","section":"project","summary":"This package provides functions for pathway analysis based on REACTOME pathway database. It implements enrichment analysis, gene set enrichment analysis and several functions for visualization.","tags":["bioc"],"title":"meshes","type":"project"},{"authors":null,"categories":["Visualization","R"],"content":"OutbreakTools implements basic tools for the analysis of Disease Outbreaks.\nIt defines S4 class obkData to store case-base outbreak data. It also provides a function, plotggphy, to visualize such data on the phylogenetic tree.\nlibrary(OutbreakTools) data(FluH1N1pdm2009) attach(FluH1N1pdm2009) x \u0026lt;- new(\u0026quot;obkData\u0026quot;, individuals = individuals, dna = FluH1N1pdm2009$dna, dna.individualID = samples$individualID, dna.date = samples$date, trees = FluH1N1pdm2009$trees) plotggphy(x, ladderize = TRUE, branch.unit = \u0026quot;year\u0026quot;, tip.color = \u0026quot;location\u0026quot;, tip.size = 3, tip.alpha = 0.75)  As I mentioned in the post, ggtree for microbiome data, ggtree fits the R ecosystem in phylogenetic analysis. It serves as a general tools for annotating phylogenetic tree with different associated data from various sources. obkData object is also supported by ggtree and outbreak data stored in the object can be used to annotate the tree using grammar of graphics supported by ggtree.\nlibrary(ggtree) ggtree(x, mrsd=\u0026quot;2009-09-30\u0026quot;, as.Date=TRUE) + geom_tippoint(aes(color=location), size=3, alpha=.75) + scale_color_brewer(\u0026quot;location\u0026quot;, palette=\u0026quot;Spectral\u0026quot;) + theme_tree2(legend.position='right')  We can also associate the tree with other type of data that may come from experiments or evolution inference and use them to annotate the tree as demonstrated in the online vignettes.\nCitation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1474287048,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1474287048,"objectID":"c92c90e023c9d0ae45ece084460caa14","permalink":"https://guangchuangyu.github.io/2016/09/ggtree-for-outbreak-data/","publishdate":"2016-09-19T20:10:48+08:00","relpermalink":"/2016/09/ggtree-for-outbreak-data/","section":"post","summary":"OutbreakTools implements basic tools for the analysis of Disease Outbreaks.\nIt defines S4 class obkData to store case-base outbreak data. It also provides a function, plotggphy, to visualize such data on the phylogenetic tree.\nlibrary(OutbreakTools) data(FluH1N1pdm2009) attach(FluH1N1pdm2009) x \u0026lt;- new(\u0026quot;obkData\u0026quot;, individuals = individuals, dna = FluH1N1pdm2009$dna, dna.individualID = samples$individualID, dna.date = samples$date, trees = FluH1N1pdm2009$trees) plotggphy(x, ladderize = TRUE, branch.unit = \u0026quot;year\u0026quot;, tip.color = \u0026quot;location\u0026quot;, tip.size = 3, tip.alpha = 0.75) ","tags":["ggtree","OutbreakTools","tree"],"title":"ggtree for outbreak data","type":"post"},{"authors":null,"categories":["Visualization","R"],"content":"ggtree can parse many software outputs and the evolution evidences inferred by these software can be used directly for tree annotation. ggtree not only works as an infrastructure that enables evolutionary data that inferred by commonly used software packages to be used in R, but also serves as a general tree visualization and annotation tool for the R community as it supports many S3/S4 objects defined by other R packages.\nphyloseq for microbiome data phyloseq class defined in the phyloseq package was designed for microbiome data. phyloseq package implemented plot_tree function using ggplot2. Although the function was implemented by ggplot2 and we can use theme, scale_color_manual etc for customization, the most valuable part of ggplot2, adding layer, is missing. plot_tree only provides limited parameters to control the output graph and it is hard to add layer unless user has expertise in both phyloseq and ggplot2.\nlibrary(phyloseq) data(GlobalPatterns) GP \u0026lt;- prune_taxa(taxa_sums(GlobalPatterns) \u0026gt; 0, GlobalPatterns) GP.chl \u0026lt;- subset_taxa(GP, Phylum==\u0026quot;Chlamydiae\u0026quot;) plot_tree(GP.chl, color=\u0026quot;SampleType\u0026quot;, shape=\u0026quot;Family\u0026quot;, label.tips=\u0026quot;Genus\u0026quot;, size=\u0026quot;Abundance\u0026quot;) + ggtitle(\u0026quot;tree annotation using phyloseq\u0026quot;)  PS: If we look at the plot careful, we will find that legend produce by plot_tree is not correct (plot_tree map SampleType to color text which was shown in legend, but we can\u0026rsquo;t find the mapping in the plot).\nggtree supports phyloseq object One of the advantage of R is the community. R users develop packages that can work together and complete each other. ggtree fits the R ecosystem in phylogenetic analysis. It supports several classes defined in other R packages that designed for storing phylogenetic tree with associated data, including phyloseq.\nlibrary(scales) library(ggtree) p \u0026lt;- ggtree(GP.chl, ladderize = FALSE) + geom_text2(aes(subset=!isTip, label=label), hjust=-.2, size=4) + geom_tiplab(aes(label=Genus), hjust=-.3) + geom_point(aes(x=x+hjust, color=SampleType, shape=Family, size=Abundance),na.rm=TRUE) + scale_size_continuous(trans=log_trans(5)) + theme(legend.position=\u0026quot;right\u0026quot;) + ggtitle(\u0026quot;reproduce phyloseq by ggtree\u0026quot;) print(p)  With ggtree, it would be more flexible to combine different layers using grammar of graphics syntax and more powerful since layers can be added without limitation (i.e. those predefined in plot_tree function). As an example, I extract the barcode sequence from the tree object and use msaplot to visualize the barcode sequence with the tree.\ndf \u0026lt;- fortify(GP.chl) barcode \u0026lt;- as.character(df$Barcode_full_length) names(barcode) \u0026lt;- df$label barcode \u0026lt;- barcode[!is.na(barcode)] msaplot(p, Biostrings::BStringSet(barcode), width=.3, offset=.05)  PS: I am thinking about writing a tutorial through examples. If you have any interesting topic, please let me know.\nCitation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1472671068,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1472671068,"objectID":"fad8234411217261588d3c2c66b77d90","permalink":"https://guangchuangyu.github.io/2016/09/ggtree-for-microbiome-data/","publishdate":"2016-09-01T03:17:48+08:00","relpermalink":"/2016/09/ggtree-for-microbiome-data/","section":"post","summary":"ggtree can parse many software outputs and the evolution evidences inferred by these software can be used directly for tree annotation. ggtree not only works as an infrastructure that enables evolutionary data that inferred by commonly used software packages to be used in R, but also serves as a general tree visualization and annotation tool for the R community as it supports many S3/S4 objects defined by other R packages.\nphyloseq for microbiome data phyloseq class defined in the phyloseq package was designed for microbiome data. phyloseq package implemented plot_tree function using ggplot2. Although the function was implemented by ggplot2 and we can use theme, scale_color_manual etc for customization, the most valuable part of ggplot2, adding layer, is missing. plot_tree only provides limited parameters to control the output graph and it is hard to add layer unless user has expertise in both phyloseq and ggplot2.\n","tags":["ggtree","phyloseq","microbiome","tree"],"title":"ggtree for microbiome data","type":"post"},{"authors":null,"categories":["R"],"content":"Today ggtree received 100 stars on  and I found the paper was online at the same day by the tweet:\nggtree, Methods in Ecology and Evolutionに掲載されたのか。オープンアクセスっぽいな。https://t.co/JlET18BSZv\n\u0026mdash; Hoxo_Mass_Spectrum (@siero5335) August 16, 2016  I am quite exciting about it. Now ggtree is citable by doi:10.1111/2041-210X.12628.\nIn the review period, ggtree had already been cited by several papers:\n1. https://doi.org/10.7717/peerj.976\nAnnotating phylogenetic tree with image files (i.e. secondary structure).\n2. http://dx.doi.org/10.1016/j.meegid.2015.12.006\nHighlight clades and annotate phylogenetic tree with genotype table.\n3. http://dx.doi.org/10.3389%2Ffcimb.2016.00036\nAnnotate phylogenetic tree with binary matrix.\n4. http://dx.doi.org/10.1104/pp.16.00359\nAnnotate phylogenetic tree with sequence features.\n5. http://dx.doi.org/10.1101/067207\nAnnotate with bootstrap values.\n6. http://www.nature.com/articles/srep30158\nVisualize bootstrap value infer by RAxML and phyml on the same tree.\n7. http://dx.doi.org/10.1101/053371\n8. http://dx.doi.org/10.1105/tpc.16.00053\n9. http://dx.doi.org/10.1111/mec.13474\n10. http://dx.doi.org/10.1371/journal.pone.0160958\n11. http://dx.doi.org/10.1111/2041-210X.12593\n12. http://dx.doi.org/10.1101/053371\nThe ggtree paper provides several comprehensive and reproducible examples. It can be a good reference for complex tree annotation. My slides in 9th China R conference summarized the functionalities that ggtree provided.\nMore information can be found in ggtree homepage. Hope you have fun with ggtree.\nCitation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1471356600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1471356600,"objectID":"fc78f715769695ef56b7108b1eaacadb","permalink":"https://guangchuangyu.github.io/2016/08/ggtree-paper-published/","publishdate":"2016-08-16T22:10:00+08:00","relpermalink":"/2016/08/ggtree-paper-published/","section":"post","summary":"Today ggtree received 100 stars on  and I found the paper was online at the same day by the tweet:\nggtree, Methods in Ecology and Evolutionに掲載されたのか。オープンアクセスっぽいな。https://t.co/JlET18BSZv\n\u0026mdash; Hoxo_Mass_Spectrum (@siero5335) August 16, 2016 ","tags":["ggtree"],"title":"ggtree paper published","type":"post"},{"authors":["**G Yu**","DK Smith","H Zhu","Y Guan","TTY Lam*"],"categories":null,"content":"","date":1471305600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1471305600,"objectID":"71fce16f1523b2523303b03449047007","permalink":"https://guangchuangyu.github.io/publication/ggtree/","publishdate":"2016-08-16T00:00:00Z","relpermalink":"/publication/ggtree/","section":"publication","summary":"1.We present an R package, GGTREE, which provides programmable visualization and annotation of phyloge- netic trees. 2. GGTREE can read more tree file formats than other softwares, including newick, nexus, NHX, phylip and jplace formats, and support visualization of phylo, multiphylo, phylo4, phylo4d, obkdata and phyloseq tree objects defined in other R packages. It can also extract the tree/branch/node-specific and other data from the analysis outputs of BEAST, EPA, HYPHY, PAML, PHYLODOG, PPLACER, R8S, RAXML and REVBAYES software, and allows using these data to annotate the tree. 3. The package allows colouring and annotation of a tree by numerical/categorical node attributes, manipulat- ing a tree by rotating, collapsing and zooming out clades, highlighting user selected clades or operational taxo- nomic units and exploration of a large tree by zooming into a selected portion. 4. A two-dimensional tree can be drawn by scaling the tree width based on an attribute of the nodes. A tree can be annotated with an associated numerical matrix (as a heat map), multiple sequence alignment, subplots or silhouette images. 5. The package GGTREE is released under the ARTISTIC-2.0 LICENSE. The source code and documents are freely available through BIOCONDUCTOR (http://www.bioconductor.org/packages/ggtree).","tags":null,"title":"ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data","type":"publication"},{"authors":null,"categories":["R"],"content":"MeSH (Medical Subject Headings) is the NLM (U.S. National Library of Medicine) controlled vocabulary used to manually index articles for MEDLINE/PubMed. MeSH is comprehensive life science vocabulary. MeSH has 19 categories and MeSH.db contains 16 of them. That is:\n  Abbreviation Category    A Anatomy  B Organisms  C Diseases  D Chemicals and Drugs  E Analytical, Diagnostic and Therapeutic Techniques and Equipment  F Psychiatry and Psychology  G Phenomena and Processes  H Disciplines and Occupations  I Anthropology, Education, Sociology and Social Phenomena  J Technology and Food and Beverages  K Humanities  L Information Science  M Persons  N Health Care  V Publication Type  Z Geographical Locations    MeSH terms were associated with Entrez Gene ID by three methods, gendoo, gene2pubmed and RBBH (Reciprocal Blast Best Hit).\n   Method Way of corresponding Entrez Gene IDs and MeSH IDs     Gendoo Text-mining   gene2pubmed Manual curation by NCBI teams   RBBH sequence homology with BLASTP search (E-value-50)    meshes supports enrichment analysis (over-representation analysis and gene set enrichment analysis) of gene list or whole expression profile using MeSH annotation. Data source from gendoo, gene2pubmed and RBBH are all supported. User can selecte interesting category to test. All 16 categories are supported. The analysis supports \u0026gt;70 species listed in MeSHDb BiocView.\nlibrary(meshes) data(geneList) de = names(geneList)[1:100] x \u0026lt;- enrichMeSH(de, MeSHDb = \u0026quot;MeSH.Hsa.eg.db\u0026quot;, database='gendoo', category = 'C') head(x) ## ID Description GeneRatio BgRatio pvalue ## D043171 D043171 Chromosomal Instability 16/96 198/16528 2.794765e-14 ## D000782 D000782 Aneuploidy 17/96 320/16528 3.866830e-12 ## D042822 D042822 Genomic Instability 16/96 312/16528 3.007419e-11 ## D012595 D012595 Scleroderma, Systemic 11/96 279/16528 6.449334e-07 ## D009303 D009303 Nasopharyngeal Neoplasms 11/96 314/16528 2.049315e-06 ## D019698 D019698 Hepatitis C, Chronic 11/96 317/16528 2.246856e-06 ## p.adjust qvalue ## D043171 2.434241e-11 1.794534e-11 ## D000782 1.684004e-09 1.241456e-09 ## D042822 8.731539e-09 6.436931e-09 ## D012595 1.404343e-04 1.035288e-04 ## D009303 3.261686e-04 2.404530e-04 ## D019698 3.261686e-04 2.404530e-04 ## geneID ## D043171 4312/991/2305/1062/4605/10403/7153/55355/4751/4085/81620/332/7272/9212/1111/6790 ## D000782 4312/55143/991/1062/7153/4751/79019/55839/890/983/4085/332/7272/9212/8208/1111/6790 ## D042822 55143/991/1062/4605/7153/1381/9787/4751/10635/890/4085/81620/332/9212/1111/6790 ## D012595 4312/6280/1062/4605/7153/3627/4283/6362/7850/3002/4321 ## D009303 4312/7153/3627/6241/983/4085/5918/332/3002/4321/6790 ## D019698 4312/3627/10563/6373/4283/983/6362/7850/332/3002/3620 ## Count ## D043171 16 ## D000782 17 ## D042822 16 ## D012595 11 ## D009303 11 ## D019698 11  In the over-representation analysis, we use data source from gendoo and C (Diseases) category.\nIn the following example, we use data source from gene2pubmed and test category G (Phenomena and Processes) using GSEA.\ny \u0026lt;- gseMeSH(geneList, MeSHDb = \u0026quot;MeSH.Hsa.eg.db\u0026quot;, database = 'gene2pubmed', category = \u0026quot;G\u0026quot;) ## [1] \u0026quot;preparing geneSet collections...\u0026quot; ## [1] \u0026quot;GSEA analysis...\u0026quot; ## [1] \u0026quot;leading edge analysis...\u0026quot; ## [1] \u0026quot;done...\u0026quot; head(y) ## ID Description setSize enrichmentScore ## D009929 D009929 Organ Size 449 -0.3458797 ## D059647 D059647 Gene-Environment Interaction 455 -0.3551242 ## D009043 D009043 Motor Activity 398 -0.3391521 ## D050156 D050156 Adipogenesis 368 -0.3618413 ## D004041 D004041 Dietary Fats 314 -0.3427588 ## D006339 D006339 Heart Rate 312 -0.3695689 ## NES pvalue p.adjust qvalues rank ## D009929 -1.524164 0.001248439 0.03715088 0.02756207 2309 ## D059647 -1.564984 0.001251564 0.03715088 0.02756207 2237 ## D009043 -1.483672 0.001256281 0.03715088 0.02756207 1757 ## D050156 -1.577000 0.001256281 0.03715088 0.02756207 2207 ## D004041 -1.473730 0.001269036 0.03715088 0.02756207 1684 ## D006339 -1.588315 0.001270648 0.03715088 0.02756207 2405 ## leading_edge ## D009929 tags=27%, list=18%, signal=22% ## D059647 tags=26%, list=18%, signal=22% ## D009043 tags=21%, list=14%, signal=18% ## D050156 tags=26%, list=18%, signal=22% ## D004041 tags=21%, list=13%, signal=19% ## D006339 tags=29%, list=19%, signal=24% ## core_enrichment ## D009929 154/9846/3315/6716/9732/5139/7337/5530/4086/6532/1499/7157/627/2252/22891/2908/8654/4088/22846/4057/860/268/2735/2104/23522/5480/51131/3082/10253/831/604/1028/182/7173/5624/8743/23047/596/9905/1548/2272/22829/948/27303/4314/196/6019/595/5021/7248/4212/2488/54820/5334/6403/2246/4803/866/5919/79789/1907/7048/1831/4060/2247/5468/8076/5793/3485/1733/3952/126/3778/79068/79633/6653/5244/4313/3625/10468/9201/1501/6720/2273/2099/3480/5764/6387/1471/1462/4016/2690/8817/8821/5125/1191/5350/2162/5744/23541/185/367/4982/25802/4128/150/3479/10451/9370/125/4857/1308/2167/652/57502/4137/8614/5241 ## D059647 9497/118/8859/6532/23405/7424/2295/7157/8631/627/2774/22891/2908/4088/51151/11132/1387/860/268/7366/2104/4153/29119/3791/1543/3643/22841/1129/5624/3240/3174/3350/5590/55304/55213/1548/2169/196/8204/8863/5021/23284/9162/11005/4256/3426/84159/5334/629/1793/4208/4322/7048/6817/553/56172/3953/22795/2638/210/5243/5468/1393/1012/27136/51314/4023/5172/4319/4214/3952/5577/126/7832/79068/4313/2944/9369/3075/6720/7494/2099/857/57161/9223/4306/79750/4035/4915/10443/5744/5654/100126791/3551/2487/1746/185/2952/6935/4128/4059/4582/27324/9358/64084/7166/6505/9370/3708/3117/80129/125/5105/2018/2167/652/4137/1524/5241 ## D009043 23621/3082/1291/2915/1543/7466/3240/3350/55304/181/2169/27306/80169/9627/196/8678/8863/23284/81627/4692/5799/2259/3087/1278/1277/3953/4747/2247/6414/210/4744/5468/89795/4023/8522/3485/3952/79068/8864/4313/2944/2273/2099/3480/8528/4908/56892/3339/57161/4741/4306/6571/79750/4915/5744/2487/58503/347/6863/2952/5327/367/4982/4128/4059/3572/150/7060/9358/7166/3479/9254/5348/4129/9370/3708/1311/5105/4137/1408/5241 ## D050156 5595/8609/9563/27332/1499/79738/4837/7157/79960/5729/408/2908/4088/6500/8038/4057/6649/5564/860/8648/10365/10253/54884/4602/7474/6776/79875/596/25956/8644/80781/79923/1490/50486/7840/84162/6041/4692/2246/4208/11075/63924/5919/284119/2308/9411/54795/5950/79365/2247/5468/50507/6469/8553/4023/594/7350/81029/3952/79068/5733/4313/10468/10628/6720/11213/55893/290/6678/63895/4035/633/23414/8639/2162/165/3551/10788/185/3357/367/4982/3667/1634/4128/23024/3479/6424/9370/2167/652/8839/54829/2625/79689/10974 ## D004041 3554/4925/22841/7466/2181/3350/201134/181/2169/948/55911/324/4018/3426/3087/6785/2308/1581/56172/3953/1384/5950/2166/60481/5468/5166/50507/1012/27136/4023/7056/4214/9365/7350/3952/3778/79068/8864/2944/6720/5159/3991/2203/2819/9223/4035/32/213/165/347/2152/185/3487/5327/3667/54898/150/64084/3479/9370/5105/5174/2018/5346/7021/79689 ## D006339 4985/7139/8929/3784/3375/154/1760/9781/5139/118/2702/6532/6416/2869/270/7157/627/2908/7138/5563/3643/1129/7779/947/2034/4179/64388/1621/4881/8863/5021/844/4212/11030/5797/6403/4803/84059/79789/5176/3953/5243/5468/1012/2868/5793/4023/7056/3952/5577/126/2946/3778/477/5733/4313/2944/9201/3075/9499/2273/2099/1471/857/775/4306/4487/213/5350/5744/23245/2152/2697/2791/185/6863/2952/5327/80206/9607/3572/150/3479/2006/55259/9370/125/652/55351  Users can use visualization methods implemented in DOSE (i.e. barplot, dotplot, cnetplot, enrichMap, upsetplot, gseaplot) to help interpreting enriched results.\ngseaplot(y, y[1,1], title=y[1,2])  ","date":1470154755,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1470154755,"objectID":"5af9e8473de49ab830ef11dda306e96d","permalink":"https://guangchuangyu.github.io/2016/08/using-meshes-for-mesh-enrichment-analysis/","publishdate":"2016-08-03T00:19:15+08:00","relpermalink":"/2016/08/using-meshes-for-mesh-enrichment-analysis/","section":"post","summary":"MeSH (Medical Subject Headings) is the NLM (U.S. National Library of Medicine) controlled vocabulary used to manually index articles for MEDLINE/PubMed. MeSH is comprehensive life science vocabulary. MeSH has 19 categories and MeSH.db contains 16 of them. That is:\n","tags":["meshes","MeSH","GSEA","ORA"],"title":"using meshes for MeSH Enrichment Analysis","type":"post"},{"authors":null,"categories":["R"],"content":"leading edge and core enrichment Leading edge analysis reports Tags to indicate the percentage of genes contributing to the enrichment score, List to indicate where in the list the enrichment score is attained and Signal for enrichment signal strength.\nIt would also be very interesting to get the core enriched genes that contribute to the enrichment.\nNow DOSE, clusterProfiler and ReactomePA all support leading edge analysis and report core enriched genes.\nlibrary(DOSE) data(geneList) x \u0026lt;- gseDO(geneList)\n## [1] \u0026quot;preparing geneSet collections...\u0026quot; ## [1] \u0026quot;GSEA analysis...\u0026quot; ## [1] \u0026quot;leading edge analysis...\u0026quot; ## [1] \u0026quot;done...\u0026quot; head(x) ## ID Description setSize ## DOID:1492 DOID:1492 eye and adnexa disease 459 ## DOID:5614 DOID:5614 eye disease 450 ## DOID:0060037 DOID:0060037 developmental disorder of mental health 315 ## DOID:374 DOID:374 nutrition disease 313 ## DOID:5679 DOID:5679 retinal disease 299 ## DOID:654 DOID:654 overnutrition 298 ## enrichmentScore NES pvalue p.adjust qvalues ## DOID:1492 -0.3105160 -1.379586 0.001231527 0.03329506 0.02257366 ## DOID:5614 -0.3125247 -1.386602 0.001243781 0.03329506 0.02257366 ## DOID:0060037 -0.3407349 -1.473028 0.001307190 0.03329506 0.02257366 ## DOID:374 -0.3421127 -1.477222 0.001310616 0.03329506 0.02257366 ## DOID:5679 -0.3676313 -1.582707 0.001333333 0.03329506 0.02257366 ## DOID:654 -0.3490198 -1.500301 0.001340483 0.03329506 0.02257366 ## rank leading_edge ## DOID:1492 1793 tags=22%, list=14%, signal=19% ## DOID:5614 1768 tags=22%, list=14%, signal=19% ## DOID:0060037 2313 tags=24%, list=19%, signal=20% ## DOID:374 1464 tags=22%, list=12%, signal=20% ## DOID:5679 1768 tags=24%, list=14%, signal=21% ## DOID:654 1464 tags=21%, list=12%, signal=19% ## core_enrichment ## DOID:1492 3371/3082/5914/2878/4153/3791/23247/1543/80184/6750/1958/2098/7450/596/9187/2034/482/948/1490/1280/3931/5737/4314/4881/2261/3426/187/629/6403/7042/6785/7507/2934/5176/4060/1277/7078/5950/2057/727/10516/4311/2247/1295/358/10203/2192/582/10218/57125/3485/585/1675/6310/2202/4313/2944/4254/3075/1501/2099/3480/4653/1195/6387/3305/1471/857/4016/1909/4053/6678/1296/7033/4915/55812/1191/5654/10631/2152/2697/7043/2952/6935/2200/3572/7177/7031/3479/2006/10451/9370/771/3117/125/652/4693/5346/1524 ## DOID:5614 3082/5914/2878/4153/3791/23247/1543/80184/6750/1958/2098/7450/596/9187/2034/482/948/1490/1280/3931/5737/4314/4881/2261/3426/187/629/6403/7042/6785/7507/2934/5176/4060/1277/7078/5950/2057/727/10516/4311/2247/1295/358/10203/2192/582/10218/57125/3485/585/1675/6310/2202/4313/2944/4254/3075/1501/2099/3480/4653/6387/3305/1471/857/4016/1909/4053/6678/1296/7033/4915/55812/1191/5654/10631/2152/2697/7043/2952/6935/2200/3572/7177/7031/3479/2006/10451/9370/771/3117/125/652/4693/5346/1524 ## DOID:0060037 154/1760/9732/7337/5175/6532/4763/54806/9759/6326/1499/7157/221037/627/2908/3399/2571/3082/23503/3791/51265/27347/55650/596/3067/51185/7552/22829/23426/324/5021/4885/7248/8910/8604/3397/4208/3400/26470/553/3953/6812/64221/80208/5172/9037/3952/477/93664/3625/2944/6925/6594/7102/3908/2550/4915/4922/26960/1746/2697/6863/3913/2891/367/4128/150/7166/6505/5348/18/4129/9370/57502/4137/79083 ## DOID:374 2169/1490/7840/4887/4314/595/4018/6403/590/3087/866/66036/5919/5176/3953/164656/5950/2638/2166/5243/5468/5108/10560/4023/3485/7350/3952/1149/585/1513/3489/79068/4671/477/4313/3625/9369/6720/7494/2099/3480/3991/23446/6678/4915/5167/8228/165/2152/185/367/4982/3667/4128/9607/3572/150/563/1489/3479/9370/9122/5105/2167/5346/79689/5241 ## DOID:5679 2878/3791/23247/80184/6750/7450/596/9187/2034/482/948/1490/1280/5737/4314/4881/3426/187/629/6403/6785/2934/5176/7078/5950/727/10516/4311/2247/1295/358/10203/582/10218/57125/585/1675/6310/2202/4313/2944/4254/3075/2099/3480/4653/6387/1471/857/4016/1909/4053/6678/1296/4915/55812/1191/5654/10631/2697/2952/6935/2200/3479/2006/10451/9370/771/652/4693/5346/1524 ## DOID:654 2169/1490/7840/4887/4314/595/4018/6403/590/3087/866/66036/5919/5176/3953/5950/2638/2166/5243/5468/4023/3485/7350/3952/1149/585/1513/3489/79068/4671/477/4313/3625/9369/6720/7494/2099/3480/3991/6678/4915/5167/8228/165/2152/185/367/4982/3667/4128/9607/3572/150/563/1489/3479/9370/9122/5105/2167/5346/79689/5241  cnetplot for core enriched genes With core enriched genes reported, cnetplot function for GSEA result is also implemented.\nsetReadable To make the plot more readable, we can use setReadable to convert Entrez ID to Gene Symbol.\ny \u0026lt;- setReadable(x, 'org.Hs.eg.db') head(y, 2) ## ID Description setSize ## DOID:1492 DOID:1492 eye and adnexa disease 459 ## DOID:5614 DOID:5614 eye disease 450 ## enrichmentScore NES pvalue p.adjust qvalues ## DOID:1492 -0.3105160 -1.379586 0.001231527 0.03329506 0.02257366 ## DOID:5614 -0.3125247 -1.386602 0.001243781 0.03329506 0.02257366 ## rank leading_edge ## DOID:1492 1793 tags=22%, list=14%, signal=19% ## DOID:5614 1768 tags=22%, list=14%, signal=19% ## core_enrichment ## DOID:1492 TNC/HGF/RARA/GPX3/MBL2/KDR/KIAA0556/CYP1A1/CEP290/SST/EGR1/ESD/VWF/BCL2/SLC24A1/EPAS1/ATP1B2/CD36/CTGF/COL2A1/LCAT/PTGFR/MMP3/NPR1/FGFR3/CFI/APLNR/CFB/SELP/TGFB2/ELOVL4/XPA/GSN/SERPINF1/LUM/COL1A1/TIMP3/RBP4/EPOR/C5/FBLN5/MME/FGF2/COL8A1/AQP1/CALCRL/FBLN1/BBS1/ANGPTL7/PLXDC1/IGFBP2/BBS4/CFD/ATXN1/EFEMP1/MMP2/GSTM1/KITLG/CFH/CTNND2/ESR1/IGF1R/MYOC/CLK1/CXCL12/HSPA1L/CST3/CAV1/LOXL1/EDNRA/LTBP2/SPARC/COL8A2/TFF3/NTRK2/SPATA7/CLU/HTRA1/POSTN/F3/GJA1/TGFB3/GSTT1/ZEB1/FBN1/IL6ST/TPSAB1/TFF1/IGF1/ELN/VAV3/ADIPOQ/CA12/HLA-DQA1/ADH1B/BMP4/NDP/PLIN1/CX3CR1 ## DOID:5614 HGF/RARA/GPX3/MBL2/KDR/KIAA0556/CYP1A1/CEP290/SST/EGR1/ESD/VWF/BCL2/SLC24A1/EPAS1/ATP1B2/CD36/CTGF/COL2A1/LCAT/PTGFR/MMP3/NPR1/FGFR3/CFI/APLNR/CFB/SELP/TGFB2/ELOVL4/XPA/GSN/SERPINF1/LUM/COL1A1/TIMP3/RBP4/EPOR/C5/FBLN5/MME/FGF2/COL8A1/AQP1/CALCRL/FBLN1/BBS1/ANGPTL7/PLXDC1/IGFBP2/BBS4/CFD/ATXN1/EFEMP1/MMP2/GSTM1/KITLG/CFH/CTNND2/ESR1/IGF1R/MYOC/CXCL12/HSPA1L/CST3/CAV1/LOXL1/EDNRA/LTBP2/SPARC/COL8A2/TFF3/NTRK2/SPATA7/CLU/HTRA1/POSTN/F3/GJA1/TGFB3/GSTT1/ZEB1/FBN1/IL6ST/TPSAB1/TFF1/IGF1/ELN/VAV3/ADIPOQ/CA12/HLA-DQA1/ADH1B/BMP4/NDP/PLIN1/CX3CR1  cnetplot cnetplot(y, foldChange=geneList)  In the figure, we can find that most significant associated diseases are down-regulated.\nWe can of course visualize significant up-regulated disease pathways.\nup \u0026lt;- y$Description[order(y$NES, decreasing=TRUE)][1:6] up ## [1] \u0026quot;tuberculosis\u0026quot; ## [2] \u0026quot;respiratory syncytial virus infectious disease\u0026quot; ## [3] \u0026quot;laryngeal carcinoma\u0026quot; ## [4] \u0026quot;Kawasaki disease\u0026quot; ## [5] \u0026quot;breast ductal carcinoma\u0026quot; ## [6] \u0026quot;pulmonary sarcoidosis\u0026quot; cnetplot(y, foldChange=geneList, showCategory=up)  gseaplot gseaplot now supports adding plot title.\ngseaplot(y, y$ID[1], title=y$Description[1])  Citation G Yu, LG Wang, GR Yan, QY He. DOSE: an R/Bioconductor package for Disease Ontology Semantic and Enrichment analysis. Bioinformatics 2015, 31(4):608-609.\n\n","date":1469012290,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1469012290,"objectID":"ab22c458e2bcaa2eeae2c153b1876578","permalink":"https://guangchuangyu.github.io/2016/07/leading-edge-analysis/","publishdate":"2016-07-20T18:58:10+08:00","relpermalink":"/2016/07/leading-edge-analysis/","section":"post","summary":"leading edge and core enrichment Leading edge analysis reports Tags to indicate the percentage of genes contributing to the enrichment score, List to indicate where in the list the enrichment score is attained and Signal for enrichment signal strength.\nIt would also be very interesting to get the core enriched genes that contribute to the enrichment.\nNow DOSE, clusterProfiler and ReactomePA all support leading edge analysis and report core enriched genes.\n","tags":["DOSE","clusterProfiler","ReactomePA","GSEA"],"title":"leading edge analysis","type":"post"},{"authors":null,"categories":["R"],"content":"rvcheck::check_bioc(\u0026quot;clusterProfiler\u0026quot;)  Step 2: read the vignettes All Bioconductor packages contains a least one vignette and some of them are in very details. Most of the user questions can be solved if user go through the vignette carefully.\nDon’t post question without reading the document as in the github issue.\n Step 3: ask google I received several emails asking why my Bioconductor package is not available when they try to install it using install.packages().\nIf they google search the package name, they can reach the landing page of the package. Then they will find installation guide of using biocLite().\nUser question may already have an answer posted in Bioconductor support site, Biostars or somewhere. Just google search it before bugging the author.\n Step 4: make a reproducible example If there is indeed an issue exists in latest release and it is not documented in vignette and google can’t answer it, then you need to make a reproducible example for package author to reproduce your issue.\nA question from ggtree user is a good example. For more details, please follow the advice from http://adv-r.had.co.nz/Reproducibility.html or http://stackoverflow.com/questions/5963269/how-to-make-a-great-r-reproducible-example.\nThen post the reproducible example on Bioconductor support site or Biostars tag with package name. Disucssion in public forum is useful since it may help other users.\nAn excerpt from http://lcolladotor.github.io/2017/03/06/How-to-ask-for-help-for-Bioconductor-packages should convince you to post in community website.\n The Bioconductor project is a community project and it benefits from users interacting in public venues. When a user asks a question at the Bioconductor support website, they are providing information that future users might be interested in. That is, the user (U1) is contributing information to the overall documentation around the Bioconductor package they are asking a question about. Ideally, a new user (U2) can then read through the question U1 wrote, check the solution, and move on. This is one of the main reasons why we (developers) want questions to be well documented. There are a couple of quick things that U1 can check that will make their question much more useful to the community.\n  ","date":1467720815,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1467720815,"objectID":"edb82943ef8917c978cae09d44987ff2","permalink":"https://guangchuangyu.github.io/2016/07/how-to-bug-author/","publishdate":"2016-07-05T20:13:35+08:00","relpermalink":"/2016/07/how-to-bug-author/","section":"post","summary":" As an author of several Bioconductor packages. I found many questions from users are quite annoying. Some of them never use google and they are reluctant to read vignettes.\nStep 1: make sure you are using the latest release I found many peoples are using out-of-date packages. When they got an issue of an out-dated package, they never check whether the issue still exists in latest release.\n","tags":["bug"],"title":"How to bug author","type":"post"},{"authors":null,"categories":["R"],"content":"We are happy to announce that ggtree supports interactive tree annotation/manipulation by implementing an identify method. Users can click on a node to highlight a clade, to label or rotate it etc.\nHere is an example of highlighting clades using geom_hilight with identify:\n  \nHere is another example of using emojifont to label clades.\n  \nInteractive tree manipulation, e.g. rotating clades, is also possible.\n  The videos are also available in youku (优酷), see http://v.youku.com/v_show/id_XMTYyMzgyODYyOA, http://v.youku.com/v_show/id_XMTYyNDIzODA0NA and http://v.youku.com/v_show/id_XMTYyMzgyODg2OA.\nCitation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1467095400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1467095400,"objectID":"8dbf2c8435f88ce0b19562ceedddd2d0","permalink":"https://guangchuangyu.github.io/2016/06/identify-method-for-ggtree/","publishdate":"2016-06-28T14:30:00+08:00","relpermalink":"/2016/06/identify-method-for-ggtree/","section":"post","summary":"We are happy to announce that ggtree supports interactive tree annotation/manipulation by implementing an identify method. Users can click on a node to highlight a clade, to label or rotate it etc.\nHere is an example of highlighting clades using geom_hilight with identify:\n ","tags":["ggtree","interactive"],"title":"identify method for ggtree","type":"post"},{"authors":null,"categories":["R"],"content":"Today is my birthday and it happened to be the release day of Bioconductor 3.3. It\u0026rsquo;s again the time to reflect what I\u0026rsquo;ve done in the past year.\n ChIPseeker clusterProfiler DOSE ggtree GOSemSim ReactomePA  ChIPseeker Although ChIPseeker was designed for ChIP-seq annotation, I am very glad to find that someone else use it to annotate other data including copy number variants and DNA breakpoints.\nannotatePeak Several parameters including sameStrand,ignoreOverlap, ignoreUpstream and ignoreDownstream were added in annotatePeak requested by @crazyhottommy for using ChIPseeker to annotate breakpoints from whole genome sequencing data.\nAnother parameter overlap was also introduced. By default overlap=\u0026quot;TSS\u0026quot; and only overlap with TSS will be reported as the nearest gene. If overlap=\u0026quot;all\u0026quot;, then gene overlap with peak will be reported as nearest gene, no matter the overlap is at TSS region or not.\nNow annotatePeak also support using user\u0026rsquo;s customize regions to annotate their data by passing TxDb=user_defined_GRanges.\ngetBioRegion getPromoters() function prepare a GRanges object of promoter regions by user specific upstream and downstream distance from Transcript Start Site (TSS). Then we can align the peaks that are mapping to these regions and visualize the profile or heatmap of ChIP binding to the TSS regions.\nUsers (1 and 2) are interesting in the intensity of peaks binding to the start of intron/exon, and ChIPseeker provides a new function getBioRegion to output GRanges object of Intron/Exon start regions.\nvisualization  upsetplot was implemented to visualize ChIP annotation overlap.\n covplot now support GRangesList.\n  GEO data mining ChIPseeker incorporates GEO database and supports data mining to infer cooperative regulation. The data was updated and now ChIPseeker contains 19348 bed file information.\nclusterProfiler We compare clusterProfiler with GSEA-P (which released by broad institute), the p-values calculated by these two software are almost identical.\nFor comparing biological themes, clusterProfiler supports formula to express complex conditions and facet is supported to visualize complex result.\nread.gmt function for parsing GMT file format from Molecular Signatures Database, so that gene set collections in this database can be used in clusterProfiler for both hypergeometric test and GSEA.\nKEGG Module was supported just like the KEGG Pathway, clusterProfiler will query the online annotation data which keep the annotation data alwasy updated.\nThe KEGG database was updated quite frequently. The KEGG.db which was not updated since 2012, it contains annotation of 5894 human genes. In Feb. 2015, when clusterProfiler first supports querying online KEGG data, KEGG contains annotation of 6861 human genes and today it has 7018 human genes annotated. Most of the tools/webservers used out-dated data (e.g. DAVID not updated since 2010, 5085 human genes annotated by KEGG), the analyzed result may totally changed if we use a recently updated data. Indeed clusterProfiler is more reliable as we always use the latest data.\nIn addition to bitr function that can translate biological ID using OrgDb object, we provides bitr_kegg that uses KEGG API for translating biological ID. It supports more than 4000 species (can be search via the search_kegg_species function) as in KEGG Pathway and Module analyses.\nThe function called of enrichGO and gseGO was changed. Now not only species that have OrgDb available in Bioconductor can be analyzed but also all species that have an OrgDb can be analyzed which can be query online via AnnotationHub or build with user\u0026rsquo;s own data. With this update, enrichGO and gseGO can input any gene ID type if only the ID type was supported in the OrgDb.\nGO enrichment analysis alwasy output redundant terms, we implemented a simplify function to remove redundant terms by calculating GO semantic similarity using GOSemSim. Several useful utilities include dropGO, go2ont, go2term, gofilter and gsfilter are also provided.\nI bump the version to 3.0.0 the following three reasons:\n the changes of function calls can analyze any ontology/pathway annotation (supports user\u0026rsquo;s customize annotation data) can analyze all speices that have annotation available (e.g. more than 4000 species for KEGG)  Although the package is very simple when I published it, I keep update and add new features from my own idea or user\u0026rsquo;s request. Now this package is indeed in good shape. Here is the summary.\nThis package implements methods to analyze and visualize functional profiles of genomic coordinates (supported by ChIPseeker), gene and gene clusters.\nclusterProfiler supports both hypergeometric test and Gene Set Enrichment Analysis for many ontologies/pathways, including:\n Disease Ontology (via DOSE) Network of Cancer Gene (via DOSE) Gene Ontology (supports many species with GO annotation query online via AnnotationHub) KEGG Pathway and Module with latest online data (supports more than 4000 species listed in http://www.genome.jp/kegg/catalog/org_list.html) Reactome Pathway (via ReactomePA) DAVID (via RDAVIDWebService) Molecular Signatures Database  hallmark gene sets positional gene sets curated gene sets motif gene sets computational gene sets GO gene sets oncogenic signatures immunologic signatures  Other Annotations  from other sources (e.g. DisGeNET as an example) user\u0026rsquo;s annotation customized ontology and many others    clusterProfiler also provides several visualization methods to help interpreting enriched results, including:\n barplot cnetplot dotplot enrichMap gseaplot plotGOgraph (via topGO package) upsetplot (via UpSetR package)   and several useful utilities:\n bitr (Biological Id TranslatoR) bitr_kegg (bitr using KEGG source) compareCluster (biological theme comparison) dropGO (screen out GO term of specific level or specific term) go2ont (convert GO ID to Ontology) go2term (convert GO ID to descriptive term) gofilter (restrict result at specific GO level) gsfilter (restrict result by gene set size) search_kegg_organism (search kegg supported organism) setReadable (convert IDs stored enrichResult object to gene symbol) simplify (remove redundant GO terms, supported via GOSemSim)  DOSE DOSE now test bimodal separately in GSEA and the output pvalues are [more conserved]((http://guangchuangyu.github.io/2015/11/comparison-of-clusterprofiler-and-gsea-p/).\nmaxGSSize parameter was added, with default value of 500. Usually if the geneset \u0026gt; 500, its probability of being called significant by GSEA rises quite dramatically.\ngsfilter function for restricting enriched results with minimal and maximal gene set sizes.\nupsetplot was implemented to visualize overlap of enriched gene sets.\nThe dot sizes in enrichMap now scaled by category sizes\nAll these changes also affect clusterProfiler and ReactomePA.\nggtree I put more efforts to extend ggtree than the sum of all other packages. Here listed the major new features while small improvement and bug fixed can be found in the NEWS file.\nIO  supports NHX file format via read.nhx function supports phylip tree format via read.phylip function raxml2nwk for converting raxml bootstrap tree to newick text all parser functions support passing textConnection(text_string) as a file supports ape bootstrap analysis supports annotating tree with ancestral sequences inferred by phangorn supports obkData object defined by OutbreakTools package supports phyloseq object defined by phyloseq package  layers  geom_point2,geom_text2, geom_segment2 and geom_label2 to support subsetting geom_treescale for adding scale of branch length geom_cladelabel for labeling selected clade geom_tiplab2 for adding tiplab of circular tree geom_taxalink for connecting related taxa geom_range for adding range to present uncertainty of branch lengths subview and inset now support annotating with image files  utilities  rescale_tree function to rescale branch lengths using numerical variable MRCA for finding Most Recent Common Ancestor among a vector of tips viewClade to zoom in a selected clade  vignettes Split the long vignette to several small ones and add more examples.\n ggtree Tree Data Import Tree Visualization Tree Annotation Tree Manipulation Advance Tree Annotation  Here is the NEWS record:\nCHANGES IN VERSION 1.3.16 ------------------------ o geom_treescale() supports family argument \u0026lt;2016-04-27, Wed\u0026gt; + https://github.com/GuangchuangYu/ggtree/issues/56 o update fortify.phylo to work with phylo that has missing value of edge length \u0026lt;2016-04-21, Thu\u0026gt; + https://github.com/GuangchuangYu/ggtree/issues/54 o support passing textConnection(text_string) as a file \u0026lt;2016-04-21, Thu\u0026gt; + contributed by Casey Dunn \u0026lt;casey_dunn@brown.edu\u0026gt; + https://github.com/GuangchuangYu/ggtree/pull/55#issuecomment-212859693 CHANGES IN VERSION 1.3.15 ------------------------ o geom_tiplab2 supports parameter hjust \u0026lt;2016-04-18, Mon\u0026gt; o geom_tiplab and geom_tiplab2 support using geom_label2 by passing geom=\u0026quot;label\u0026quot; \u0026lt;2016-04-07, Thu\u0026gt; o geom_label2 that support subsetting \u0026lt;2016-04-07, Thu\u0026gt; o geom_tiplab2 for adding tip label of circular layout \u0026lt;2016-04-06, Wed\u0026gt; o use plot$plot_env to access ggplot2 parameter \u0026lt;2016-04-06, Wed\u0026gt; o geom_taxalink for connecting related taxa \u0026lt;2016-04-01, Fri\u0026gt; o geom_range for adding range of HPD to present uncertainty of evolutionary inference \u0026lt;2016-04-01, Fri\u0026gt; CHANGES IN VERSION 1.3.14 ------------------------ o geom_tiplab works with NA values, compatible with collapse \u0026lt;2016-03-05, Sat\u0026gt; o update theme_tree2 due to the issue of https://github.com/hadley/ggplot2/issues/1567 \u0026lt;2016-03-05, Sat\u0026gt; o offset works in `align=FFALSE` with `annotation_image` function \u0026lt;2016-02-23, Tue\u0026gt; + see https://github.com/GuangchuangYu/ggtree/issues/46 o subview and inset now supports annotating with img files \u0026lt;2016-02-23, Tue\u0026gt; CHANGES IN VERSION 1.3.13 ------------------------ o add example of rescale_tree function in treeAnnotation.Rmd \u0026lt;2016-02-07, Sun\u0026gt; o geom_cladelabel works with collapse \u0026lt;2016-02-07, Sun\u0026gt; + see https://github.com/GuangchuangYu/ggtree/issues/38 CHANGES IN VERSION 1.3.12 ------------------------ o exchange function name of geom_tree and geom_tree2 \u0026lt;2016-01-25, Mon\u0026gt; o solved issues of geom_tree2 \u0026lt;2016-01-25, Mon\u0026gt; + https://github.com/hadley/ggplot2/issues/1512 o colnames_level parameter in gheatmap \u0026lt;2016-01-25, Mon\u0026gt; o raxml2nwk function for converting raxml bootstrap tree to newick format \u0026lt;2016-01-25, Mon\u0026gt; CHANGES IN VERSION 1.3.11 ------------------------ o solved issues of geom_tree2 \u0026lt;2016-01-25, Mon\u0026gt; + https://github.com/GuangchuangYu/ggtree/issues/36 o change compute_group() to compute_panel in geom_tree2() \u0026lt;2016-01-21, Thu\u0026gt; + fixed issue, https://github.com/GuangchuangYu/ggtree/issues/36 o support phyloseq object \u0026lt;2016-01-21, Thu\u0026gt; o update geom_point2, geom_text2 and geom_segment2 to support setup_tree_data \u0026lt;2016-01-21, Thu\u0026gt; o implement geom_tree2 layer that support duplicated node records via the setup_tree_data function \u0026lt;2016-01-21, Thu\u0026gt; o rescale_tree function for rescaling branch length of tree object \u0026lt;2016-01-20, Wed\u0026gt; o upgrade set_branch_length, now branch can be rescaled using feature in extraInfo slot \u0026lt;2016-01-20, Wed\u0026gt; CHANGES IN VERSION 1.3.10 ------------------------ o remove dependency of gridExtra by implementing multiplot function instead of using grid.arrange \u0026lt;2016-01-20, Wed\u0026gt; o remove dependency of colorspace \u0026lt;2016-01-20, Wed\u0026gt; o support phylip tree format and update vignette of phylip example \u0026lt;2016-01-15, Fri\u0026gt; CHANGES IN VERSION 1.3.9 ------------------------ o optimize getYcoord \u0026lt;2016-01-14, Thu\u0026gt; o add 'multiPhylo' example in 'Tree Visualization' vignette \u0026lt;2016-01-13, Wed\u0026gt; o viewClade, scaleClade, collapse, expand, rotate, flip, get_taxa_name and scale_x_ggtree accepts input tree_view=NULL. these function will access the last plot if tree_view=NULL. \u0026lt;2016-01-13, Wed\u0026gt; + \u0026gt; ggtree(rtree(30)); viewClade(node=35) works. no need to pipe. CHANGES IN VERSION 1.3.8 ------------------------ o add example of viewClade in 'Tree Manipulation' vignette \u0026lt;2016-01-13, Wed\u0026gt; o add viewClade function \u0026lt;2016-01-12, Tue\u0026gt; o support obkData object defined by OutbreakTools \u0026lt;2016-01-12, Tue\u0026gt; o update vignettes \u0026lt;2016-01-07, Thu\u0026gt; o 05 advance tree annotation vignette \u0026lt;2016-01-04, Mon\u0026gt; o export theme_inset \u0026lt;2016-01-04, Mon\u0026gt; o inset, nodebar, nodepie functions \u0026lt;2015-12-31, Thu\u0026gt; CHANGES IN VERSION 1.3.7 ------------------------ o split the long vignette to several vignettes + 00 ggtree \u0026lt;2015-12-29, Tue\u0026gt; + 01 tree data import \u0026lt;2015-12-28, Mon\u0026gt; + 02 tree visualization \u0026lt;2015-12-28, Mon\u0026gt; + 03 tree manipulation \u0026lt;2015-12-28, Mon\u0026gt; + 04 tree annotation \u0026lt;2015-12-29, Tue\u0026gt; CHANGES IN VERSION 1.3.6 ------------------------ o MRCA function for finding Most Recent Common Ancestor among a vector of tips \u0026lt;2015-12-22, Tue\u0026gt; o geom_cladelabel: add bar and label to annotate a clade \u0026lt;2015-12-21, Mon\u0026gt; - remove annotation_clade and annotation_clade2 functions. o geom_treescale: tree scale layer. (add_legend was removed) \u0026lt;2015-12-21, Mon\u0026gt; CHANGES IN VERSION 1.3.5 ------------------------ o bug fixed, read.nhx now works with scientific notation \u0026lt;2015-11-30, Mon\u0026gt; + see https://github.com/GuangchuangYu/ggtree/issues/30 CHANGES IN VERSION 1.3.4 ------------------------ o rename beast feature when name conflict with reserve keywords (label, branch, etc) \u0026lt;2015-11-27, Fri\u0026gt; o get_clade_position function \u0026lt;2015-11-26, Thu\u0026gt; + https://github.com/GuangchuangYu/ggtree/issues/28 o get_heatmap_column_position function \u0026lt;2015-11-25, Wed\u0026gt; + see https://github.com/GuangchuangYu/ggtree/issues/26 o support NHX (New Hampshire X) format via read.nhx function \u0026lt;2015-11-17, Tue\u0026gt; o bug fixed in extract.treeinfo.jplace \u0026lt;2015-11-17, Thu\u0026gt; CHANGES IN VERSION 1.3.3 ------------------------ o support color=NULL in gheatmap, then no colored line will draw within the heatmap \u0026lt;2015-10-30, Fri\u0026gt; o add `angle` for also rectangular, so that it will be available for layout='rectangular' following by coord_polar() \u0026lt;2015-10-27, Tue\u0026gt; CHANGES IN VERSION 1.3.2 ------------------------ o update vignette, add example of ape bootstrap and phangorn ancestral sequences \u0026lt;2015-10-26, Mon\u0026gt; o add support of ape bootstrap analysis \u0026lt;2015-10-26, Mon\u0026gt; see https://github.com/GuangchuangYu/ggtree/issues/20 o add support of ancestral sequences inferred by phangorn \u0026lt;2015-10-26, Mon\u0026gt; see https://github.com/GuangchuangYu/ggtree/issues/21 CHANGES IN VERSION 1.3.1 ------------------------ o change angle to angle + 90, so that label will in radial direction \u0026lt;2015-10-22, Thu\u0026gt; + see https://github.com/GuangchuangYu/ggtree/issues/17 o na.rm should be always passed to layer(), fixed it in geom_hilight and geom_text2 \u0026lt;2015-10-21, Wed\u0026gt; + see https://github.com/hadley/ggplot2/issues/1380 o matching beast stats with tree using internal node number instead of label \u0026lt;2015-10-20, Tue\u0026gt;  GOSemSim update IC data using update OrgDb packages.\nReactomePA We published ReactomePA in Molecular BioSystems.\nCitation Yu G, Wang LG and He QY*. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. Bioinformatics 2015, 31(14):2382-2383.\n\nYu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\nG Yu, LG Wang, GR Yan, QY He. DOSE: an R/Bioconductor package for Disease Ontology Semantic and Enrichment analysis. Bioinformatics 2015, 31(4):608-609.\n\nG Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \nYu G†, Li F†, Qin Y, Bo X*, Wu Y and Wang S*. GOSemSim: an R package for measuring semantic similarity among GO terms and gene products. Bioinformatics. 2010, 26(7):976-978.\n \nG Yu, QY He*. ReactomePA: an R/Bioconductor package for reactome pathway analysis and visualization. Molecular BioSystems 2016, 12(2):477-479.\n\n","date":1462450437,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1462450437,"objectID":"1c93a98938e7f1ad40ce8dd1b72982c7","permalink":"https://guangchuangyu.github.io/2016/05/bioc-33-news-of-my-bioc-packages/","publishdate":"2016-05-05T20:13:57+08:00","relpermalink":"/2016/05/bioc-33-news-of-my-bioc-packages/","section":"post","summary":"Today is my birthday and it happened to be the release day of Bioconductor 3.3. It\u0026rsquo;s again the time to reflect what I\u0026rsquo;ve done in the past year.\n ChIPseeker clusterProfiler DOSE ggtree GOSemSim ReactomePA ","tags":["BioC","GOSemSim","clusterProfiler","DOSE","ReactomePA","ggtree","ChIPseeker"],"title":"[Bioc 33] NEWS of my BioC packages","type":"post"},{"authors":null,"categories":["R"],"content":"bitr_kegg clusterProfiler can convert biological IDs using OrgDb object via the bitr function. Now I implemented another function, bitr_kegg for converting IDs through KEGG API.\nlibrary(clusterProfiler) data(gcSample) hg \u0026lt;- gcSample[[1]] head(hg) ## [1] \u0026quot;4597\u0026quot; \u0026quot;7111\u0026quot; \u0026quot;5266\u0026quot; \u0026quot;2175\u0026quot; \u0026quot;755\u0026quot; \u0026quot;23046\u0026quot; eg2np \u0026lt;- bitr_kegg(hg, fromType='kegg', toType='ncbi-proteinid', organism='hsa') ## Warning in bitr_kegg(hg, fromType = \u0026quot;kegg\u0026quot;, toType = \u0026quot;ncbi-proteinid\u0026quot;, ## organism = \u0026quot;hsa\u0026quot;): 3.7% of input gene IDs are fail to map... head(eg2np) ## kegg ncbi-proteinid ## 1 8326 NP_003499 ## 2 58487 NP_001034707 ## 3 139081 NP_619647 ## 4 59272 NP_068576 ## 5 993 NP_001780 ## 6 2676 NP_001487 np2up \u0026lt;- bitr_kegg(eg2np[,2], fromType='ncbi-proteinid', toType='uniprot', organism='hsa') head(np2up) ## ncbi-proteinid uniprot ## 1 NP_005457 O75586 ## 2 NP_005792 P41567 ## 3 NP_005792 Q6IAV3 ## 4 NP_037536 Q13421 ## 5 NP_006054 O60662 ## 6 NP_001092002 O95398  The ID type (both fromType \u0026amp; toType) should be one of \u0026lsquo;kegg\u0026rsquo;, \u0026lsquo;ncbi-geneid\u0026rsquo;, \u0026lsquo;ncbi-proteinid\u0026rsquo; or \u0026lsquo;uniprot\u0026rsquo;. The \u0026lsquo;kegg\u0026rsquo; is the primary ID used in KEGG database. The data source of KEGG was from NCBI. A rule of thumb for the \u0026lsquo;kegg\u0026rsquo; ID is entrezgene ID for eukaryote species and Locus ID for prokaryotes.\nMany prokaryote species don\u0026rsquo;t have entrezgene ID available. For example we can check the gene information of ece:Z5100 in http://www.genome.jp/dbget-bin/www_bget?ece:Z5100, which have NCBI-ProteinID and UnitProt links in the Other DBs Entry, but not NCBI-GeneID.\nIf we try to convert Z5100 to ncbi-geneid, bitr_kegg will throw error of ncbi-geneid is not supported.\nbitr_kegg(\u0026quot;Z5100\u0026quot;, fromType=\u0026quot;kegg\u0026quot;, toType='ncbi-geneid', organism='ece') ## Error in KEGG_convert(fromType, toType, organism) : ## ncbi-geneid is not supported for ece ...  We can of course convert it to ncbi-proteinid and uniprot:\nbitr_kegg(\u0026quot;Z5100\u0026quot;, fromType=\u0026quot;kegg\u0026quot;, toType='ncbi-proteinid', organism='ece') ## kegg ncbi-proteinid ## 1 Z5100 AAG58814 bitr_kegg(\u0026quot;Z5100\u0026quot;, fromType=\u0026quot;kegg\u0026quot;, toType='uniprot', organism='ece') ## kegg uniprot ## 1 Z5100 Q7DB85  search_kegg_organism clusterProfiler supports more than 4k species listed in http://www.genome.jp/kegg/catalog/org_list.html for hypergeometric test (enrichKEGG \u0026amp; enrichMKEGG) and GSEA (gseKEGG \u0026amp; gseMKEGG). We can use bitr_kegg to convert ID for all these 4k species. To facilitate searching scientific name abbreviate used in the organism parameter of these functions, I implemented the search_kegg_organism function. We can search by kegg_code, scientific_name or common_name (which is not available for prokaryotes).\nsearch_kegg_organism('ece', by='kegg_code') ## kegg_code scientific_name common_name ## 334 ece Escherichia coli O157:H7 EDL933 (EHEC) \u0026lt;NA\u0026gt; ecoli \u0026lt;- search_kegg_organism('Escherichia coli', by='scientific_name') dim(ecoli) ## [1] 64 3 head(ecoli) ## kegg_code scientific_name common_name ## 329 eco Escherichia coli K-12 MG1655 \u0026lt;NA\u0026gt; ## 330 ecj Escherichia coli K-12 W3110 \u0026lt;NA\u0026gt; ## 331 ecd Escherichia coli K-12 DH10B \u0026lt;NA\u0026gt; ## 332 ebw Escherichia coli BW2952 \u0026lt;NA\u0026gt; ## 333 ecok Escherichia coli K-12 MDS42 \u0026lt;NA\u0026gt; ## 334 ece Escherichia coli O157:H7 EDL933 (EHEC) \u0026lt;NA\u0026gt;  keyType parameter With the ID conversion utilities built in clusterProfiler, I add a parameter keyType in enrichKEGG, enrichMKEGG, gseKEGG and gseMKEGG. Now we can use ID type that is not the primary ID in KEGG database.\nx \u0026lt;- enrichKEGG(np2up[,2], organism='hsa', keyType='uniprot') head(summary(x)) ## ID Description GeneRatio ## hsa04072 hsa04072 Phospholipase D signaling pathway 11/133 ## hsa04060 hsa04060 Cytokine-cytokine receptor interaction 14/133 ## hsa04390 hsa04390 Hippo signaling pathway 10/133 ## hsa04975 hsa04975 Fat digestion and absorption 5/133 ## hsa05221 hsa05221 Acute myeloid leukemia 6/133 ## BgRatio pvalue p.adjust qvalue ## hsa04072 216/9275 0.0002654190 0.03901659 0.03240905 ## hsa04060 354/9275 0.0005349245 0.03931695 0.03265855 ## hsa04390 213/9275 0.0009536247 0.04199404 0.03488227 ## hsa04975 58/9275 0.0014014886 0.04199404 0.03488227 ## hsa05221 86/9275 0.0014283687 0.04199404 0.03488227 ## geneID ## hsa04072 O95398/Q99777/P49619/Q6FGP0/Q8WVM9/O14807/P41594/A8K5P7/P10145/A0A024RDA5/P16234 ## hsa04060 A0N0N3/O00574/P19876/P01589/P10145/A0A024RDA5/B4DGA4/Q99665/P16234/P78556/Q6I9S7/P42830/P27930/Q9UBN6 ## hsa04390 Q8WW10/A8K141/Q9UI47/P35240/A0A024R1J8/Q659G9/Q9UJU2/P22003/M9VUD0/O00144 ## hsa04975 Q9UNK4/A0A087WZT4/A0A0C4DFX6/Q9UHC9/P04054 ## hsa05221 Q659G9/Q9UJU2/Q03181/A0A024RCW6/Q06455/B2R6I9 ## Count ## hsa04072 11 ## hsa04060 14 ## hsa04390 10 ## hsa04975 5 ## hsa05221 6  setReadable For GO analysis, we have a readable parameter to control whether traslating the IDs to human readable gene name. This parameter is not available for KEGG analysis. But we still have the ability to translate input gene IDs to gene name using setReadable function if and only if corresponding OrgDb object is available.\ny \u0026lt;- setReadable(x, 'org.Hs.eg.db', keytype=\u0026quot;UNIPROT\u0026quot;) head(summary(y)) ## ID Description GeneRatio ## hsa04072 hsa04072 Phospholipase D signaling pathway 11/133 ## hsa04060 hsa04060 Cytokine-cytokine receptor interaction 14/133 ## hsa04390 hsa04390 Hippo signaling pathway 10/133 ## hsa04975 hsa04975 Fat digestion and absorption 5/133 ## hsa05221 hsa05221 Acute myeloid leukemia 6/133 ## BgRatio pvalue p.adjust qvalue ## hsa04072 216/9275 0.0002654190 0.03901659 0.03240905 ## hsa04060 354/9275 0.0005349245 0.03931695 0.03265855 ## hsa04390 213/9275 0.0009536247 0.04199404 0.03488227 ## hsa04975 58/9275 0.0014014886 0.04199404 0.03488227 ## hsa05221 86/9275 0.0014283687 0.04199404 0.03488227 ## geneID ## hsa04072 RAPGEF3/RAPGEF3/DGKG/MRAS/MRAS/MRAS/GRM5/GRM5/CXCL8/CXCL8/PDGFRA ## hsa04060 CXCR6/CXCR6/CXCL3/IL2RA/CXCL8/CXCL8/IL12RB2/IL12RB2/PDGFRA/CCL20/CXCL5/CXCL5/IL1R2/TNFRSF10D ## hsa04390 CTNNA3/CTNNA3/CTNNA3/NF2/NF2/LEF1/LEF1/BMP5/BMP5/FZD9 ## hsa04975 PLA2G2D/PLA2G2D/NPC1L1/NPC1L1/PLA2G1B ## hsa05221 LEF1/LEF1/PPARD/PPARD/RUNX1T1/RUNX1T1 ## Count ## hsa04072 11 ## hsa04060 14 ## hsa04390 10 ## hsa04975 5 ## hsa05221 6  Citation Yu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\n","date":1462266000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1462266000,"objectID":"4417d80c2542296864bd36e4fe41c15e","permalink":"https://guangchuangyu.github.io/2016/05/convert-biological-id-with-kegg-api-using-clusterprofiler/","publishdate":"2016-05-03T17:00:00+08:00","relpermalink":"/2016/05/convert-biological-id-with-kegg-api-using-clusterprofiler/","section":"post","summary":"bitr_kegg clusterProfiler can convert biological IDs using OrgDb object via the bitr function. Now I implemented another function, bitr_kegg for converting IDs through KEGG API.\nlibrary(clusterProfiler) data(gcSample) hg \u0026lt;- gcSample[[1]] head(hg) ## [1] \u0026quot;4597\u0026quot; \u0026quot;7111\u0026quot; \u0026quot;5266\u0026quot; \u0026quot;2175\u0026quot; \u0026quot;755\u0026quot; \u0026quot;23046\u0026quot; eg2np \u0026lt;- bitr_kegg(hg, fromType='kegg', toType='ncbi-proteinid', organism='hsa') ## Warning in bitr_kegg(hg, fromType = \u0026quot;kegg\u0026quot;, toType = \u0026quot;ncbi-proteinid\u0026quot;, ## organism = \u0026quot;hsa\u0026quot;): 3.7% of input gene IDs are fail to map... head(eg2np) ## kegg ncbi-proteinid ## 1 8326 NP_003499 ## 2 58487 NP_001034707 ## 3 139081 NP_619647 ## 4 59272 NP_068576 ## 5 993 NP_001780 ## 6 2676 NP_001487 np2up \u0026lt;- bitr_kegg(eg2np[,2], fromType='ncbi-proteinid', toType='uniprot', organism='hsa') head(np2up) ## ncbi-proteinid uniprot ## 1 NP_005457 O75586 ## 2 NP_005792 P41567 ## 3 NP_005792 Q6IAV3 ## 4 NP_037536 Q13421 ## 5 NP_006054 O60662 ## 6 NP_001092002 O95398  The ID type (both fromType \u0026amp; toType) should be one of \u0026lsquo;kegg\u0026rsquo;, \u0026lsquo;ncbi-geneid\u0026rsquo;, \u0026lsquo;ncbi-proteinid\u0026rsquo; or \u0026lsquo;uniprot\u0026rsquo;. The \u0026lsquo;kegg\u0026rsquo; is the primary ID used in KEGG database. The data source of KEGG was from NCBI. A rule of thumb for the \u0026lsquo;kegg\u0026rsquo; ID is entrezgene ID for eukaryote species and Locus ID for prokaryotes.\n","tags":["clusterProfiler","KEGG"],"title":"convert biological ID with KEGG API using clusterProfiler","type":"post"},{"authors":null,"categories":["R"],"content":" KEGG MODULE is a collection of manually defined functional units, called KEGG modules and identified by the M numbers, used for annotation and biological interpretation of sequenced genomes. There are four types of KEGG modules:\n pathway modules – representing tight functional units in KEGG metabolic pathway maps, such as M00002 (Glycolysis, core module involving three-carbon compounds) structural complexes – often forming molecular machineries, such as M00072 (Oligosaccharyltransferase) functional sets – for other types of essential sets, such as M00360 (Aminoacyl-tRNA synthases, prokaryotes) signature modules – as markers of phenotypes, such as M00363 (EHEC pathogenicity signature, Shiga toxin)   KEGG Modules have a much more straightforwared interpretation in many situations and there was a feature request for implementing an enrichment test from clusterProfiler user. Both hypergeometric test and GSEA of KEGG Module are now supported in clusterProfiler. Just like KEGG Pathway Analysis, clusterProfiler accesses latest online data and supports more than 2000 species listed in http://www.genome.jp/kegg/catalog/org_list.html.\nTo prevent confusing new users who may not fammiliar with KEGG, I created two new functions, enrichMKEGG and gseMKEGG for enrichment test of KEGG Module and keep the original functions, enrichKEGG and gseKEGG for KEGG pathway analysis only.\nlibrary(clusterProfiler) data(geneList) de \u0026lt;- names(geneList)[1:100] xx \u0026lt;- enrichMKEGG(de, organism='hsa', minGSSize=1) head(summary(xx)) ## ID ## M00693 M00693 ## M00286 M00286 ## M00067 M00067 ## M00691 M00691 ## Description ## M00693 Cell cycle - G2/M transition ## M00286 GINS complex ## M00067 Sulfoglycolipids biosynthesis, ceramide/1-alkyl-2-acylglycerol =\u0026gt; sulfatide/seminolipid ## M00691 DNA damage-induced cell cycle checkpoints ## GeneRatio BgRatio pvalue p.adjust qvalue ## M00693 3/8 10/1528 0.0000111304 5.565199e-05 1.171621e-05 ## M00286 2/8 4/1528 0.0001432508 3.581269e-04 7.539514e-05 ## M00067 1/8 2/1528 0.0104472034 1.741201e-02 3.665685e-03 ## M00691 1/8 7/1528 0.0361484900 4.518561e-02 9.512761e-03 ## geneID Count ## M00693 9133/890/983 3 ## M00286 9837/51659 2 ## M00067 7368 1 ## M00691 1111 1 yy \u0026lt;- gseMKEGG(geneList) ## [1] \u0026quot;calculating observed enrichment scores...\u0026quot; ## [1] \u0026quot;calculating permutation scores...\u0026quot; ## [1] \u0026quot;calculating p values...\u0026quot; ## [1] \u0026quot;done...\u0026quot; head(summary(yy)) ## ID Description setSize enrichmentScore ## M00337 M00337 Immunoproteasome 15 0.7583644 ## M00340 M00340 Proteasome, 20S core particle 13 0.7935026 ## M00354 M00354 Spliceosome, U4/U6.U5 tri-snRNP 29 0.6053503 ## NES pvalue p.adjust qvalues ## M00337 2.063359 0.002298851 0.03675214 0.02968961 ## M00340 2.047060 0.002409639 0.03675214 0.02968961 ## M00354 1.913834 0.002564103 0.03675214 0.02968961  Please refer to vignette for more details.\nCitation Yu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\n","date":1460551695,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1460551695,"objectID":"34c0d6b49c19642cf82af5dcaacd80c3","permalink":"https://guangchuangyu.github.io/2016/04/kegg-module-enrichment-analysis/","publishdate":"2016-04-13T20:48:15+08:00","relpermalink":"/2016/04/kegg-module-enrichment-analysis/","section":"post","summary":" KEGG MODULE is a collection of manually defined functional units, called KEGG modules and identified by the M numbers, used for annotation and biological interpretation of sequenced genomes. There are four types of KEGG modules:\n pathway modules – representing tight functional units in KEGG metabolic pathway maps, such as M00002 (Glycolysis, core module involving three-carbon compounds) structural complexes – often forming molecular machineries, such as M00072 (Oligosaccharyltransferase) functional sets – for other types of essential sets, such as M00360 (Aminoacyl-tRNA synthases, prokaryotes) signature modules – as markers of phenotypes, such as M00363 (EHEC pathogenicity signature, Shiga toxin)  ","tags":["clusterProfiler","KEGG"],"title":"KEGG Module Enrichment Analysis","type":"post"},{"authors":null,"categories":["Biology","Software"],"content":"\nTo my knowledge, BioEdit is the most comprehensive biological sequence alignment editor. Most of my labmates run this software using Parallels Desktop. For some of them, BioEdit is the only reason to install Parallels Desktop.\nI need to edit my alignment recently, and install it in my iMac using Wine, which is a compatibility layer for running Windows applications on POSIX-compliant OS. Although it is famous in Linux community for many years, many OSX users never heard of it.\nI came out with an idea that maybe I can pack all the components into an OSX application bundle. Then I can share it with my labmates and others. I don\u0026rsquo;t need to teach them how to install and config Wine and they can just drag the App to /Applications and double click to run it.\nIt took me one night to create this App. You can click here to download it.\nAs usual, you can install it by dragging the App to Applications folder and open it by double click. It works just like native App.\nBTW: If you don\u0026rsquo;t have XQuartz installed, you need one for running BioEdit.\n","date":1459316422,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1459316422,"objectID":"42f717975cccc1b09583e280c169a879","permalink":"https://guangchuangyu.github.io/2016/03/yet-an-unofficial-bioedit-for-osx/","publishdate":"2016-03-30T13:40:22+08:00","relpermalink":"/2016/03/yet-an-unofficial-bioedit-for-osx/","section":"post","summary":"\nTo my knowledge, BioEdit is the most comprehensive biological sequence alignment editor. Most of my labmates run this software using Parallels Desktop. For some of them, BioEdit is the only reason to install Parallels Desktop.\nI need to edit my alignment recently, and install it in my iMac using Wine, which is a compatibility layer for running Windows applications on POSIX-compliant OS. Although it is famous in Linux community for many years, many OSX users never heard of it.\n","tags":["BioEdit","alignment","OSX"],"title":"yet an unofficial BioEdit for OSX","type":"post"},{"authors":null,"categories":["R","Visualization"],"content":"I extended the subview function to support embed image file in a ggplot object.\nset.seed(123) d = data.frame(x=rnorm(10), y=rnorm(10)) imgfile \u0026lt;- tempfile(, fileext=\u0026quot;.png\u0026quot;) download.file(\u0026quot;https://avatars1.githubusercontent.com/u/626539?v=3\u0026amp;u=e731426406dd3f45a73d96dd604bc45ae2e7c36f\u0026amp;s=140\u0026quot;, destfile=imgfile, mode='wb') p = ggplot(d, aes(x, y)) subview(p, imgfile, x=d$x[1], y=d$y[1]) + geom_point(size=5)  In previous post, I have introduced using annotation_image function for annotating tips with local images.\nNow with the updated subview function, we can use inset function to annotate nodes/tips with image files and/or subplots.\nset.seed(2015-12-31) tr \u0026lt;- rtree(15) p \u0026lt;- ggtree(tr) img \u0026lt;- list(imgfile, imgfile) names(img) \u0026lt;- c(\u0026quot;18\u0026quot;, \u0026quot;22\u0026quot;) inset(p, img)  PS: As I got more and more emails from ggtree users, I created a forum, https://groups.google.com/forum/#!forum/bioc-ggtree. With this forum, ggtree users can help each others and also solutions posted in the forum can help other peoples when they google search their questions. Please join the forum and post your questions if you have any.\nCitation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1458442200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1458442200,"objectID":"7e65b8d7692f64166f233ef02b99676c","permalink":"https://guangchuangyu.github.io/2016/03/embed-images-in-ggplot2-via-subview-and-annotate-a-phylogenetic-tree-with-images-using-inset-function/","publishdate":"2016-03-20T10:50:00+08:00","relpermalink":"/2016/03/embed-images-in-ggplot2-via-subview-and-annotate-a-phylogenetic-tree-with-images-using-inset-function/","section":"post","summary":"I extended the subview function to support embed image file in a ggplot object.\nset.seed(123) d = data.frame(x=rnorm(10), y=rnorm(10)) imgfile \u0026lt;- tempfile(, fileext=\u0026quot;.png\u0026quot;) download.file(\u0026quot;https://avatars1.githubusercontent.com/u/626539?v=3\u0026amp;u=e731426406dd3f45a73d96dd604bc45ae2e7c36f\u0026amp;s=140\u0026quot;, destfile=imgfile, mode='wb') p = ggplot(d, aes(x, y)) subview(p, imgfile, x=d$x[1], y=d$y[1]) + geom_point(size=5) ","tags":["ggtree","ggplot2"],"title":"embed images in ggplot2 via subview and annotate a phylogenetic tree with images using inset function","type":"post"},{"authors":null,"categories":["R","Visualization"],"content":"\nemojifont is available in CRAN, you can use the following command to install it.\ninstall.packages(\u0026quot;emojifont\u0026quot;)  An example of using emoji font in R plot is showed below:\nMore examples can be found in the post and online vignette.\nI found FontAwesome is quite interesting especially in technical world. In emojifont (version \u0026gt;= 0.3), I have packed the Font Awesome. So that we can use this fancy font in both base and ggplot2 graphics.\nload.fontawesome() set.seed(2016-03-09) fa \u0026lt;- fontawesome(c('fa-github', 'fa-weibo', 'fa-twitter', 'fa-android', 'fa-coffee')) d \u0026lt;- data.frame(x=rnorm(20), y=rnorm(20), label=sample(fa, 20, replace=T)) ggplot(d, aes(x, y, color=label)) + geom_text(aes(label=label), family='fontawesome-webfont')+ xlab(NULL)+ylab(NULL)  Have fun with emojifont.\n@drob and @guangchuangyu, this is data surfing (air quality data from Lima, Peru) / fun with your cool pkgs. Thx! pic.twitter.com/ikinjxDDZL\n\u0026mdash; Maëlle Salmon 🐟 (@ma_salmon) March 6, 2016 ","date":1457943671,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1457943671,"objectID":"f4d170f37f80dfeea774fb638b77e0b7","permalink":"https://guangchuangyu.github.io/2016/03/font-awesome-supported-in-emojifont/","publishdate":"2016-03-14T16:21:11+08:00","relpermalink":"/2016/03/font-awesome-supported-in-emojifont/","section":"post","summary":"\nemojifont is available in CRAN, you can use the following command to install it.\ninstall.packages(\u0026quot;emojifont\u0026quot;)  An example of using emoji font in R plot is showed below:\n","tags":["ggplot2","emoji","emojifont"],"title":"Font Awesome supported in emojifont","type":"post"},{"authors":null,"categories":["R","Visualization"],"content":"To answer the issue, I extend the covplot function to support viewing coverage of a list of GRanges objects or bed files.\nlibrary(ChIPseeker) files \u0026lt;- getSampleFiles() peak=GenomicRanges::GRangesList(CBX6=readPeakFile(files[[4]]), CBX7=readPeakFile(files[[5]])) p \u0026lt;- covplot(peak) print(p)  By default, The coverage plots are merged together with different colors. Users can separate them to different panels using facet_grid.\nlibrary(ggplot2) col \u0026lt;- c(CBX6='red', CBX7='green') p + facet_grid(chr ~ .id) + scale_color_manual(values=col) + scale_fill_manual(values=col)  Citation Yu G, Wang LG and He QY*. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. Bioinformatics 2015, 31(14):2382-2383.\n\n","date":1456717508,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1456717508,"objectID":"c4087519aceab5cb7a71d2d616aa5087","permalink":"https://guangchuangyu.github.io/2016/02/covplot-supports-grangeslist/","publishdate":"2016-02-29T11:45:08+08:00","relpermalink":"/2016/02/covplot-supports-grangeslist/","section":"post","summary":"To answer the issue, I extend the covplot function to support viewing coverage of a list of GRanges objects or bed files.\nlibrary(ChIPseeker) files \u0026lt;- getSampleFiles() peak=GenomicRanges::GRangesList(CBX6=readPeakFile(files[[4]]), CBX7=readPeakFile(files[[5]])) p \u0026lt;- covplot(peak) print(p) ","tags":["ChIPseeker"],"title":"covplot supports GRangesList","type":"post"},{"authors":null,"categories":["R"],"content":"Treespace visualization of a heuristic best tree search in #R package #ggtree #phylogenetics pic.twitter.com/hnSJpIABql\n\u0026mdash; Alex Damián (@antropoteuthis) January 29, 2016 @guangchuangyu Updated to latest #ggtree and #ggplot2 and very impressed! Any ideas on using geom_label with tip labels to add box/fill?\n\u0026mdash; Jo Williams-Newkirk (@ajwnewkirk) January 25, 2016 ggtree looks really good! #rstatshttps://t.co/7rtexYV3I5\n\u0026mdash; Paul Staab (@paulstaab) January 15, 2016 If you’re not using ggtree by @guangchuangyu for your trees in R then you should be! #rstats #bioinformaticshttps://t.co/Z8HdLeyiIg\n\u0026mdash; Matt Workentine (@mworkentine) January 5, 2016 @guangchuangyu #ggtree has actually changed my life! it is #awesome! #RePlottingEveryTreeFigureEver #ggplot2\n\u0026mdash; Peter Cowman (@pete_cowman) November 13, 2015 I continue to be amazed by the speed and quality of support @guangchuangyu provides for #ggtree #rstats\n\u0026mdash; Jo Williams-Newkirk (@ajwnewkirk) November 10, 2015 @tylerrinker really appreciate all of @guangchuangyu efforts with #ggtree; extends well beyond its original intent; love it\n\u0026mdash; klr (@timelyportfolio) September 3, 2015 @guangchuangyu I even used #ggtree!\n\u0026mdash; Simon Frost (@sdwfrost) December 1, 2015 @minisciencegirl Yep we use it mainly for that... there\u0026#39;s a more featured version in https://t.co/5oOeLwx2Hg but I need to switch to ggtree!\n\u0026mdash; Kat Holt (@DrKatHolt) November 19, 2015 Sent my first #rstats #shiny app off to be alpha tested by a colleague today. Wouldn\u0026#39;t be possible without #ggtree.\n\u0026mdash; Jo Williams-Newkirk (@ajwnewkirk) October 31, 2015 @genetics_blog Thanks. We have turned this into a shiny app too, but need to iron out some bugs... Also, try the new ggtree library!\n\u0026mdash; Kat Holt (@DrKatHolt) September 8, 2015 @guangchuangyu My bad :( It\u0026#39;s working perfectly fine. Thanks so much for an awesome #rstats #ggplot2 package ggtree! pic.twitter.com/ofmzyOWe9C\n\u0026mdash; Ahmed Moustafa (@AhmedMoustafa) January 26, 2015 @guangchuangyu A bit improved version :) pic.twitter.com/TZTSBK5aSm\n\u0026mdash; Ahmed Moustafa (@AhmedMoustafa) January 26, 2015 I wish this guy was my student! @guangchuangyu Sure, it won\u0026#39;t get a Nature or Science paper, but who cares? http://t.co/XnA7uaFVms\n\u0026mdash; Simon Frost (@sdwfrost) January 31, 2015 @CieraReports ggtree is a cool package that is based on the drawing of ggplot2 https://t.co/gFPHSdGAj1\n\u0026mdash; ホクソうり (@u_ribo) January 26, 2015 #ggtree https://t.co/VFrKCcz0DI is a pretty powerful #rstats #ggplot2 @Bioconductor pkg for neat #phylogenetic #dataviz by @guangchuangyu\n\u0026mdash; Ahmed Moustafa (@AhmedMoustafa) January 30, 2015 ggtree extends ggplot2 for phylogenetic trees. tons of documentation+examples: https://t.co/y9V52s2yWd #Rstats pic.twitter.com/Z9SDcueR2c\n\u0026mdash; Stephen Turner (@genetics_blog) November 10, 2015 Need to visualize some trees? Recent #R package #ggtree looks quite interesting. \u0026#10;https://t.co/EPaXIqmvDZ\n\u0026mdash; Sebastian Schmidt (@TSBSchm) November 11, 2015 @flashton2003 world of possibilities now! Also looking at ggtree (ggplot2 expansion) for future stuff - that looks really cool too\n\u0026mdash; David W. Cleary (@Bacterioskeptic) November 20, 2015 time for you to learn #rstats @LAevolving \u0026lt;- @StephSpiel new #Rstats package ggtree @ggplot2 https://t.co/DFmKGyTVwE pic.twitter.com/WRBZHlRsIa\n\u0026mdash; Salamanda (@ajzellmer) November 10, 2015 V. cool new #Rstats package ggtree, addon 2 @ggplot2, for automating tree drawing/annotating https://t.co/k3eSdVKp9C pic.twitter.com/nH8SKSaXaN\n\u0026mdash; Stephanie Spielman (@StephSpiel) November 9, 2015 Can’t wait to try. MT @genetics_blog: ggtree extends ggplot2 for phylogenetic trees: https://t.co/JuThXlHUjz #Rstats pic.twitter.com/OmAzGghvqB\n\u0026mdash; Kent Holsinger (@keholsinger) November 19, 2015 @guangchuangyu Excited to discover #ggtree; fills a lot of holes in my workflow but not seeing how to add bootstrap from ape?\n\u0026mdash; Jo Williams-Newkirk (@ajwnewkirk) September 6, 2015 ggtree added cool features, My favorite is the one from BEAST output https://t.co/3WOLxfTzRp\n\u0026mdash; Manvendra Singh (@manvendr7) November 11, 2015 ggtree looks useful: nice viz and annotations of phylogenetic trees with ggplot #rstats http://t.co/lbNKw3qIDI thanks @guangchuangyu\n\u0026mdash; Julia Gustavsen (@JuliaGustavsen) August 9, 2015 ggtree - looks like a very useful phylogenetic tree plotting package for R based on ggplot2 (https://t.co/UCXVVmG5W7)\n\u0026mdash; Simon J Greenhill (@SimonJGreenhill) December 23, 2014 Plot trees \u0026amp; annotation (incl BEAST, time axis) with ggtree for R!\u0026#10;http://t.co/9ahqKQLTaI\u0026#10;Well spotted @mackas21 pic.twitter.com/2ldvAiH2fj\n\u0026mdash; Kat Holt (@DrKatHolt) June 15, 2015 geom_label can be used to add label and also additional information coded in background color. #ggplot #ggtree pic.twitter.com/pGvrsmsOc1\n\u0026mdash; Guangchuang Yu (@guangchuangyu) September 11, 2015 view 100 boostrap trees in 2 lines. pic.twitter.com/FKNyP5dZsb\n\u0026mdash; Guangchuang Yu (@guangchuangyu) September 1, 2015 multiple sequence alignment with #phylogenetic tree via #rstats pkg #ggtree. pic.twitter.com/6CY57dLdeb\n\u0026mdash; Guangchuang Yu (@guangchuangyu) May 22, 2015  Citation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1456197000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1456197000,"objectID":"b4f5b5f1b0f918cc0df5d57ac3834cfa","permalink":"https://guangchuangyu.github.io/2016/02/tweets-of-ggtree/","publishdate":"2016-02-23T11:10:00+08:00","relpermalink":"/2016/02/tweets-of-ggtree/","section":"post","summary":"Treespace visualization of a heuristic best tree search in #R package #ggtree #phylogenetics pic.twitter.com/hnSJpIABql\n\u0026mdash; Alex Damián (@antropoteuthis) January 29, 2016 @guangchuangyu Updated to latest #ggtree and #ggplot2 and very impressed! Any ideas on using geom_label with tip labels to add box/fill?\n\u0026mdash; Jo Williams-Newkirk (@ajwnewkirk) January 25, 2016 ggtree looks really good! #rstatshttps://t.co/7rtexYV3I5\n\u0026mdash; Paul Staab (@paulstaab) January 15, 2016","tags":["ggtree","twitter"],"title":"tweets of ggtree","type":"post"},{"authors":null,"categories":["Publication","R","Bioinformatics"],"content":"My R/Bioconductor package, ReactomePA, published in Molecular BioSystems.\nReactomePA: an R/Bioconductor package for reactome pathway analysis and visualization\nG Yu, QY He. Molecular BioSystems 2016, 12:477-479\nReceived: 05 Oct 2015 Accepted: 20 Nov 2015 Online: 23 Nov 2015\nDOI: 10.1039/C5MB00663E\nReactome is a manually curated pathway annotation database for unveiling high-order biological pathways from high-throughput data. ReactomePA is an R/Bioconductor package providing enrichment analyses, including hypergeometric test and gene set enrichment analyses. A functional analysis can be applied to the genomic coordination obtained from a sequencing experiment to analyze the functional significance of genomic loci including cis-regulatory elements and non-coding regions. Comparison among different experiments is also supported. Moreover, ReactomePA provides several visualization functions to produce highly customizable, publication-quality figures. The source code and documents of ReactomePA are freely available through Bioconductor (http://www.bioconductor.org/packages/ReactomePA).\n","date":1455599421,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1455599421,"objectID":"50e0698d3e3b4807b4a2975e7aef9095","permalink":"https://guangchuangyu.github.io/2016/02/reactomepa-an-r/bioconductor-package-for-reactome-pathway-analysis-and-visualization/","publishdate":"2016-02-16T13:10:21+08:00","relpermalink":"/2016/02/reactomepa-an-r/bioconductor-package-for-reactome-pathway-analysis-and-visualization/","section":"post","summary":"My R/Bioconductor package, ReactomePA, published in Molecular BioSystems.\nReactomePA: an R/Bioconductor package for reactome pathway analysis and visualization\nG Yu, QY He. Molecular BioSystems 2016, 12:477-479\nReceived: 05 Oct 2015 Accepted: 20 Nov 2015 Online: 23 Nov 2015\nDOI: 10.1039/C5MB00663E\n","tags":["ReactomePA"],"title":"ReactomePA: an R/Bioconductor package for reactome pathway analysis and visualization","type":"post"},{"authors":["**G Yu**","F Li†","QY He*"],"categories":null,"content":"","date":1453766400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1453766400,"objectID":"f14094b6c7a2e255d974c9c4e427a012","permalink":"https://guangchuangyu.github.io/publication/reactomepa/","publishdate":"2016-01-26T00:00:00Z","relpermalink":"/publication/reactomepa/","section":"publication","summary":"Reactome is a manually curated pathway annotation database for unveiling high-order biological pathways from high-throughput data. ReactomePA is an R/Bioconductor package providing enrichment analyses, including hypergeometric test and gene set enrichment analyses. A functional analysis can be applied to the genomic coordination obtained from a sequencing experiment to analyze the functional significance of genomic loci including cis-regulatory elements and non-coding regions. Comparison among different experiments is also supported. Moreover, ReactomePA provides several visualization functions to produce highly customizable, publication-quality figures. The source code and documents of ReactomePA are freely available through Bioconductor (http://www.bioconductor.org/packages/ReactomePA)","tags":null,"title":"ReactomePA: an R/Bioconductor package for reactome pathway analysis and visualization","type":"publication"},{"authors":null,"categories":["R"],"content":"Phylip is also a widely used tree format, which contains taxa sequences with Newick tree text.\nIn ggtree, we can use read.phylip() function to parse the file and use ggtree() to visualize the tree.\nlibrary(ggtree) phyfile \u0026lt;- system.file(\u0026ldquo;extdata\u0026rdquo;, \u0026ldquo;sample.phy\u0026rdquo;, package=\u0026ldquo;ggtree\u0026rdquo;) phylip \u0026lt;- read.phylip(phyfile) phylip\n## 'phylip' S4 object that stored information of ## '/Users/guangchuangyu/Library/R/3.2/library/ggtree/extdata/sample.phy'. ## ## ...@ tree: ## Phylogenetic tree with 15 tips and 13 internal nodes. ## ## Tip labels: ## K, N, D, L, J, G, ... ## ## Unrooted; no branch lengths. ## ## with sequence alignment available (15 sequences of length 2148) ggtree(phylip) + geom_tiplab()  User can view the sequence alignment with the tree via msaplot() function.\nmsaplot(phylip, offset=1)  Citation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1452835140,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1452835140,"objectID":"c1a75ebcb7d9fc61df8e2241675c56a9","permalink":"https://guangchuangyu.github.io/2016/01/ggtree-supports-phylip-tree-format/","publishdate":"2016-01-15T13:19:00+08:00","relpermalink":"/2016/01/ggtree-supports-phylip-tree-format/","section":"post","summary":"Phylip is also a widely used tree format, which contains taxa sequences with Newick tree text.\nIn ggtree, we can use read.phylip() function to parse the file and use ggtree() to visualize the tree.\n","tags":["ggtree"],"title":"ggtree supports phylip tree format","type":"post"},{"authors":null,"categories":["R"],"content":"This is a question from ggtree user. In ape and phytools, it\u0026rsquo;s easy to label edge using the edgelabels function.\nset.seed(1) tr = rtree(30) library(ape) plot(tr, main=\u0026quot;ape\u0026quot;) edgelabels()  I don\u0026rsquo;t see any necessity to label edge numbers, as they are meaningless. The number is labeled as the row index of tr$edge, and edge can be uniquely mapped to child node. If we need to relate something to edge, we can relate them to corresponding child node. Node is a central hub in tree annotation in ggtree.\nTo label edge number, we can also attach the edge number to node and then label them as a node attribute.\nlibrary(ggtree) p = ggtree(tr, ladderize=F) + geom_tiplab() + ggtitle(\u0026quot;ggtree\u0026quot;) edge=data.frame(tr$edge, edge_num=1:nrow(tr$edge)) colnames(edge)=c(\u0026quot;parent\u0026quot;, \u0026quot;node\u0026quot;, \u0026quot;edge_num\u0026quot;) p %\u0026lt;+% edge + geom_label(aes(x=branch, label=edge_num))  Citation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1452654000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1452654000,"objectID":"536ea2a0bfadeaa944b766d38435748a","permalink":"https://guangchuangyu.github.io/2016/01/label-edge-number-in-ggtree/","publishdate":"2016-01-13T11:00:00+08:00","relpermalink":"/2016/01/label-edge-number-in-ggtree/","section":"post","summary":"This is a question from ggtree user. In ape and phytools, it\u0026rsquo;s easy to label edge using the edgelabels function.\nset.seed(1) tr = rtree(30) library(ape) plot(tr, main=\u0026quot;ape\u0026quot;) edgelabels() ","tags":["ggtree"],"title":"label edge number in ggtree","type":"post"},{"authors":null,"categories":["R"],"content":"ggtree implemented a function, subview, that can add subplots on a ggplot2 object. It had successful applied to plot pie graphs on map.\nset.seed(2016-01-04) tr \u0026lt;- rtree(30) tr \u0026lt;- groupClade(tr, node=45) p \u0026lt;- ggtree(tr, aes(color=group)) + geom_tippoint() cpos \u0026lt;- get_clade_position(p, node=45) p1 \u0026lt;- p + geom_hilight(node=45) p2 \u0026lt;- with(cpos, p+xlim(xmin, xmax*1.01)+ylim(ymin, ymax)) with(cpos, subview(p2+geom_tiplab(), p1+theme_transparent(), x=xmin+(xmax-xmin)*.15, y=ymin+(ymax-ymin)*.85))  To make it more easy to use subview function for annotating taxa with subplots, ggtree provides a function, inset, for adding subplots to a phylogenetic tree. The input is a tree graphic object and a named list of ggplot graphic objects (can be any kind of charts), these objects should named by node numbers. To facilitate adding bar and pie charts (e.g. summarized stats of results from ancestral reconstruction) to phylogenetic tree, ggtree provides nodepie and nodebar functions to create a list of pie or bar charts.\nAnnotate with bar charts set.seed(2015-12-31) tr \u0026lt;- rtree(15) p \u0026lt;- ggtree(tr) a \u0026lt;- runif(14, 0, 0.33) b \u0026lt;- runif(14, 0, 0.33) c \u0026lt;- runif(14, 0, 0.33) d \u0026lt;- 1 - a - b - c dat \u0026lt;- data.frame(a=a, b=b, c=c, d=d) ## input data should have a column of `node` that store the node number dat$node \u0026lt;- 15+1:14 ## cols parameter indicate which columns store stats (a, b, c and d in this example) bars \u0026lt;- nodebar(dat, cols=1:4) inset(p, bars)  The sizes of the insets can be ajusted by the paramter width and height.\ninset(p, bars, width=.03, height=.06)  Users can set the color via the parameter color. The x position can be one of \u0026lsquo;node\u0026rsquo; or \u0026lsquo;branch\u0026rsquo; and can be adjusted by the parameter hjust and vjust for horizontal and vertical adjustment respecitvely.\nbars2 \u0026lt;- nodebar(dat, cols=1:4, position='dodge', color=c(a='blue', b='red', c='green', d='cyan')) p2 \u0026lt;- inset(p, bars2, x='branch', width=.03, vjust=-.3) print(p2)  Annotate with pie charts Similarly, users can use nodepie function to generate a list of pie charts and place these charts to annotate corresponding nodes. Both nodebar and nodepie accepts parameter alpha to allow transparency.\npies \u0026lt;- nodepie(dat, cols=1:4, alpha=.6) inset(p, pies)  inset(p, pies, hjust=-.06)  Annotate with other types of charts The inset function accepts a list of ggplot graphic objects and these input objects are not restricted to pie or bar charts. They can be any kinds of charts and hybrid of these charts.\npies_and_bars \u0026lt;- bars2 pies_and_bars[9:14] \u0026lt;- pies[9:14] inset(p, pies_and_bars)  d \u0026lt;- lapply(1:15, rnorm, n=100) ylim \u0026lt;- range(unlist(d)) bx \u0026lt;- lapply(d, function(y) { dd \u0026lt;- data.frame(y=y) ggplot(dd, aes(x=1, y=y))+geom_boxplot() + ylim(ylim) + theme_inset() }) names(bx) \u0026lt;- 1:15 inset(p, bx, width=.03, height=.1, hjust=-.05)  After annotating with insets, users can further annotate the tree with another layer of insets.\np2 \u0026lt;- inset(p, bars2, x='branch', width=.03, vjust=-.4) p2 \u0026lt;- inset(p2, pies, x='branch', vjust=.4) bx2 \u0026lt;- lapply(bx, function(g) g+coord_flip()) inset(p2, bx2, width=.2, height=.03, vjust=.04, hjust=p2$data$x[1:15]-4) + xlim(NA, 4.5)  Citation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1452512160,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1452512160,"objectID":"72bd6ccae715315379f7123d8c7e50c3","permalink":"https://guangchuangyu.github.io/2016/01/annotate-a-phylogenetic-tree-with-insets/","publishdate":"2016-01-11T19:36:00+08:00","relpermalink":"/2016/01/annotate-a-phylogenetic-tree-with-insets/","section":"post","summary":"ggtree implemented a function, subview, that can add subplots on a ggplot2 object. It had successful applied to plot pie graphs on map.\nset.seed(2016-01-04) tr \u0026lt;- rtree(30) tr \u0026lt;- groupClade(tr, node=45) p \u0026lt;- ggtree(tr, aes(color=group)) + geom_tippoint() cpos \u0026lt;- get_clade_position(p, node=45) p1 \u0026lt;- p + geom_hilight(node=45) p2 \u0026lt;- with(cpos, p+xlim(xmin, xmax*1.01)+ylim(ymin, ymax)) with(cpos, subview(p2+geom_tiplab(), p1+theme_transparent(), x=xmin+(xmax-xmin)*.15, y=ymin+(ymax-ymin)*.85)) ","tags":["ggtree"],"title":"Annotate a phylogenetic tree with insets","type":"post"},{"authors":null,"categories":["R"],"content":"clusterProfiler supports over-representation test and gene set enrichment analysis of Gene Ontology. It supports GO annotation from OrgDb object, GMT file and user\u0026rsquo;s own data.\nsupport many species In github version of clusterProfiler, enrichGO and gseGO functions removed the parameter organism and add another parameter OrgDb, so that any species that have OrgDb object available can be analyzed in clusterProfiler. Bioconductor have already provide OrgDb for about 20 species, see http://bioconductor.org/packages/release/BiocViews.html#___OrgDb, and users can build OrgDb via AnnotationHub.\nlibrary(AnnotationHub) hub \u0026lt;- AnnotationHub()\n## snapshotDate(): 2015-12-29 query(hub, \u0026quot;Cricetulus\u0026quot;) ## AnnotationHub with 4 records ## # snapshotDate(): 2015-12-29 ## # $dataprovider: UCSC, Inparanoid8, ftp://ftp.ncbi.nlm.nih.gov/gene/DATA/ ## # $species: Cricetulus griseus ## # $rdataclass: ChainFile, Inparanoid8Db, OrgDb, TwoBitFile ## # additional mcols(): taxonomyid, genome, description, tags, ## # sourceurl, sourcetype ## # retrieve records with, e.g., 'object[[\u0026quot;AH10393\u0026quot;]]' ## ## title ## AH10393 | hom.Cricetulus_griseus.inp8.sqlite ## AH13980 | criGri1.2bit ## AH14346 | criGri1ToHg19.over.chain.gz ## AH48061 | org.Cricetulus_griseus.eg.sqlite Cgriseus \u0026lt;- hub[[\u0026quot;AH48061\u0026quot;]] ## loading from cache '/Users/guangchuangyu/.AnnotationHub/54367' Cgriseus ## OrgDb object: ## | DBSCHEMAVERSION: 2.1 ## | DBSCHEMA: NOSCHEMA_DB ## | ORGANISM: Cricetulus griseus ## | SPECIES: Cricetulus griseus ## | CENTRALID: GID ## | Taxonomy ID: 10029 ## | Db type: OrgDb ## | Supporting package: AnnotationDbi ## ## Please see: help('select') for usage information sample_gene \u0026lt;- sample(keys(Cgriseus), 100) str(sample_gene) ## chr [1:100] \u0026quot;100762355\u0026quot; \u0026quot;100757285\u0026quot; \u0026quot;100773870\u0026quot; \u0026quot;100766902\u0026quot; ... library(clusterProfiler) sample_test \u0026lt;- enrichGO(sample_gene, OrgDb=Cgriseus, pvalueCutoff=1, qvalueCutoff=1) head(summary(sample_test)) ## ID Description ## GO:0004983 GO:0004983 neuropeptide Y receptor activity ## GO:0005254 GO:0005254 chloride channel activity ## GO:0005496 GO:0005496 steroid binding ## GO:0005253 GO:0005253 anion channel activity ## GO:0015108 GO:0015108 chloride transmembrane transporter activity ## GO:0019887 GO:0019887 protein kinase regulator activity ## GeneRatio BgRatio pvalue p.adjust qvalue geneID ## GO:0004983 1/20 6/3946 0.03004660 0.6187407 0.6138746 100773047 ## GO:0005254 1/20 6/3946 0.03004660 0.6187407 0.6138746 100773701 ## GO:0005496 1/20 6/3946 0.03004660 0.6187407 0.6138746 100689048 ## GO:0005253 1/20 8/3946 0.03987010 0.6187407 0.6138746 100773701 ## GO:0015108 1/20 8/3946 0.03987010 0.6187407 0.6138746 100773701 ## GO:0019887 1/20 12/3946 0.05923425 0.6187407 0.6138746 100763034 ## Count ## GO:0004983 1 ## GO:0005254 1 ## GO:0005496 1 ## GO:0005253 1 ## GO:0015108 1 ## GO:0019887 1  support many ID types The input ID type can be any type that was supported in OrgDb object.\nlibrary(org.Hs.eg.db) data(geneList) gene \u0026lt;- names(geneList)[abs(geneList) \u0026gt; 2] gene.df \u0026lt;- bitr(gene, fromType = \u0026quot;ENTREZID\u0026quot;, toType = c(\u0026quot;ENSEMBL\u0026quot;, \u0026quot;SYMBOL\u0026quot;), OrgDb = org.Hs.eg.db) ## 'select()' returned 1:many mapping between keys and columns ## Warning in bitr(gene, fromType = \u0026quot;ENTREZID\u0026quot;, toType = c(\u0026quot;ENSEMBL\u0026quot;, ## \u0026quot;SYMBOL\u0026quot;), : 0.48% of input gene IDs are fail to map... head(gene.df) ## ENTREZID ENSEMBL SYMBOL ## 1 4312 ENSG00000196611 MMP1 ## 2 8318 ENSG00000093009 CDC45 ## 3 10874 ENSG00000109255 NMU ## 4 55143 ENSG00000134690 CDCA8 ## 5 55388 ENSG00000065328 MCM10 ## 6 991 ENSG00000117399 CDC20 ego \u0026lt;- enrichGO(gene = gene, universe = names(geneList), OrgDb = org.Hs.eg.db, ont = \u0026quot;CC\u0026quot;, pAdjustMethod = \u0026quot;BH\u0026quot;, pvalueCutoff = 0.01, qvalueCutoff = 0.05) head(summary(ego)) ## ID Description GeneRatio ## GO:0005819 GO:0005819 spindle 24/197 ## GO:0005876 GO:0005876 spindle microtubule 11/197 ## GO:0000793 GO:0000793 condensed chromosome 17/197 ## GO:0000779 GO:0000779 condensed chromosome, centromeric region 13/197 ## GO:0005875 GO:0005875 microtubule associated complex 14/197 ## GO:0015630 GO:0015630 microtubule cytoskeleton 36/197 ## BgRatio pvalue p.adjust qvalue ## GO:0005819 222/11632 3.810608e-13 1.276554e-10 1.139171e-10 ## GO:0005876 45/11632 1.527089e-10 2.557874e-08 2.282596e-08 ## GO:0000793 150/11632 5.838332e-10 6.519471e-08 5.817847e-08 ## GO:0000779 81/11632 8.684319e-10 7.273117e-08 6.490386e-08 ## GO:0005875 109/11632 3.936298e-09 2.637319e-07 2.353492e-07 ## GO:0015630 765/11632 1.719925e-08 9.602916e-07 8.569452e-07 ## geneID ## GO:0005819 55143/991/9493/1062/259266/9787/220134/51203/22974/4751/983/4085/81930/332/3832/7272/9212/9055/3833/146909/10112/6790/891/24137 ## GO:0005876 220134/51203/983/81930/332/3832/9212/9055/146909/6790/24137 ## GO:0000793 1062/10403/7153/23397/55355/220134/4751/79019/55839/54821/4085/332/64151/9212/1111/6790/891 ## GO:0000779 1062/10403/55355/220134/4751/79019/55839/54821/4085/332/9212/6790/891 ## GO:0005875 55143/9493/1062/81930/332/3832/9212/3833/146909/10112/6790/24137/4137/7802 ## GO:0015630 8318/55143/991/9493/1062/9133/7153/259266/55165/9787/220134/51203/22974/10460/4751/983/54821/4085/81930/332/3832/7272/64151/9212/1111/9055/3833/146909/10112/51514/6790/891/24137/26289/4137/7802 ## Count ## GO:0005819 24 ## GO:0005876 11 ## GO:0000793 17 ## GO:0000779 13 ## GO:0005875 14 ## GO:0015630 36 ego2 \u0026lt;- enrichGO(gene = gene.df$ENSEMBL, OrgDb = org.Hs.eg.db, keyType = 'ENSEMBL', ont = \u0026quot;CC\u0026quot;, pAdjustMethod = \u0026quot;BH\u0026quot;, pvalueCutoff = 0.01, qvalueCutoff = 0.05) head(summary(ego2)) ## ID Description GeneRatio ## GO:0005819 GO:0005819 spindle 28/220 ## GO:0005875 GO:0005875 microtubule associated complex 19/220 ## GO:0005876 GO:0005876 spindle microtubule 12/220 ## GO:0015630 GO:0015630 microtubule cytoskeleton 43/220 ## GO:0005874 GO:0005874 microtubule 26/220 ## GO:0000779 GO:0000779 condensed chromosome, centromeric region 14/220 ## BgRatio pvalue p.adjust qvalue ## GO:0005819 298/19428 6.831911e-18 2.336514e-15 1.812254e-15 ## GO:0005875 157/19428 1.710039e-14 2.924167e-12 2.268052e-12 ## GO:0005876 54/19428 7.427958e-13 8.467872e-11 6.567879e-11 ## GO:0015630 1118/19428 1.228816e-12 1.050638e-10 8.148992e-11 ## GO:0005874 421/19428 2.266638e-12 1.550381e-10 1.202511e-10 ## GO:0000779 110/19428 2.652610e-11 1.444006e-09 1.120005e-09 ## geneID ## GO:0005819 ENSG00000134690/ENSG00000117399/ENSG00000137807/ENSG00000138778/ENSG00000066279/ENSG00000126787/ENSG00000154839/ENSG00000262634/ENSG00000137804/ENSG00000088325/ENSG00000117650/ENSG00000170312/ENSG00000164109/ENSG00000121621/ENSG00000089685/ENSG00000138160/ENSG00000112742/ENSG00000178999/ENSG00000198901/ENSG00000237649/ENSG00000056678/ENSG00000233450/ENSG00000204197/ENSG00000186185/ENSG00000112984/ENSG00000087586/ENSG00000134057/ENSG00000090889 ## GO:0005875 ENSG00000134690/ENSG00000137807/ENSG00000138778/ENSG00000121621/ENSG00000089685/ENSG00000138160/ENSG00000178999/ENSG00000237649/ENSG00000056678/ENSG00000233450/ENSG00000204197/ENSG00000186185/ENSG00000112984/ENSG00000087586/ENSG00000090889/ENSG00000186868/ENSG00000276155/ENSG00000277956/ENSG00000163879 ## GO:0005876 ENSG00000154839/ENSG00000262634/ENSG00000137804/ENSG00000170312/ENSG00000121621/ENSG00000089685/ENSG00000138160/ENSG00000178999/ENSG00000198901/ENSG00000186185/ENSG00000087586/ENSG00000090889 ## GO:0015630 ENSG00000093009/ENSG00000134690/ENSG00000117399/ENSG00000137807/ENSG00000138778/ENSG00000157456/ENSG00000131747/ENSG00000066279/ENSG00000138180/ENSG00000126787/ENSG00000154839/ENSG00000262634/ENSG00000137804/ENSG00000088325/ENSG00000013810/ENSG00000117650/ENSG00000170312/ENSG00000186871/ENSG00000164109/ENSG00000121621/ENSG00000089685/ENSG00000138160/ENSG00000112742/ENSG00000109805/ENSG00000178999/ENSG00000149554/ENSG00000198901/ENSG00000237649/ENSG00000056678/ENSG00000233450/ENSG00000204197/ENSG00000186185/ENSG00000112984/ENSG00000143476/ENSG00000087586/ENSG00000134057/ENSG00000090889/ENSG00000127603/ENSG00000154027/ENSG00000186868/ENSG00000276155/ENSG00000277956/ENSG00000163879 ## GO:0005874 ENSG00000137807/ENSG00000138778/ENSG00000066279/ENSG00000154839/ENSG00000262634/ENSG00000137804/ENSG00000088325/ENSG00000117650/ENSG00000170312/ENSG00000121621/ENSG00000089685/ENSG00000138160/ENSG00000178999/ENSG00000198901/ENSG00000237649/ENSG00000056678/ENSG00000233450/ENSG00000204197/ENSG00000186185/ENSG00000112984/ENSG00000087586/ENSG00000090889/ENSG00000127603/ENSG00000186868/ENSG00000276155/ENSG00000277956 ## GO:0000779 ENSG00000138778/ENSG00000080986/ENSG00000123485/ENSG00000154839/ENSG00000262634/ENSG00000117650/ENSG00000100162/ENSG00000166451/ENSG00000186871/ENSG00000164109/ENSG00000089685/ENSG00000178999/ENSG00000087586/ENSG00000134057 ## Count ## GO:0005819 28 ## GO:0005875 19 ## GO:0005876 12 ## GO:0015630 43 ## GO:0005874 26 ## GO:0000779 14 ego3 \u0026lt;- enrichGO(gene = gene.df$SYMBOL, OrgDb = org.Hs.eg.db, keyType = 'SYMBOL', ont = \u0026quot;CC\u0026quot;, pAdjustMethod = \u0026quot;BH\u0026quot;, pvalueCutoff = 0.01, qvalueCutoff = 0.05) head(summary(ego3)) ## ID Description GeneRatio ## GO:0005819 GO:0005819 spindle 24/196 ## GO:0005876 GO:0005876 spindle microtubule 11/196 ## GO:0000793 GO:0000793 condensed chromosome 17/196 ## GO:0000779 GO:0000779 condensed chromosome, centromeric region 13/196 ## GO:0015630 GO:0015630 microtubule cytoskeleton 36/196 ## GO:0005875 GO:0005875 microtubule associated complex 14/196 ## BgRatio pvalue p.adjust qvalue ## GO:0005819 278/17761 6.023611e-15 2.042004e-12 1.769039e-12 ## GO:0005876 52/17761 9.080301e-12 1.539111e-09 1.333370e-09 ## GO:0000793 192/17761 4.363319e-11 4.930551e-09 4.271460e-09 ## GO:0000779 103/17761 1.083989e-10 9.186804e-09 7.958759e-09 ## GO:0015630 1034/17761 6.842818e-10 3.952252e-08 3.423935e-08 ## GO:0005875 144/17761 6.995136e-10 3.952252e-08 3.423935e-08 ## geneID ## GO:0005819 CDCA8/CDC20/KIF23/CENPE/ASPM/DLGAP5/SKA1/NUSAP1/TPX2/NEK2/CDK1/MAD2L1/KIF18A/BIRC5/KIF11/TTK/AURKB/PRC1/KIFC1/KIF18B/KIF20A/AURKA/CCNB1/KIF4A ## GO:0005876 SKA1/NUSAP1/CDK1/KIF18A/BIRC5/KIF11/AURKB/PRC1/KIF18B/AURKA/KIF4A ## GO:0000793 CENPE/NDC80/TOP2A/NCAPH/HJURP/SKA1/NEK2/CENPM/CENPN/ERCC6L/MAD2L1/BIRC5/NCAPG/AURKB/CHEK1/AURKA/CCNB1 ## GO:0000779 CENPE/NDC80/HJURP/SKA1/NEK2/CENPM/CENPN/ERCC6L/MAD2L1/BIRC5/AURKB/AURKA/CCNB1 ## GO:0015630 CDC45/CDCA8/CDC20/KIF23/CENPE/CCNB2/TOP2A/ASPM/CEP55/DLGAP5/SKA1/NUSAP1/TPX2/TACC3/NEK2/CDK1/ERCC6L/MAD2L1/KIF18A/BIRC5/KIF11/TTK/NCAPG/AURKB/CHEK1/PRC1/KIFC1/KIF18B/KIF20A/DTL/AURKA/CCNB1/KIF4A/AK5/MAPT/DNALI1 ## GO:0005875 CDCA8/KIF23/CENPE/KIF18A/BIRC5/KIF11/AURKB/KIFC1/KIF18B/KIF20A/AURKA/KIF4A/MAPT/DNALI1 ## Count ## GO:0005819 24 ## GO:0005876 11 ## GO:0000793 17 ## GO:0000779 13 ## GO:0015630 36 ## GO:0005875 14  Using SYMBOL directly is not recommended. User can use setReadable function to translate geneID to gene symbol.\nego \u0026lt;- setReadable(ego, OrgDb = org.Hs.eg.db) ego2 \u0026lt;- setReadable(ego2, OrgDb = org.Hs.eg.db) head(summary(ego), n=3) ## ID Description GeneRatio BgRatio ## GO:0005819 GO:0005819 spindle 24/197 222/11632 ## GO:0005876 GO:0005876 spindle microtubule 11/197 45/11632 ## GO:0000793 GO:0000793 condensed chromosome 17/197 150/11632 ## pvalue p.adjust qvalue ## GO:0005819 3.810608e-13 1.276554e-10 1.139171e-10 ## GO:0005876 1.527089e-10 2.557874e-08 2.282596e-08 ## GO:0000793 5.838332e-10 6.519471e-08 5.817847e-08 ## geneID ## GO:0005819 CDCA8/CDC20/KIF23/CENPE/ASPM/DLGAP5/SKA1/NUSAP1/TPX2/NEK2/CDK1/MAD2L1/KIF18A/BIRC5/KIF11/TTK/AURKB/PRC1/KIFC1/KIF18B/KIF20A/AURKA/CCNB1/KIF4A ## GO:0005876 SKA1/NUSAP1/CDK1/KIF18A/BIRC5/KIF11/AURKB/PRC1/KIF18B/AURKA/KIF4A ## GO:0000793 CENPE/NDC80/TOP2A/NCAPH/HJURP/SKA1/NEK2/CENPM/CENPN/ERCC6L/MAD2L1/BIRC5/NCAPG/AURKB/CHEK1/AURKA/CCNB1 ## Count ## GO:0005819 24 ## GO:0005876 11 ## GO:0000793 17 head(summary(ego2), n=3) ## ID Description GeneRatio BgRatio ## GO:0005819 GO:0005819 spindle 24/197 222/11632 ## GO:0005876 GO:0005876 spindle microtubule 11/197 45/11632 ## GO:0000793 GO:0000793 condensed chromosome 17/197 150/11632 ## pvalue p.adjust qvalue ## GO:0005819 3.810608e-13 1.276554e-10 1.139171e-10 ## GO:0005876 1.527089e-10 2.557874e-08 2.282596e-08 ## GO:0000793 5.838332e-10 6.519471e-08 5.817847e-08 ## geneID ## GO:0005819 CDCA8/CDC20/KIF23/CENPE/ASPM/DLGAP5/SKA1/NUSAP1/TPX2/NEK2/CDK1/MAD2L1/KIF18A/BIRC5/KIF11/TTK/AURKB/PRC1/KIFC1/KIF18B/KIF20A/AURKA/CCNB1/KIF4A ## GO:0005876 SKA1/NUSAP1/CDK1/KIF18A/BIRC5/KIF11/AURKB/PRC1/KIF18B/AURKA/KIF4A ## GO:0000793 CENPE/NDC80/TOP2A/NCAPH/HJURP/SKA1/NEK2/CENPM/CENPN/ERCC6L/MAD2L1/BIRC5/NCAPG/AURKB/CHEK1/AURKA/CCNB1 ## Count ## GO:0005819 24 ## GO:0005876 11 ## GO:0000793 17  enrichGO test the whole GO corpus and enriched result may contains very general terms. User can use dropGO function to remove specific GO terms or GO level. If user want to restrict the result at sepcific GO level, they can use gofilter function. We also provide a simplify method to reduce redundancy of enriched GO terms, see the post.\nVisualization functions dotplot(ego, showCategory=30)  enrichMap(ego, vertex.label.cex=1.2, layout=igraph::layout.kamada.kawai)  cnetplot(ego, foldChange=geneList)  plotGOgraph(ego) ## ## groupGOTerms: GOBPTerm, GOMFTerm, GOCCTerm environments built. ## ## Building most specific GOs ..... ( 335 GO terms found. ) ## ## Build GO DAG topology .......... ( 335 GO terms and 667 relations. ) ## ## Annotating nodes ............... ( 11632 genes annotated to the GO terms. ) ## $dag ## A graphNEL graph with directed edges ## Number of Nodes = 29 ## Number of Edges = 50 ## ## $complete.dag ## [1] \u0026quot;A graph with 29 nodes.\u0026quot;  Gene Set Enrichment Analysis gsecc \u0026lt;- gseGO(geneList=geneList, ont=\u0026quot;CC\u0026quot;, OrgDb=org.Hs.eg.db, verbose=F) head(summary(gsecc)) ## ID Description setSize ## GO:0031982 GO:0031982 vesicle 2880 ## GO:0031988 GO:0031988 membrane-bounded vesicle 2791 ## GO:0005576 GO:0005576 extracellular region 3296 ## GO:0065010 GO:0065010 extracellular membrane-bounded organelle 2220 ## GO:0070062 GO:0070062 extracellular exosome 2220 ## GO:0044421 GO:0044421 extracellular region part 2941 ## enrichmentScore NES pvalue p.adjust qvalues ## GO:0031982 -0.2561837 -1.222689 0.001002004 0.03721229 0.02816364 ## GO:0031988 -0.2572169 -1.226003 0.001007049 0.03721229 0.02816364 ## GO:0005576 -0.2746489 -1.312485 0.001009082 0.03721229 0.02816364 ## GO:0065010 -0.2570342 -1.222048 0.001013171 0.03721229 0.02816364 ## GO:0070062 -0.2570342 -1.222048 0.001013171 0.03721229 0.02816364 ## GO:0044421 -0.2744658 -1.310299 0.001014199 0.03721229 0.02816364 gseaplot(gsecc, geneSetID=\u0026quot;GO:0000779\u0026quot;)  GO analysis using user\u0026rsquo;s own data clusterProfiler provides enricher function for hypergeometric test and GSEA function for gene set enrichment analysis that are designed to accept user defined annotation. They accept two additional parameters TERM2GENE and TERM2NAME. As indicated in the parameter names, TERM2GENE is a data.frame with first column of term ID and second column of corresponding mapped gene and TERM2NAME is a data.frame with first column of term ID and second column of corresponding term name. TERM2NAME is optional.\nAn example of using enricher and GSEA to analyze DisGeNet annotation is presented in the post, use clusterProfiler as an universal enrichment analysis tool.\nGMT files We provides a function, read.gmt, that can parse GMT file into a TERM2GENE data.frame that is ready for both enricher and GSEA functions.\ngmtfile \u0026lt;- system.file(\u0026quot;extdata\u0026quot;, \u0026quot;c5.cc.v5.0.entrez.gmt\u0026quot;, package=\u0026quot;clusterProfiler\u0026quot;) c5 \u0026lt;- read.gmt(gmtfile) egmt \u0026lt;- enricher(gene, TERM2GENE=c5) head(summary(egmt)) ## ID Description ## SPINDLE SPINDLE SPINDLE ## MICROTUBULE_CYTOSKELETON MICROTUBULE_CYTOSKELETON MICROTUBULE_CYTOSKELETON ## CYTOSKELETAL_PART CYTOSKELETAL_PART CYTOSKELETAL_PART ## SPINDLE_MICROTUBULE SPINDLE_MICROTUBULE SPINDLE_MICROTUBULE ## MICROTUBULE MICROTUBULE MICROTUBULE ## CYTOSKELETON CYTOSKELETON CYTOSKELETON ## GeneRatio BgRatio pvalue p.adjust ## SPINDLE 11/82 39/5270 7.667674e-12 6.594200e-10 ## MICROTUBULE_CYTOSKELETON 16/82 152/5270 8.449298e-10 3.633198e-08 ## CYTOSKELETAL_PART 15/82 235/5270 2.414879e-06 6.623386e-05 ## SPINDLE_MICROTUBULE 5/82 16/5270 3.080645e-06 6.623386e-05 ## MICROTUBULE 6/82 32/5270 7.740446e-06 1.331357e-04 ## CYTOSKELETON 16/82 367/5270 1.308357e-04 1.826293e-03 ## qvalue ## SPINDLE 5.327016e-10 ## MICROTUBULE_CYTOSKELETON 2.935019e-08 ## CYTOSKELETAL_PART 5.350593e-05 ## SPINDLE_MICROTUBULE 5.350593e-05 ## MICROTUBULE 1.075515e-04 ## CYTOSKELETON 1.475340e-03 ## geneID ## SPINDLE 991/9493/9787/22974/983/332/3832/7272/9055/6790/24137 ## MICROTUBULE_CYTOSKELETON 991/9493/9133/7153/9787/22974/4751/983/332/3832/7272/9055/6790/24137/4137/7802 ## CYTOSKELETAL_PART 991/9493/7153/9787/22974/4751/983/332/3832/7272/9055/6790/24137/4137/7802 ## SPINDLE_MICROTUBULE 983/332/3832/9055/24137 ## MICROTUBULE 983/332/3832/9055/24137/4137 ## CYTOSKELETON 991/9493/9133/7153/9787/22974/4751/983/332/3832/7272/9055/6790/24137/4137/7802 ## Count ## SPINDLE 11 ## MICROTUBULE_CYTOSKELETON 16 ## CYTOSKELETAL_PART 15 ## SPINDLE_MICROTUBULE 5 ## MICROTUBULE 6 ## CYTOSKELETON 16 egmt \u0026lt;- setReadable(egmt, OrgDb=org.Hs.eg.db, keytype=\u0026quot;ENTREZID\u0026quot;) head(summary(egmt)) ## ID Description ## SPINDLE SPINDLE SPINDLE ## MICROTUBULE_CYTOSKELETON MICROTUBULE_CYTOSKELETON MICROTUBULE_CYTOSKELETON ## CYTOSKELETAL_PART CYTOSKELETAL_PART CYTOSKELETAL_PART ## SPINDLE_MICROTUBULE SPINDLE_MICROTUBULE SPINDLE_MICROTUBULE ## MICROTUBULE MICROTUBULE MICROTUBULE ## CYTOSKELETON CYTOSKELETON CYTOSKELETON ## GeneRatio BgRatio pvalue p.adjust ## SPINDLE 11/82 39/5270 7.667674e-12 6.594200e-10 ## MICROTUBULE_CYTOSKELETON 16/82 152/5270 8.449298e-10 3.633198e-08 ## CYTOSKELETAL_PART 15/82 235/5270 2.414879e-06 6.623386e-05 ## SPINDLE_MICROTUBULE 5/82 16/5270 3.080645e-06 6.623386e-05 ## MICROTUBULE 6/82 32/5270 7.740446e-06 1.331357e-04 ## CYTOSKELETON 16/82 367/5270 1.308357e-04 1.826293e-03 ## qvalue ## SPINDLE 5.327016e-10 ## MICROTUBULE_CYTOSKELETON 2.935019e-08 ## CYTOSKELETAL_PART 5.350593e-05 ## SPINDLE_MICROTUBULE 5.350593e-05 ## MICROTUBULE 1.075515e-04 ## CYTOSKELETON 1.475340e-03 ## geneID ## SPINDLE CDC20/KIF23/DLGAP5/TPX2/CDK1/BIRC5/KIF11/TTK/PRC1/AURKA/KIF4A ## MICROTUBULE_CYTOSKELETON CDC20/KIF23/CCNB2/TOP2A/DLGAP5/TPX2/NEK2/CDK1/BIRC5/KIF11/TTK/PRC1/AURKA/KIF4A/MAPT/DNALI1 ## CYTOSKELETAL_PART CDC20/KIF23/TOP2A/DLGAP5/TPX2/NEK2/CDK1/BIRC5/KIF11/TTK/PRC1/AURKA/KIF4A/MAPT/DNALI1 ## SPINDLE_MICROTUBULE CDK1/BIRC5/KIF11/PRC1/KIF4A ## MICROTUBULE CDK1/BIRC5/KIF11/PRC1/KIF4A/MAPT ## CYTOSKELETON CDC20/KIF23/CCNB2/TOP2A/DLGAP5/TPX2/NEK2/CDK1/BIRC5/KIF11/TTK/PRC1/AURKA/KIF4A/MAPT/DNALI1 ## Count ## SPINDLE 11 ## MICROTUBULE_CYTOSKELETON 16 ## CYTOSKELETAL_PART 15 ## SPINDLE_MICROTUBULE 5 ## MICROTUBULE 6 ## CYTOSKELETON 16 gsegmt \u0026lt;- GSEA(geneList, TERM2GENE=c5, verbose=F) head(summary(gsegmt)) ## ID ## EXTRACELLULAR_REGION EXTRACELLULAR_REGION ## EXTRACELLULAR_REGION_PART EXTRACELLULAR_REGION_PART ## CELL_PROJECTION CELL_PROJECTION ## PROTEINACEOUS_EXTRACELLULAR_MATRIX PROTEINACEOUS_EXTRACELLULAR_MATRIX ## EXTRACELLULAR_MATRIX EXTRACELLULAR_MATRIX ## EXTRACELLULAR_MATRIX_PART EXTRACELLULAR_MATRIX_PART ## Description ## EXTRACELLULAR_REGION EXTRACELLULAR_REGION ## EXTRACELLULAR_REGION_PART EXTRACELLULAR_REGION_PART ## CELL_PROJECTION CELL_PROJECTION ## PROTEINACEOUS_EXTRACELLULAR_MATRIX PROTEINACEOUS_EXTRACELLULAR_MATRIX ## EXTRACELLULAR_MATRIX EXTRACELLULAR_MATRIX ## EXTRACELLULAR_MATRIX_PART EXTRACELLULAR_MATRIX_PART ## setSize enrichmentScore NES ## EXTRACELLULAR_REGION 401 -0.3860230 -1.694496 ## EXTRACELLULAR_REGION_PART 310 -0.4101043 -1.761338 ## CELL_PROJECTION 87 -0.4729701 -1.739867 ## PROTEINACEOUS_EXTRACELLULAR_MATRIX 93 -0.6355317 -2.365007 ## EXTRACELLULAR_MATRIX 95 -0.6229461 -2.318356 ## EXTRACELLULAR_MATRIX_PART 54 -0.5908035 -2.002728 ## pvalue p.adjust qvalues ## EXTRACELLULAR_REGION 0.001310616 0.03192152 0.02442263 ## EXTRACELLULAR_REGION_PART 0.001375516 0.03192152 0.02442263 ## CELL_PROJECTION 0.001503759 0.03192152 0.02442263 ## PROTEINACEOUS_EXTRACELLULAR_MATRIX 0.001555210 0.03192152 0.02442263 ## EXTRACELLULAR_MATRIX 0.001557632 0.03192152 0.02442263 ## EXTRACELLULAR_MATRIX_PART 0.001631321 0.03192152 0.02442263  Citation Yu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\n","date":1451879880,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1451879880,"objectID":"14fcd1d10bb776e14816029ab4a3abb1","permalink":"https://guangchuangyu.github.io/2016/01/go-analysis-using-clusterprofiler/","publishdate":"2016-01-04T11:58:00+08:00","relpermalink":"/2016/01/go-analysis-using-clusterprofiler/","section":"post","summary":"clusterProfiler supports over-representation test and gene set enrichment analysis of Gene Ontology. It supports GO annotation from OrgDb object, GMT file and user\u0026rsquo;s own data.\nsupport many species In github version of clusterProfiler, enrichGO and gseGO functions removed the parameter organism and add another parameter OrgDb, so that any species that have OrgDb object available can be analyzed in clusterProfiler. Bioconductor have already provide OrgDb for about 20 species, see http://bioconductor.org/packages/release/BiocViews.html#___OrgDb, and users can build OrgDb via AnnotationHub.\n","tags":["clusterProfiler","GO"],"title":"GO analysis using clusterProfiler","type":"post"},{"authors":null,"categories":["R"],"content":"A new version of ggtree that works with ggplot2 (version \u0026gt;= 2.0.0) is now availabel.\nnew layers Some functions, add_legend, hilight, annotation_clade and annotation_clade2 were removed. Instead we provide layer functions, geom_treescale, geom_hilight and geom_cladelabel. You can use + operator to add layers using these layer functions.\nIn addtion, we provide geom_point2, geom_text2 and geom_segment2 which works exactly as geom_point, geom_text and geom_segment except they allow ggtree users to do subsetting.\nrescale tree Most of the phylogenetic trees are scaled by evolutionary distance (substitution/site), in ggtree we can re-scale a phylogenetic tree by any numerical variable inferred by evolutionary analysis. For example using substitution rate to scale a time-scaled tree inferred by BEAST, or using dN/dS to re-scale a tree analyzed by CodeML.\nNew Hampshire eXtended format (NHX) supported This is a feature request from ggtree user. The NHX format is also commonly used in phylogenetic software (e.g. PHYLODOG, RevBayes, etc).\nThe original vignette was too long and I split them into several short ones. These vignettes should be more easy to follow. You can access the vignette via http://guangchuangyu.github.io/ggtree/. More examples and detail explanation were provided. If there are something that I didn\u0026rsquo;t explain well or if you have suggestions for changes or improvements, submit an issue, or (even better) fork ggtree, make modifications and submit a pull request. I appreciate your help in improving ggtree.\n Repo: https://github.com/GuangchuangYu/ggtree vignettes  http://guangchuangyu.github.io/ggtree/ Tree Data Import Tree Visualization Tree Manipulation Tree Annotation   Citation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1451455860,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1451455860,"objectID":"47494fb8270d9696dadb6f8a3db19517","permalink":"https://guangchuangyu.github.io/2015/12/news-of-ggtree/","publishdate":"2015-12-30T14:11:00+08:00","relpermalink":"/2015/12/news-of-ggtree/","section":"post","summary":"A new version of ggtree that works with ggplot2 (version \u0026gt;= 2.0.0) is now availabel.\nnew layers Some functions, add_legend, hilight, annotation_clade and annotation_clade2 were removed. Instead we provide layer functions, geom_treescale, geom_hilight and geom_cladelabel. You can use + operator to add layers using these layer functions.\nIn addtion, we provide geom_point2, geom_text2 and geom_segment2 which works exactly as geom_point, geom_text and geom_segment except they allow ggtree users to do subsetting.\n","tags":["ggtree"],"title":"News of ggtree","type":"post"},{"authors":null,"categories":["R","Visualization"],"content":"I have played with emoji in R for a while. My solution of using it is different from what implemented in emoGG.\nemoGG is a good attemp to add emoji in ggplot2. It render emoji picture (png) and creat a layer, geom_emoji, to add emoji.\nIn my opinion, emoji should be treated as ordinary font in user interface, albeit it maynot be true internally.\nIt would be more flexible if we can use emoji as ordinary font and in this way user don\u0026rsquo;t need to learn extra stuff.\nI implemented my solution of using emoji in the R package emojifont. The package is very simple, pack some emoji fonts (currently only OpenSansEmoji.ttf) and use showtext to render the fonts, then we can use the font in either base plot or ggplot2.\nemojifont Installation devtools::install_github(\u0026quot;GuangchuangYu/emojifont\u0026quot;)  load Emoji font library(emojifont) ## list available emoji fonts list.emojifonts() ## [1] \u0026quot;OpenSansEmoji.ttf\u0026quot; ## load selected emoji font load.emojifont('OpenSansEmoji.ttf')  Emoji characters To use emoji, we need to use their corresponding unicode. Emoji unicode can be found in http://apps.timwhitlock.info/emoji/tables/unicode, or searched using remoji package.\nEmoji in R plot base plot set.seed(123) x \u0026lt;- rnorm(10) set.seed(321) y \u0026lt;- rnorm(10) plot(x, y, cex=0) text(x, y, labels=emoji('cow'), cex=1.5, col='steelblue', family='OpenSansEmoji')  ggplot2 d \u0026lt;- data.frame(x=x, y=y, label = sample(c(emoji('cow'), emoji('camel')), 10, replace=TRUE), type = sample(LETTERS[1:3], 10, replace=TRUE)) require(ggplot2) ggplot(d, aes(x, y, color=type, label=label)) + geom_text(family=\u0026quot;OpenSansEmoji\u0026quot;, size=5)  We can also use emoji in title, legend or axis label.\ndd=data.frame(x=emoji(c(\u0026quot;satisfied\u0026quot;, \u0026quot;disapointed\u0026quot;)), y=c(50, 10)) emoji_text=element_text(family=\u0026quot;OpenSansEmoji\u0026quot;, size=20) ggplot(dd, aes(x, y)) + geom_bar(stat='identity', aes(fill=x)) + ggtitle(paste(emoji(c(\u0026quot;+1\u0026quot;, \u0026quot;-1\u0026quot;)), collapse=\u0026quot; \u0026quot;))+ theme(axis.text.x = emoji_text, legend.text=emoji_text, title=emoji_text) + xlab(NULL)+ylab(NULL)  ggtree require(ggtree) require(colorspace) tree_text=paste0( \u0026quot;(\u0026quot;,\u0026quot;(\u0026quot;,\u0026quot;(\u0026quot;, \u0026quot;(\u0026quot;, \u0026quot;(\u0026quot;, emoji(\u0026quot;cow\u0026quot;), \u0026quot;,\u0026quot;, \u0026quot;(\u0026quot;, emoji(\u0026quot;whale\u0026quot;),\u0026quot;,\u0026quot;, emoji(\u0026quot;dolphin\u0026quot;), \u0026quot;)\u0026quot;, \u0026quot;),\u0026quot;, \u0026quot;(\u0026quot;, emoji('pig2'),\u0026quot;,\u0026quot;, emoji('boar'), \u0026quot;)\u0026quot;, \u0026quot;),\u0026quot;, emoji(\u0026quot;camel\u0026quot;), \u0026quot;),\u0026quot;, emoji(\u0026quot;fish\u0026quot;), \u0026quot;),\u0026quot;, emoji(\u0026quot;seedling\u0026quot;), \u0026quot;);\u0026quot;) ggtree(read.tree(text=tree_text)) + xlim(NA, 7) + geom_tiplab(family=\u0026quot;OpenSansEmoji\u0026quot;, size=10, color=rainbow_hcl(8))  Apple Color Emoji Although R\u0026rsquo;s graphical devices don\u0026rsquo;t support AppleColorEmoji font, it\u0026rsquo;s still possible to use it. We can export the plot to svg file and render it in Safari.\nlibrary(gridSVG) p \u0026lt;- ggtree(read.tree(text=tree_text), size=2) + geom_tiplab(size=20) p \u0026lt;- p %\u0026gt;% phylopic(\u0026quot;79ad5f09-cf21-4c89-8e7d-0c82a00ce728\u0026quot;, color=\u0026quot;firebrick\u0026quot;, alpha = .3) p \u0026lt;- p + xlim(NA, 7) + ylim(NA, 8.5) p ps = grid.export(\u0026quot;emoji.svg\u0026quot;, addClass=T)  ","date":1450235471,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1450235471,"objectID":"4a01af8b81e63cd14331302e572cb1e5","permalink":"https://guangchuangyu.github.io/2015/12/use-emoji-font-in-r/","publishdate":"2015-12-16T11:11:11+08:00","relpermalink":"/2015/12/use-emoji-font-in-r/","section":"post","summary":"I have played with emoji in R for a while. My solution of using it is different from what implemented in emoGG.\nemoGG is a good attemp to add emoji in ggplot2. It render emoji picture (png) and creat a layer, geom_emoji, to add emoji.\nIn my opinion, emoji should be treated as ordinary font in user interface, albeit it maynot be true internally.\nIt would be more flexible if we can use emoji as ordinary font and in this way user don\u0026rsquo;t need to learn extra stuff.\n","tags":["ggplot2","ggtree","emoji","emojifont"],"title":"use emoji font in R","type":"post"},{"authors":null,"categories":null,"content":"","date":1449705600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1449705600,"objectID":"120e9a596c174d044facbc6b9fcfd3e5","permalink":"https://guangchuangyu.github.io/project/emojifont/","publishdate":"2015-12-10T00:00:00Z","relpermalink":"/project/emojifont/","section":"project","summary":"emojifont is an implementation of using emoji font in both base and 'ggplot2' graphics.","tags":["cran"],"title":"emojifont","type":"project"},{"authors":null,"categories":["python","R"],"content":"I followed the post, Installing an R kernel for IPython/jupyter notebook 3 on OSX, to install jupyter with python3 and R kernels in my iMac.\nI have elementaryOS on my Macbook Pro and also want to have jupyter on it. The installation process is quite similar.\nInstall Jupyter sudo apt-get install python3-pip sudo pip3 install jupyter  Then we can use the following command to start jupyter:\nipython notebook  Install IRkernel To compile IRkernel, we should firstly have zmq lib installed.\nsudo apt-get install libzmq3-dev python-zmq  In R, run the following command to install IRkernel:\n install.packages(c('rzmq','repr','IRkernel','IRdisplay'), repos = c('http://irkernel.github.io/', getOption('repos')), type = 'source') IRkernel::installspec()  Now we can use R in jupyter. Inline image is a great feature especially for demonstration.\nWith many phylogenetic packages available in R and my package ggtree, R in jupyter can be a great environment for phylogenetics.\n","date":1448777615,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1448777615,"objectID":"dc4d9be4915a58295f14f76b20cbd748","permalink":"https://guangchuangyu.github.io/2015/11/r-kernel-in-jupyter-notebook-3/","publishdate":"2015-11-29T14:13:35+08:00","relpermalink":"/2015/11/r-kernel-in-jupyter-notebook-3/","section":"post","summary":"I followed the post, Installing an R kernel for IPython/jupyter notebook 3 on OSX, to install jupyter with python3 and R kernels in my iMac.\nI have elementaryOS on my Macbook Pro and also want to have jupyter on it. The installation process is quite similar.\nInstall Jupyter sudo apt-get install python3-pip sudo pip3 install jupyter ","tags":["jupyter"],"title":"R kernel in Jupyter notebook 3","type":"post"},{"authors":null,"categories":["R"],"content":"Thanks @mevers for raising the issue to me and his efforts in benchmarking clusterProfiler.\nHe pointed out two issues:\n outputs from gseGO and GSEA-P are poorly overlap. pvalues from gseGO are generally smaller and don\u0026rsquo;t show a lot of variation  For GSEA analysis, we have two inputs, a ranked gene list and gene set collections.\nFirst of all, the gene set collections are very different. The GMT file used in his test is c5.cc.v5.0.symbols.gmt, which is a tiny subset of GO CC, while clusterProfiler used the whole GO CC corpus.\nFor instance, with his gene list as input, clusterProfiler annotates 195 genes as ribosome, while GSEA-P (using c5.cc.v5.0.symbols.gmt) only annotates 38 genes.\nAs the gene set collections is so different, I don\u0026rsquo;t believe the comparison can produce any valuable results.\nThe first step should be extending clusterProfiler to support using GMT file as gene set annotation, thereafter we can use identical input (both gene list and gene sets) and then benchmarking will be valuable for detecting issues that exclusively attributed to the implementation of GSEA algorithm.\nclusterProfiler supports GMT file Currently clusterProfiler supports user\u0026rsquo;s own annotations via enricher and GSEA functions which require users provide their own annotation in a data.frame. This is a general interface for using user\u0026rsquo;s own annotation.\nTo support GMT file, we only need a function, read.gmt, to parse GMT file and output a data.frame that is suitable for enricher and GSEA. Now this function is available in devel branch (in BioC 3.3 or github) of clusterProfiler.\nAs @mevers used c5.cc, I also use it for further comparison. I have packed the file into clusterProfiler, so that users can use it for testing/practice.\n\u0026gt; gmtfile \u0026lt;- system.file(\u0026quot;extdata\u0026quot;, \u0026quot;c5.cc.v5.0.entrez.gmt\u0026quot;, package=\u0026quot;clusterProfiler\u0026quot;) ## only 207K. ## It's indeed a tiny subset of CC. \u0026gt; file.size(gmtfile)/1000 [1] 207.608 \u0026gt; c5 \u0026lt;- read.gmt(gmtfile)  hypergeometric test with GMT annotation \u0026gt; require(clusterProfiler) \u0026gt; data(geneList, package=\u0026quot;DOSE\u0026quot;) \u0026gt; de \u0026lt;- names(geneList)[abs(geneList) \u0026gt; 2] \u0026gt; head(de) [1] \u0026quot;4312\u0026quot; \u0026quot;8318\u0026quot; \u0026quot;10874\u0026quot; \u0026quot;55143\u0026quot; \u0026quot;55388\u0026quot; \u0026quot;991\u0026quot; \u0026gt; x \u0026lt;- enricher(de, TERM2GENE=c5) ## omit some columns to make it more readable \u0026gt; head(summary(x)[, c(1, 3:7)], 3) ID GeneRatio BgRatio SPINDLE SPINDLE 11/82 39/5270 MICROTUBULE_CYTOSKELETON MICROTUBULE_CYTOSKELETON 16/82 152/5270 CYTOSKELETAL_PART CYTOSKELETAL_PART 15/82 235/5270 pvalue p.adjust qvalue SPINDLE 7.667674e-12 6.594200e-10 5.327016e-10 MICROTUBULE_CYTOSKELETON 8.449298e-10 3.633198e-08 2.935019e-08 CYTOSKELETAL_PART 2.414879e-06 6.623386e-05 5.350593e-05  gene set enrichment analysis with GMT annotation \u0026gt; y \u0026lt;- GSEA(geneList, TERM2GENE=c5) \u0026gt; head(summary(y)[, -c(1,2)], 2) setSize enrichmentScore NES pvalue EXTRACELLULAR_REGION 401 -0.3860230 -1.694322 0.001237624 EXTRACELLULAR_REGION_PART 310 -0.4101043 -1.765775 0.001269036 p.adjust qvalues EXTRACELLULAR_REGION 0.03047874 0.02316228 EXTRACELLULAR_REGION_PART 0.03047874 0.02316228  Comparison of clusterProfiler and GSEA-P Now with read.gmt, we can compare clusterProfiler and GSEA-P with the same input.\nFirst of all, I export geneList to a rnk file.\ndata(geneList, package=\u0026quot;DOSE\u0026quot;) d=data.frame(gene=names(geneList), FC=geneList) write.table(d, row.names=F,col.names=F, quote=F, file=\u0026quot;geneList.rnk\u0026quot;, sep=\u0026quot;\\t\u0026quot;)  And run GSEA-P with the following parameters:\nproducer_class xtools.gsea.GseaPreranked producer_timestamp 1445941169480 param collapse false param plot_top_x 20 param rnk /Users/guangchuangyu/Downloads/geneList.rnk param norm meandiv param scoring_scheme weighted param make_sets true param mode Max_probe param gmx /Users/guangchuangyu/Downloads/c5.cc.v5.0.entrez.gmt param gui false param rpt_label my_analysis param help false param out /Users/guangchuangyu/gsea_home/output/oct27 param include_only_symbols true param set_min 15 param nperm 1000 param rnd_seed timestamp param zip_report false param set_max 500  Re-run clusterProfiler::GSEA with pvalueCutoff=1.\ng \u0026lt;- read.delim(\u0026quot;gsea_report_for_na_neg_1445941169480.xls\u0026quot;) xx \u0026lt;- GSEA(geneList, TERM2GENE=c5, nPerm=1000, pvalueCutoff=1) gy = merge(g, summary(xx), by.x=\u0026quot;NAME\u0026quot;, by.y=\u0026quot;ID\u0026quot;) ggplot(gy, aes(NOM.p.val, pvalue)) + geom_point() + xlim(0, 1) + ylim(0, 1)  Now the comparison tells! clusterProfiler indeed produce smaller pvalues. As I said in why clusterProfiler fails, in general software produce more conservative result is more trustable. This is indeed an issue I couldn\u0026rsquo;t omit.\nThis issue is attributed to DOSE package, which serves as a backend of both clusterProfiler and ReactomePA.\nIn DOSE, we calculate the pvalue in the following way:\n For each geneList, we calculate the observed ES, and then perform permutation to generate a null ES distribution. pvalue = (sum(ES \u0026gt;= permES)+1)/(nPerm+1), for greater side as an example, is calculated.\n fixed bug of DOSE Eventually I figured out that the way we calculate pvalue is not correct. As presented in Subramaniam et al, the distribution of ES is bimodal. Positive and negative ES values should be separated when calculating pvalues.\nAfter I changed the source code, the pvalues generated by clusterProfiler::GSEA and GSEA-P are almost identical.\nThis bug was fixed in both release (\u0026gt;=2.8.1) and devel (\u0026gt;=2.9.1) branches. The fixed will affect DOSE, clusterProfiler and ReactomePA.\nother concerns There are other differences between clusterProfiler and GSEA-P.\nclusterProfiler never produce pvalue=0 For calculating pvalues, GSEA-P may produce pvalue=0, while clusterProfiler never produce pvalue=0 since we add pseudocount, 1, in both numerator and demoninator. Some software may not accept pvalue=0, for example if you want to use topGO to visualize enrichment with GO topology, the result can\u0026rsquo;t contain any pvalue=0.\nclusterProfiler test whole gene set collections \u0026gt; g=read.delim(\u0026quot;gsea_report_for_na_neg_1445941169480.xls\u0026quot;) \u0026gt; dim(g) [1] 56 12 \u0026gt; yy = summary(xx) \u0026gt; yy = yy[with(yy, setSize \u0026gt;= 15 \u0026amp; setSize \u0026lt;=500),] \u0026gt; dim(yy) [1] 152 8 \u0026gt; all(g$NAME %in% yy$ID) [1] TRUE  GSEA-P didn\u0026rsquo;t filter result by pvalues, as it reported pvalues ranging from 0 to 1.\nWe cut our result by setSize in $[15, 500]$ as default parameter of GSEA-P.\nclusterProfiler tests all the gene sets while GSEA-P only tests a subset.\nIf I have some free time, I will figure out how they select gene sets to test. If it\u0026rsquo;s reasonable, we can add a parameter for clusterProfiler users to switch between two modes (full sets or subset). This is still an open issue/question. If you have any idea, don\u0026rsquo;t hesitate to let me know. :)\nCitation Yu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\n","date":1446436229,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1446436229,"objectID":"0750ace27a65a30c03d6404efc14af60","permalink":"https://guangchuangyu.github.io/2015/11/comparison-of-clusterprofiler-and-gsea-p/","publishdate":"2015-11-02T11:50:29+08:00","relpermalink":"/2015/11/comparison-of-clusterprofiler-and-gsea-p/","section":"post","summary":"Thanks @mevers for raising the issue to me and his efforts in benchmarking clusterProfiler.\nHe pointed out two issues:\n outputs from gseGO and GSEA-P are poorly overlap. pvalues from gseGO are generally smaller and don\u0026rsquo;t show a lot of variation  For GSEA analysis, we have two inputs, a ranked gene list and gene set collections.\nFirst of all, the gene set collections are very different. The GMT file used in his test is c5.cc.v5.0.symbols.gmt, which is a tiny subset of GO CC, while clusterProfiler used the whole GO CC corpus.\n","tags":["clusterProfiler"],"title":"Comparison of clusterProfiler and GSEA-P","type":"post"},{"authors":null,"categories":["Visualization","R"],"content":"To simplify enriched GO result, we can use slim version of GO and use enricher function to analyze.\nAnother strategy is to use GOSemSim to calculate similarity of GO terms and remove those highly similar terms by keeping one representative term. To make this feature available to clusterProfiler users, I develop a simplify method to reduce redundant GO terms from output of enrichGO function.\nrequire(clusterProfiler) data(geneList, package=\u0026quot;DOSE\u0026quot;) de \u0026lt;- names(geneList)[abs(geneList) \u0026gt; 2] bp \u0026lt;- enrichGO(de, ont=\u0026quot;BP\u0026quot;) enrichMap(bp)  The enrichMap doesn\u0026rsquo;t display the whole picture as we use the default value n=50 to only show 50 highly significant terms. In the enrichMap, we can found that there are many redundant terms form a highly condense network.\nNow with the simplify method, we can remove redundant terms.\nbp2 \u0026lt;- simplify(bp, cutoff=0.7, by=\u0026quot;p.adjust\u0026quot;, select_fun=min)  The simplify method apply \u0026lsquo;select_fun\u0026rsquo; (which can be a user defined function) to feature \u0026lsquo;by\u0026rsquo; to select one representative terms from redundant terms (which have similarity higher than \u0026lsquo;cutoff\u0026rsquo;). The simplified version of enriched result is more clear and give us a more comprehensive view of the whole story.\nenrichGO test the whole GO corpus and enriched result may contains very general terms. clusterProfiler contains a dropGO function to remove specific GO terms or GO level, see the issue. With simplify and dropGO, enriched result can be more specific and more easy to interpret. Both of these functions work fine with outputs obtained from both enrichGO and compareCluster.🍻\nCitation Yu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\n","date":1445391431,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1445391431,"objectID":"e9454da13d0ef5345d656af0cd951a31","permalink":"https://guangchuangyu.github.io/2015/10/use-simplify-to-remove-redundancy-of-enriched-go-terms/","publishdate":"2015-10-21T09:37:11+08:00","relpermalink":"/2015/10/use-simplify-to-remove-redundancy-of-enriched-go-terms/","section":"post","summary":"To simplify enriched GO result, we can use slim version of GO and use enricher function to analyze.\nAnother strategy is to use GOSemSim to calculate similarity of GO terms and remove those highly similar terms by keeping one representative term. To make this feature available to clusterProfiler users, I develop a simplify method to reduce redundant GO terms from output of enrichGO function.\nrequire(clusterProfiler) data(geneList, package=\u0026quot;DOSE\u0026quot;) de \u0026lt;- names(geneList)[abs(geneList) \u0026gt; 2] bp \u0026lt;- enrichGO(de, ont=\u0026quot;BP\u0026quot;) enrichMap(bp) ","tags":["clusterProfiler"],"title":"use simplify to remove redundancy of enriched GO terms","type":"post"},{"authors":null,"categories":["R"],"content":"In BioC 3.2 release, all my packages including GOSemSim, clusterProfiler, DOSE, ReactomePA, and ChIPseeker switch from Sweave to R Markdown for package vignettes.\nGOSemSim To make it consistent between GOSemSim and clusterProfiler, \u0026lsquo;worm\u0026rsquo; was deprecated and instead we should use \u0026lsquo;celegans\u0026rsquo;. As usual, information content data was updated.\nclusterProfiler Enrichment results may contains terms that are very general (less informative) and we do not want to use them. In this release, we provide dropGO function that can be used to drop selected GO terms or specific level of GO terms. It can be applied to output from both enrichGO and compareCluster. This is a feature request from @ahorvath.\nAnother feature request is to visualize GO enrichment result with GO topology. I implement plotGOgraph function by extending topGO to support output of both enrichGO or gseGO.\ndotplot is another feature request and was implemented in DOSE as a general function for visualize enrichment result. clusterProfiler import this function.\nmerge_result function was implemented for merging enrichment results and then the results can be visualized simultaneously for comparison. This function was developed for comparing functional enrichment of GTEx paper. An example of comparing results from clusterProfiler and DAVID can be found in github.\nA section \u0026lsquo;Functional analysis of NGS data\u0026rsquo; was added in the vignette. The blog post illustrated using enricher and GSEA function to analyze user defined annotation.\nDOSE Network of Cancer Genes data was updated to version 4.9.0, contributed by @dalloliogm.\ndotplot function was implemented for visualizing enrichment result and was imported to clusterProfiler and ReactomePA.\nWith new release of ChIPseeker, DOSE can be applied to NGS data.\nSeveral bugs were removed and small improvement were incorporated.\nReactomePA Now fly (Drosophila melanogaster) is supported.\nviewPathway supports other organisms, which was contributed by @vladpetyuk.\nImport dotplot from DOSE and add \u0026lsquo;Pathway analysis of NGS data\u0026rsquo; section in vignette.\nChIPseeker Implement seq2gene function for linking genomic regions to genes by many-to-many mapping. With this function, enrichment analysis of clusterProfiler, DOSE and ReactomePA can be applied to NGS data.\nupsetplot function is implemented for viewing overlap of ChIP annotation.\nBetter implementation of internal function getFirstHitIndex contributed by @hpages. Now annotating a BED file of size about 1GB only take several minutes.\nAn issue of BED file that using the 0-based coordinate system was fixed.\nGEO data information was updated, now ChIPseeker contains more than 18,000 BED file information. User can compare their own data with those deposited in GEO to identify co-occurrence binding proteins that maybe cooperated with the one we are interested in.\nggtree My major focus in the past half year is on developing ggtree. ggtree has a lot of changes. Some of the updates can be found in Bioconductor Newsletter (Oct. 2015). In addition, I would like to emphasize the subview function which works fine with all the ggplot objects and was applied to plot pie graph on a map.\nggtree can be fun by using symbolic fonts, cartoonize the tree or annotating the tree with emoji.\nThere are many updates that based on the github version of ggplot2. Since the new features of ggplot2 are currently not available in CRAN. I do not commit the change to Bioconductor and will introduce these new feature to ggtree user when new version of ggplot2 is available in CRAN.\nCitation Yu G, Wang LG and He QY*. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. Bioinformatics 2015, 31(14):2382-2383.\n\nYu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\nG Yu, LG Wang, GR Yan, QY He. DOSE: an R/Bioconductor package for Disease Ontology Semantic and Enrichment analysis. Bioinformatics 2015, 31(4):608-609.\n\nG Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \nYu G†, Li F†, Qin Y, Bo X*, Wu Y and Wang S*. GOSemSim: an R package for measuring semantic similarity among GO terms and gene products. Bioinformatics. 2010, 26(7):976-978.\n \nG Yu, QY He*. ReactomePA: an R/Bioconductor package for reactome pathway analysis and visualization. Molecular BioSystems 2016, 12(2):477-479.\n\n","date":1444896837,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1444896837,"objectID":"d907492dc31f4df7c6f68df400a5ce4c","permalink":"https://guangchuangyu.github.io/2015/10/bioc-32-news-of-my-bioc-packages/","publishdate":"2015-10-15T16:13:57+08:00","relpermalink":"/2015/10/bioc-32-news-of-my-bioc-packages/","section":"post","summary":"In BioC 3.2 release, all my packages including GOSemSim, clusterProfiler, DOSE, ReactomePA, and ChIPseeker switch from Sweave to R Markdown for package vignettes.\nGOSemSim To make it consistent between GOSemSim and clusterProfiler, \u0026lsquo;worm\u0026rsquo; was deprecated and instead we should use \u0026lsquo;celegans\u0026rsquo;. As usual, information content data was updated.\n","tags":["BioC","GOSemSim","clusterProfiler","DOSE","ReactomePA","ggtree","ChIPseeker"],"title":"[Bioc 32] NEWS of my BioC packages","type":"post"},{"authors":null,"categories":["Genomics","Systems Biology","R"],"content":"ChIP-seq is rapidly becoming a common technique and there are a large number of dataset available in the public domain. Results from individual experiments provide a limited understanding of chromatin interactions, as there is many factors cooperate to regulate transcription. Unlike other tools that designed for single dataset, ChIPseeker is designed for comparing profiles of ChIP-seq datasets at different levels.\nWe provide functions to compare profiles of peaks binding to TSS regions, annotation, and enriched functional profiles. More importantly, ChIPseeker incorporates statistical testing of co-occurrence of different ChIP-seq datasets and can be used to identify co-factors.\n\u0026gt; library(ChIPseeker) \u0026gt; ff=getSampleFiles() \u0026gt; x = enrichPeakOverlap(ff[[5]], unlist(ff[1:4]), nShuffle=10000, pAdjustMethod=\u0026quot;BH\u0026quot;, chainFile=NULL) \u0026gt;\u0026gt; permutation test of peak overlap... 2015-09-24 14:23:43 |======================================================================| 100% \u0026gt; x qSample ARmo_0M GSM1295077_CBX7_BF_ChipSeq_mergedReps_peaks.bed.gz ARmo_1nM GSM1295077_CBX7_BF_ChipSeq_mergedReps_peaks.bed.gz ARmo_100nM GSM1295077_CBX7_BF_ChipSeq_mergedReps_peaks.bed.gz CBX6_BF GSM1295077_CBX7_BF_ChipSeq_mergedReps_peaks.bed.gz tSample qLen tLen N_OL ARmo_0M GSM1174480_ARmo_0M_peaks.bed.gz 1663 812 0 ARmo_1nM GSM1174481_ARmo_1nM_peaks.bed.gz 1663 2296 8 ARmo_100nM GSM1174482_ARmo_100nM_peaks.bed.gz 1663 1359 3 CBX6_BF GSM1295076_CBX6_BF_ChipSeq_mergedReps_peaks.bed.gz 1663 1331 968 pvalue p.adjust ARmo_0M 0.88901110 0.88901110 ARmo_1nM 0.15118488 0.30236976 ARmo_100nM 0.37296270 0.49728360 CBX6_BF 0.00009999 0.00039996  The enrichment analysis of peak overlap is based on permutation test. nShuffle of random ChIP data were generated to estimate the background null distribution of the overlap and p-value is then calculated by the probability of observing more extreme overlap. Multiple comparison correction is also incorporated.\nThe most exciting feature in ChIPseeker is that it collected more than 18,000 bed file information from GEO database and make this co-factor inference available to the community. With these datasets, we can compare our own dataset to those deposited in GEO to identify co-occurrence binding proteins that maybe cooperated with the one we are interested in. Hypothesis can be generated by this inference and serve as a starting point for further study.\nReference G Yu, LG Wang, QY He. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. Bioinformatics. 2015, 31(14):2382-2383. PMID:25765347.\n\n","date":1443661686,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1443661686,"objectID":"f6fa2655cf62a12c86856611cf55ab8c","permalink":"https://guangchuangyu.github.io/2015/10/chipseq-data-mining-with-chipseeker/","publishdate":"2015-10-01T09:08:06+08:00","relpermalink":"/2015/10/chipseq-data-mining-with-chipseeker/","section":"post","summary":"ChIP-seq is rapidly becoming a common technique and there are a large number of dataset available in the public domain. Results from individual experiments provide a limited understanding of chromatin interactions, as there is many factors cooperate to regulate transcription. Unlike other tools that designed for single dataset, ChIPseeker is designed for comparing profiles of ChIP-seq datasets at different levels.\nWe provide functions to compare profiles of peaks binding to TSS regions, annotation, and enriched functional profiles. More importantly, ChIPseeker incorporates statistical testing of co-occurrence of different ChIP-seq datasets and can be used to identify co-factors.\n","tags":["ChIPseeker","interaction"],"title":"ChIPseq data mining with ChIPseeker","type":"post"},{"authors":null,"categories":["R"],"content":"Subsetting is commonly used in ggtree as we would like to for example separating internal nodes from tips. We may also want to display annotation to specific node(s)/tip(s).\nSome software may stored clade information (e.g. bootstrap value) as internal node labels. Indeed we want to manipulate such information and taxa labels separately.\nIn current ggplot2 (version=1.0.1, access date:2015-09-23), it support subset. For instance:\nlibrary(ggplot2) library(ggtree) tree=read.tree(text=\u0026quot;((A:2,B:2)95:2,(C:2,D:2)100:2);\u0026quot;) ggtree(tree) + geom_text(aes(label=label), subset=.(!isTip), hjust=-.2)  But this feature was removed in github version of ggplot2 and will not be available in next release.\nIn github version of ggtree, we implemented geom_text2, geom_point2, and geom_segment2, that works exactly like geom_text, geom_point and geom_segment respectively with subset supported. The syntax is slightly different.\nggtree(tree) + geom_text2(aes(label=label, subset=!isTip), hjust=-.2) + geom_point2(aes(subset=!isTip), color=\u0026quot;red\u0026quot;, size=3)  Note: The example was from the discussion of github issue.\nCitation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1443028821,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1443028821,"objectID":"1ef5c1084713c464686f51b0237a5528","permalink":"https://guangchuangyu.github.io/2015/09/subsetting-data-in-ggtree/","publishdate":"2015-09-24T01:20:21+08:00","relpermalink":"/2015/09/subsetting-data-in-ggtree/","section":"post","summary":"Subsetting is commonly used in ggtree as we would like to for example separating internal nodes from tips. We may also want to display annotation to specific node(s)/tip(s).\nSome software may stored clade information (e.g. bootstrap value) as internal node labels. Indeed we want to manipulate such information and taxa labels separately.\nIn current ggplot2 (version=1.0.1, access date:2015-09-23), it support subset. For instance:\n","tags":["ggtree"],"title":"subsetting data in ggtree","type":"post"},{"authors":null,"categories":["R"],"content":"ggtree applies the concepts of grammar of graphic in phylogenetic tree presentation and make it easy to add multiple layers of text and even figures above a 🌲.\nHere, I cartoonize a phylogenetic tree generated by ggtree with comicR, which is a funny package to generate comic (xkcd-like) graph in R. Have fun with ggtree and comicR.\nlibrary(htmltools) library(XML) library(gridSVG) library(comicR)\nlibrary(ggplot2) library(ggtree) p \u0026lt;- ggtree(rtree(30), layout=\u0026quot;fan\u0026quot;) + geom_text(aes(label=label, angle=angle), size=5, color=\u0026quot;purple\u0026quot;, vjust=-0.3) p svg \u0026lt;- grid.export(name=\u0026quot;\u0026quot;)$svg tagList( tags$div( id = \u0026quot;ggtree_comic\u0026quot;, tags$style(\u0026quot;#ggtree_comic text {font-family:Chalkduster;}\u0026quot;), HTML(saveXML(svg)), comicR(\u0026quot;#ggtree_comic\u0026quot;, ff=5) ) ) %\u0026gt;% html_print  Citation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1441646126,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441646126,"objectID":"323ede5d67f5667322e9cd183a0b5523","permalink":"https://guangchuangyu.github.io/2015/09/comic-phylogenetic-tree-with-ggtree-and-comicr/","publishdate":"2015-09-08T01:15:26+08:00","relpermalink":"/2015/09/comic-phylogenetic-tree-with-ggtree-and-comicr/","section":"post","summary":"ggtree applies the concepts of grammar of graphic in phylogenetic tree presentation and make it easy to add multiple layers of text and even figures above a 🌲.\nHere, I cartoonize a phylogenetic tree generated by ggtree with comicR, which is a funny package to generate comic (xkcd-like) graph in R. Have fun with ggtree and comicR.\n","tags":["ggtree"],"title":"comic phylogenetic tree with ggtree and comicR","type":"post"},{"authors":null,"categories":["Visualization","R"],"content":"I implemented a function, subview, in ggtree that make it easy to embed a subplot in ggplot.\nAn example is shown below:\nlibrary(ggplot2) library(ggtree) dd \u0026lt;- data.frame(x=LETTERS[1:3], y=1:3) pie \u0026lt;- ggplot(dd, aes(x=1, y, fill=x)) + geom_bar(stat=\u0026quot;identity\u0026quot;, width=1) + coord_polar(theta=\u0026quot;y\u0026quot;) + theme_tree() + xlab(NULL) + ylab(NULL) + theme_transparent() x \u0026lt;- sample(2:9) y \u0026lt;- sample(2:9) width \u0026lt;- sample(seq(0.05, 0.15, length.out=length(x))) height \u0026lt;- width p \u0026lt;- ggplot(data=data.frame(x=c(0, 10), y=c(0, 10)), aes(x, y))+geom_blank() print(p) for (i in seq_along(x)) { p %\u0026lt;\u0026gt;% subview(pie, x[i], y[i], width[i], height[i]) print(p) }  With this function, we can plot a specific clade and add a subplot of the whole topology; we can also add relative statistic graph above the tree or to a specific node. It\u0026rsquo;s not specific to phylogenetic tree, it works with all ggplot objects as demonstrated in the example.\nPS: ggtree is now presented in CRAN Task View: Phylogenetics. AND get its first citation. Citation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1440962268,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1440962268,"objectID":"be5ae035702dac5ba14ea110e9ca4b49","permalink":"https://guangchuangyu.github.io/2015/08/subview/","publishdate":"2015-08-31T03:17:48+08:00","relpermalink":"/2015/08/subview/","section":"post","summary":"I implemented a function, subview, in ggtree that make it easy to embed a subplot in ggplot.\nAn example is shown below:\nlibrary(ggplot2) library(ggtree) dd \u0026lt;- data.frame(x=LETTERS[1:3], y=1:3) pie \u0026lt;- ggplot(dd, aes(x=1, y, fill=x)) + geom_bar(stat=\u0026quot;identity\u0026quot;, width=1) + coord_polar(theta=\u0026quot;y\u0026quot;) + theme_tree() + xlab(NULL) + ylab(NULL) + theme_transparent() x \u0026lt;- sample(2:9) y \u0026lt;- sample(2:9) width \u0026lt;- sample(seq(0.05, 0.15, length.out=length(x))) height \u0026lt;- width p \u0026lt;- ggplot(data=data.frame(x=c(0, 10), y=c(0, 10)), aes(x, y))+geom_blank() print(p) for (i in seq_along(x)) { p %\u0026lt;\u0026gt;% subview(pie, x[i], y[i], width[i], height[i]) print(p) } ","tags":["ggtree"],"title":"subview","type":"post"},{"authors":null,"categories":["Bioinformatics","Genomics","R"],"content":"I found a Bioconductor package, seq2pathway, that can apply functional analysis to NGS data. It consists of two components, seq2gene and gene2pathway. seq2gene converts genomic coordination to genes while gene2pathway performs functional analysis at gene level.\nI think it would be interesting to incorporate seq2gene with clusterProfiler. But it fail to run due to it call absolute path of python installed in the author\u0026rsquo;s computer. THIS should never be happened in a Bioconductor package since Bioconductor requires every package to have a least one vignette and runnable examples in man files. It turns out that there is no runnable example in either the vignette or man files. This package was compiled successfully in all platforms but it actually can only be run in windows platform with python installed exactly in the same path of the author. I don\u0026rsquo;t know why Bioconductor core team didn\u0026rsquo;t detect this issue when reviewing this package and why reviewers of Bioinformatics didn\u0026rsquo;t test the package.\nI modified \u0026lsquo;C:/Python27/python\u0026rsquo;, to \u0026lsquo;python\u0026rsquo;. But it still throw error:\nThis is due to the author used \u0026lsquo;\\\\\u0026rsquo; as folder separator which is Windows platform specific.\ncommand \u0026lt;- paste(\u0026quot;C:/Python27/python \u0026quot;, tempdir(),\u0026quot;\\\\\u0026quot;,name,sep=\u0026quot;\u0026quot;)  AND I found that there are many \u0026lsquo;\\\\\u0026rsquo; in the source code.\nSo I gave up to try this package and reinvented the wheel.\nIt\u0026rsquo;s not difficult to implement a seq2gene function using internal functions already available in my package ChIPseeker. It only took me half hour and was available since version 1.5.5.\nseq2gene provided by ChIPseeker considers host gene (exon/intron), promoter region and flanking gene from intergenomic region.\nWith ChIPseeker, user can annotates genomic coordination by nearest gene, host gene, flanking genes or consider all of them by seq2gene and performs GO/KEGG/DO/Reactome analysis with clusterProfiler/DOSE/ReactomePA at gene level. A scenario can be found in Bioconductor support site, that used ChIPseeker to retrieve 5 genes flanking of each enhancer followed by GO analysis.\nNote: seq2pathway, https://github.com/Bioconductor-mirror/seq2pathway, version 1.1.2, access date 21 Aug, 2015\nCitation Yu G, Wang LG and He QY*. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. Bioinformatics 2015, 31(14):2382-2383.\n\n","date":1440098541,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1440098541,"objectID":"ece3a685087ff81a3b185d6e4253af1a","permalink":"https://guangchuangyu.github.io/2015/08/functional-enrichment-analysis-with-ngs-data/","publishdate":"2015-08-21T03:22:21+08:00","relpermalink":"/2015/08/functional-enrichment-analysis-with-ngs-data/","section":"post","summary":"I found a Bioconductor package, seq2pathway, that can apply functional analysis to NGS data. It consists of two components, seq2gene and gene2pathway. seq2gene converts genomic coordination to genes while gene2pathway performs functional analysis at gene level.\nI think it would be interesting to incorporate seq2gene with clusterProfiler. But it fail to run due to it call absolute path of python installed in the author\u0026rsquo;s computer. ","tags":["ChIPseeker","clusterProfiler"],"title":"functional enrichment analysis with NGS data","type":"post"},{"authors":null,"categories":["R"],"content":"The ENCODE consortium has recently published a great paper on Gene Expression from the GTEx dataset. A criticism raised on pubpeer is that the gene ontology enrichment analysis was done with DAVID which has not been updated in the last five years.\nThe result is shown below: It would be interest to see if results change by using clusterProfiler to reproduce GO \u0026amp; KEGG analyses.\nFor GO (BP) analysis: 1. clusterProfiler (194) annotate more genes than DAVID (168). 2. DAVID enriches 14 BP terms while clusterProfiler enriches 222 BP terms. 3. All enriched terms reported in DAVID were also reported by clusterProfiler. 4. The result is consistent that the enriched terms are related to translation and protein biosynthesis with many detail and informative terms reported only by clusterProfiler.\nFor KEGG analysis: 1. DAVID annotates 5085 genes in background while clusterProfiler use latest online version that annotates 6895 genes. 2. DAVID only annotate 83 genes, while clusterProfiler can annotate 104 genes of the gene list with 212 genes in total. 3. DAVID only enrich 1 KEGG terms, while clusterProfiler enriches 9 KEGG terms. 4. The enriched term reported in DAVID is also reported by clusterProfiler.\nIt would also be interest to see whether these genes are related to specific diseases/pathways and I run DOSE/ReactomePA to analyze them.\nI found that cancer and disease of cellular proliferation terms enriched.\nWith ReactomePA, I found 3 cluster of pathways. Two are consistent with GO/KEGG/DO enrichment result that is translation related with more clear evidence of high splicing variability. Another cluster of pathways related to immune response which is not discovered by other ontology/pathway. These immune-related pathways did not reported in the paper but apparently immune responses are related to high splicing variability.\nFor more detail please refer to github repository, https://github.com/GuangchuangYu/enrichment4GTEx_clusterProfiler, which contains rmarkdown source file to reproduce the results. You can try other annotation data and also GSEA to explore GTEx.\nCitation Yu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\n","date":1439415867,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1439415867,"objectID":"41053a30f271bd61c5ba57e20aab7c2e","permalink":"https://guangchuangyu.github.io/2015/08/functional-enrichment-for-gtex-paper/","publishdate":"2015-08-13T05:44:27+08:00","relpermalink":"/2015/08/functional-enrichment-for-gtex-paper/","section":"post","summary":"The ENCODE consortium has recently published a great paper on Gene Expression from the GTEx dataset. A criticism raised on pubpeer is that the gene ontology enrichment analysis was done with DAVID which has not been updated in the last five years.\nThe result is shown below: ","tags":["clusterProfiler","DOSE","ReactomePA"],"title":"functional enrichment for GTEx paper","type":"post"},{"authors":null,"categories":["Bioinformatics","R"],"content":"In supplemental file of ChIPseeker paper, I compare distances to TSS reported by several ChIP annotation software, including ChIPseeker, ChIPpeakAnno, HOMER and PeakAnalyzer.\nAlthough I found that the chromStart positions in HOMER output have a +1 shift compare to other software, I did not realize this issue since all other software are consistent.\nUntil recently, I found BAM, BCF, BED and PSL formats are using the 0-based coordinate system, while SAM, VCF, GFF and Wiggle formats are using the 1-based coordinate system.\nFor BED file format, we can refer to http://asia.ensembl.org/info/website/upload/bed.html.\nIn addition, the 0-based coordinate system is specified by a half-closed-half-open interval. For example, the first 100 bases of a chromosome are defined as [0, 100), that span the bases numbered 0-99. While the 1-based coordinate system is specified by a closed interval, for example the above region is [1, 100].\nMost of the software for ChIP annotation doesn\u0026rsquo;t considered this issue when annotating peak (0-based) to transcript (1-based). To my knowledge, only HOMER consider this issue. After I figure this out, I have updated ChIPseeker (version \u0026gt;= 1.4.3) to fix the issue.\nPlease bare in mind that chromStart in ChIPseeker has +1bp shift compare to the number recorded in BED file.\nCitation Yu G, Wang LG and He QY*. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. Bioinformatics 2015, 31(14):2382-2383.\n\n","date":1438887788,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1438887788,"objectID":"4d617348574d5ec743a9efdbe7104de6","permalink":"https://guangchuangyu.github.io/2015/08/parsing-bed-coordinates/","publishdate":"2015-08-07T03:03:08+08:00","relpermalink":"/2015/08/parsing-bed-coordinates/","section":"post","summary":"In supplemental file of ChIPseeker paper, I compare distances to TSS reported by several ChIP annotation software, including ChIPseeker, ChIPpeakAnno, HOMER and PeakAnalyzer.\nAlthough I found that the chromStart positions in HOMER output have a +1 shift compare to other software, I did not realize this issue since all other software are consistent.\n","tags":["ChIPseeker"],"title":"parsing BED coordinates","type":"post"},{"authors":null,"categories":["R"],"content":"In ggtree, we provide a function annotation_image for annotating phylogenetic tree with images.\nTo demonstrate the usage, I created a tree view from a random tree as shown below:\nset.seed(2015-08-01) p \u0026lt;- ggtree(rtree(10)) + xlim(0, 5)+ ylim(0, 11)  We need a data.frame that contains information of taxa labels and image paths. Here I created such a data.frame containing image files downloaded from phylopic.\n\u0026gt; img_info V1 V2 1 t1 25f165fa-f279-4f7c-9869-c55be251ffb8.512.png 2 t2 5d7ab302-960b-4db7-9dfd-215175a55906.512.png 3 t3 6fbe723c-3a6b-4d06-8680-bb2a52113df4.512.png 4 t4 d83c02ca-76ed-436b-83ae-7f98d7297be9.512.png 5 t5 ee764929-c865-44f6-b5db-b4e7d5693d1a.512.png  Annotating tree with images is simple in ggtree by using annotation_image function.\nannotation_image(p, img_info)  By default, all the images will align to the right hand side. We can use align=FALSE, to disable it.\nannotation_image(p, img_info, align=FALSE)  We can change the type and size of lines, as demonstrated below:\nannotation_image(p, img_info, linetype=\u0026quot;dashed\u0026quot;, linesize=0.2)  The width of the images were controlled by width parameter, and the height will automatically determined by image dimension.\nannotation_image(p, img_info, width = .2, linetype=\u0026quot;dashed\u0026quot;, linesize=0.2)  In the following example, we add tip labels to the tree.\np \u0026lt;- p+geom_tiplab(align=TRUE, linetype=\u0026quot;dashed\u0026quot;, linesize=.2) print(p)  If we also want to add the image and align them, we don\u0026rsquo;t want to show the line added by annotation_image function. This can be achieved by setting linetype=NULL. By default the images and tip labels will be overlapped, we can move the images by offset parameter.\np %\u0026gt;% annotation_image(img_info, width=.2, linetype=NULL, offset=.3)  Citation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1438404754,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1438404754,"objectID":"5dc90d213a42eb2860238a20412678f1","permalink":"https://guangchuangyu.github.io/2015/08/ggtree-annotate-phylogenetic-tree-with-local-images/","publishdate":"2015-08-01T12:52:34+08:00","relpermalink":"/2015/08/ggtree-annotate-phylogenetic-tree-with-local-images/","section":"post","summary":"In ggtree, we provide a function annotation_image for annotating phylogenetic tree with images.\n","tags":["ggtree"],"title":"ggtree annotate phylogenetic tree with local images","type":"post"},{"authors":null,"categories":["Genomics","Visualization","R"],"content":"ChIPseeker is an R package for ChIP peak annotation, comparison and visualization.\nWe have implemented several visualization methods, including vennpie that was designed for viewing annotation overlap as shown below:\nNot all overlap information can be demonstrated in vennpie. Upset is an effective way to visualize sets and intersections. We import upset function from UpSetR package and implement upsetplot function, that can visualize ChIP annotation overlap directly with output of annotatePeak.\nlibrary(ChIPseeker) peak_file \u0026lt;- getSampleFiles()[[4]] x \u0026lt;- annotatePeak(peak_file) upsetplot(x)  We add a new parameter, vennpie=FALSE, in upsetplot. If vennpie=TRUE, a vennpie will be added as show below:\nAlthough upset contains more information, vennpie is more intuitive and the final figure is more compact. More information is available at the online vignette.\nReference  Alexander Lex, and Gehlenborg Nils. “Points of View: Sets and Intersections.” Nature Methods 11, no. 8 (August 2014): 779–779. doi:10.1038/nmeth.3033. Guangchuang Yu, Li-Gen Wang, and Qing-Yu He. ChIPseeker: An R/Bioconductor Package for ChIP Peak Annotation, Comparison and Visualization. Bioinformatics 31, no. 14 (July 15, 2015): 2382–83. doi:10.1093/bioinformatics/btv145.  \n Conway Jake, and Gehlenborg Nils, \u0026ldquo;UpSetR\u0026rdquo;, https://github.com/cran/UpSetR. ","date":1438037101,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1438037101,"objectID":"8d0459ce3c8b9103320a082817941f0e","permalink":"https://guangchuangyu.github.io/2015/07/upsetplot-in-chipseeker/","publishdate":"2015-07-28T06:45:01+08:00","relpermalink":"/2015/07/upsetplot-in-chipseeker/","section":"post","summary":"ChIPseeker is an R package for ChIP peak annotation, comparison and visualization.\nWe have implemented several visualization methods, including vennpie that was designed for viewing annotation overlap as shown below:\n","tags":["ChIPseeker"],"title":"upsetplot in ChIPseeker","type":"post"},{"authors":null,"categories":["Bioinformatics","Genomics","Publication","R"],"content":"My R/Bioconductor package, ChIPseeker, published in Bioinformatics.\nChIPseeker had been cited by http://www.biomedcentral.com/1471-2164/16/292 and http://www.jbc.org/content/early/2015/06/18/jbc.M115.668558.short, and was used (not cited) in http://nar.oxfordjournals.org/content/early/2015/06/27/nar.gkv642.abstract and http://emboj.embopress.org/content/early/2014/12/18/embj.201490061.abstract.\nChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization G Yu, LG Wang, QY He. Bioinformatics 2015, 31(14):2382-2383 DOI: 10.1093/bioinformatics/btv145\nSummary: ChIPseeker is an R package for annotating ChIP-seq data analysis. It supports annotating ChIP peaks and provides functions to visualize ChIP peaks coverage over chromosomes and profiles of peaks binding to TSS regions. Comparison of ChIP peak profiles and annotation are also supported. Moreover, it supports evaluating significant overlap among ChIP-seq datasets. Currently, ChIPseeker contains 15 000 bed file information from GEO database. These datasets can be downloaded and compare with user’s own data to explore significant overlap datasets for inferring co-regulation or transcription factor complex for further investigation. Availability and implementation: ChIPseeker is released under Artistic-2.0 License. The source code and documents are freely available through Bioconductor (http://www.bioconductor.org/packages/release/bioc/html/ChIPseeker.html).\n","date":1436746490,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1436746490,"objectID":"39d84f050c486fe9737e313b39f3ffd9","permalink":"https://guangchuangyu.github.io/2015/07/chipseeker-an-r/bioconductor-package-for-chip-peak-annotation-comparison-and-visualization/","publishdate":"2015-07-13T08:14:50+08:00","relpermalink":"/2015/07/chipseeker-an-r/bioconductor-package-for-chip-peak-annotation-comparison-and-visualization/","section":"post","summary":"My R/Bioconductor package, ChIPseeker, published in Bioinformatics.\nChIPseeker had been cited by http://www.biomedcentral.com/1471-2164/16/292 and http://www.jbc.org/content/early/2015/06/18/jbc.M115.668558.short, and was used (not cited) in http://nar.oxfordjournals.org/content/early/2015/06/27/nar.gkv642.abstract and http://emboj.embopress.org/content/early/2014/12/18/embj.201490061.abstract.\n","tags":["ChIPseeker","ChIPseq"],"title":"ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization","type":"post"},{"authors":["**G Yu**","LG Wang","QY He*"],"categories":null,"content":"","date":1435708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1435708800,"objectID":"f7e7741ec432fda98059ec03961839e3","permalink":"https://guangchuangyu.github.io/publication/chipseeker/","publishdate":"2015-07-01T00:00:00Z","relpermalink":"/publication/chipseeker/","section":"publication","summary":"Summary: ChIPseeker is an R package for annotating ChIP-seq data analysis. It supports annotating ChIP peaks and provides functions to visualize ChIP peaks coverage over chromosomes and profiles of peaks binding to TSS regions. Comparison of ChIP peak profiles and annotation are also supported. Moreover, it supports evaluating significant overlap among ChIP-seq datasets. Currently, ChIPseeker contains 15 000 bed file information from GEO database. These datasets can be downloaded and compare with user's own data to explore significant overlap datasets for inferring co-regulation or transcription factor complex for further investigation.","tags":null,"title":"ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization","type":"publication"},{"authors":null,"categories":["R"],"content":"flip function is a feature request from ggtree user. It accepts a tree view and two node numbers and exchange the positions of the selected clades.\nrequire(ggtree) set.seed(2015-07-01) tr \u0026lt;- rtree(30) p \u0026lt;- ggtree(tr) + geom_text(aes(label=node)) gridExtra::grid.arrange(p, flip(p, 38, 33), ncol=2)  It\u0026rsquo;s chainable and all possible position adjustment can be achieved via multiple flip operations.\nflip(p, 38, 33) %\u0026gt;% flip(53, 58) %\u0026gt;% flip(32, 51)  It\u0026rsquo;s tedious to rotate a clade by 180 degree with several flip operations, ggtree provides another function rotate that accepts a selected node and rotate that branch by 180 degree.\ncol = c(\u0026quot;black\u0026quot;, \u0026quot;firebrick\u0026quot;, \u0026quot;steelblue\u0026quot;)[groupClade(tr, c(33, 52))] gridExtra::grid.arrange(ggtree(tr, color=col), ggtree(tr, color=col) %\u0026gt;% rotate(33) %\u0026gt;% rotate(52), ncol=2)  Citation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1435690294,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1435690294,"objectID":"0e24aca662b76b9ede8d64b6b420d178","permalink":"https://guangchuangyu.github.io/2015/07/flip-and-rotate-branches-in-ggtree/","publishdate":"2015-07-01T02:51:34+08:00","relpermalink":"/2015/07/flip-and-rotate-branches-in-ggtree/","section":"post","summary":"flip function is a feature request from ggtree user. It accepts a tree view and two node numbers and exchange the positions of the selected clades.\nrequire(ggtree) set.seed(2015-07-01) tr \u0026lt;- rtree(30) p \u0026lt;- ggtree(tr) + geom_text(aes(label=node)) gridExtra::grid.arrange(p, flip(p, 38, 33), ncol=2) ","tags":["ggtree"],"title":"flip and rotate branches in ggtree","type":"post"},{"authors":null,"categories":["Visualization","R"],"content":"This is a feature request from clusterProfiler user. It\u0026rsquo;s similar to what I implemented in clusterProfiler for comparing biological themes. For comparing different enrichment results, the x-axis represent different gene clusters while for a single enrichment result, the x-axis can be gene count or gene ratio. This is actually similar to traditional barplot, with dot position as bar height and dot color as bar color. But dotplot can represent one more feature nicely by dot size and it can be a good alternative to barplot.\nlibrary(DOSE) deg = names(geneList)[abs(geneList) \u0026gt; 1] do = enrichDO(deg) dotplot(do, showCategory=20)  We can set the x-axis to use gene count and dot color by one of \u0026lsquo;pvalue\u0026rsquo;, \u0026lsquo;p.adjust\u0026rsquo; or \u0026lsquo;qvalue\u0026rsquo;.\ndotplot(do, x=\u0026quot;count\u0026quot;, showCategory=20, colorBy=\u0026quot;qvalue\u0026quot;)  The dotplot function is also available in clusterProfiler and ReactomePA.\nCitation Yu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\n","date":1435009029,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1435009029,"objectID":"a6d53dae6a6064958031e04d0332b944","permalink":"https://guangchuangyu.github.io/2015/06/dotplot-for-enrichment-result/","publishdate":"2015-06-23T05:37:09+08:00","relpermalink":"/2015/06/dotplot-for-enrichment-result/","section":"post","summary":"This is a feature request from clusterProfiler user. It\u0026rsquo;s similar to what I implemented in clusterProfiler for comparing biological themes. For comparing different enrichment results, the x-axis represent different gene clusters while for a single enrichment result, the x-axis can be gene count or gene ratio. This is actually similar to traditional barplot, with dot position as bar height and dot color as bar color. But dotplot can represent one more feature nicely by dot size and it can be a good alternative to barplot.\n","tags":["clusterProfiler","DOSE","ReactomePA"],"title":"dotplot for enrichment result","type":"post"},{"authors":null,"categories":["R"],"content":"showtext is a neat solution to use various types of fonts in R graphs and make it easy to use funny fonts. With showtext, we can draw phylogenetic tree with different types of fonts even with symbolic/icon fonts.\nrequire(showtext) font.add.google(\u0026quot;Gochi Hand\u0026quot;, \u0026quot;gochi\u0026quot;) font.add.google(\u0026quot;Rock Salt\u0026quot;, \u0026quot;rock\u0026quot;) link = \u0026quot;http://img.dafont.com/dl/?f=wm_people_1\u0026quot;; download.file(link, \u0026quot;wmpeople1.zip\u0026quot;, mode = \u0026quot;wb\u0026quot;); unzip(\u0026quot;wmpeople1.zip\u0026quot;); font.add(\u0026quot;wmpeople1\u0026quot;, \u0026quot;wmpeople1.TTF\u0026quot;); link = \u0026quot;http://img.dafont.com/dl/?f=emoticons\u0026quot;; download.file(link, \u0026quot;emoticons.zip\u0026quot;, mode = \u0026quot;wb\u0026quot;); unzip(\u0026quot;emoticons.zip\u0026quot;); font.add(\u0026quot;emoticons\u0026quot;, \u0026quot;emoticons.ttf\u0026quot;); showtext.auto() set.seed(2015-05-14) library(ggplot2) library(ggtree) tree \u0026lt;- rtree(30) ggtree(tree, color=\u0026quot;darkgreen\u0026quot;) + geom_tiplab(family=\u0026quot;gochi\u0026quot;) + theme_classic() + theme(axis.text.x=element_text(size=rel(4), family=\u0026quot;emoticons\u0026quot;, color=\u0026quot;firebrick\u0026quot;)) + scale_y_continuous(breaks=seq(0, 30, 4), labels=letters[c(12:17, 20, 21)]) + theme(axis.text.y=element_text(size=rel(4), family=\u0026quot;wmpeople1\u0026quot;, color=\u0026quot;#FDAC4F\u0026quot;)) + annotate(\u0026quot;text\u0026quot;, x=2, y=18, label=\u0026quot;Have fun with ggtree!\u0026quot;, family=\u0026quot;rock\u0026quot;, angle=30, size=12, color=\u0026quot;steelblue\u0026quot;)  download.file(\u0026quot;http://dl.dafont.com/dl/?f=people_freak\u0026quot;, \u0026quot;people_freak.zip\u0026quot;, mode=\u0026quot;wb\u0026quot;) unzip(\u0026quot;people_freak.zip\u0026quot;) font.add(\u0026quot;people_freak\u0026quot;, \u0026quot;People_freak.ttf\u0026quot;) ggtree(rtree(10)) + geom_text(aes(label=node, color=isTip), family=\u0026quot;people_freak\u0026quot;, hjust=0)  Funny fonts can be downloaded from 1, 2 and 3.\nCitation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1434061196,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1434061196,"objectID":"633f18698d346edbf0469909e867e4a5","permalink":"https://guangchuangyu.github.io/2015/06/ggtree-with-funny-fonts/","publishdate":"2015-06-12T06:19:56+08:00","relpermalink":"/2015/06/ggtree-with-funny-fonts/","section":"post","summary":"showtext is a neat solution to use various types of fonts in R graphs and make it easy to use funny fonts. With showtext, we can draw phylogenetic tree with different types of fonts even with symbolic/icon fonts.\nrequire(showtext) font.add.google(\u0026quot;Gochi Hand\u0026quot;, \u0026quot;gochi\u0026quot;) font.add.google(\u0026quot;Rock Salt\u0026quot;, \u0026quot;rock\u0026quot;) link = \u0026quot;http://img.dafont.com/dl/?f=wm_people_1\u0026quot;; download.file(link, \u0026quot;wmpeople1.zip\u0026quot;, mode = \u0026quot;wb\u0026quot;); unzip(\u0026quot;wmpeople1.zip\u0026quot;); font.add(\u0026quot;wmpeople1\u0026quot;, \u0026quot;wmpeople1.TTF\u0026quot;); link = \u0026quot;http://img.dafont.com/dl/?f=emoticons\u0026quot;; download.file(link, \u0026quot;emoticons.zip\u0026quot;, mode = \u0026quot;wb\u0026quot;); unzip(\u0026quot;emoticons.zip\u0026quot;); font.add(\u0026quot;emoticons\u0026quot;, \u0026quot;emoticons.ttf\u0026quot;); showtext.auto() set.seed(2015-05-14) library(ggplot2) library(ggtree) tree \u0026lt;- rtree(30) ggtree(tree, color=\u0026quot;darkgreen\u0026quot;) + geom_tiplab(family=\u0026quot;gochi\u0026quot;) + theme_classic() + theme(axis.text.x=element_text(size=rel(4), family=\u0026quot;emoticons\u0026quot;, color=\u0026quot;firebrick\u0026quot;)) + scale_y_continuous(breaks=seq(0, 30, 4), labels=letters[c(12:17, 20, 21)]) + theme(axis.text.y=element_text(size=rel(4), family=\u0026quot;wmpeople1\u0026quot;, color=\u0026quot;#FDAC4F\u0026quot;)) + annotate(\u0026quot;text\u0026quot;, x=2, y=18, label=\u0026quot;Have fun with ggtree!\u0026quot;, family=\u0026quot;rock\u0026quot;, angle=30, size=12, color=\u0026quot;steelblue\u0026quot;) ","tags":["ggtree"],"title":"ggtree with funny fonts","type":"post"},{"authors":null,"categories":["Bioinformatics","Research","R"],"content":"I found source code plagiarism a year ago and reported this case to BMC Systems Biology:\nI listed source code of many functions that are exactly copied from GOSemSim with only function name changed in my email. The detail of source code plagiarism can also be found at Proper use of GOSemSim.\nI got reply from the Editor 3 days after (see screenshot).\n MS: 1069569029107167 Research ppiPre: predicting protein-protein interactions by combining heterogeneous features BMC Systems Biology 2013, 7:S8\nDear Dr Yu,\nThank you for your message and bringing this to our attention. Firstly I would like to assure you that we do take cases of plagiarism very seriously. We are members of the Committee on Publication Ethics (http://publicationethics.org) follow their guidelines for circumstances such as this.\nAs a first step we will be investigating the overlap between this publication in BMC Systems Biology and your previously published work, to establish the extent of the duplication.\nCould I just check, have you compared all the code in the ppiPRE article for similarity with your own code? That is, is there any possibility that more of your code has been duplicated without attribution? We will of course have to examine the code for unattributed use of other authors code in addition to your own\nPlease do let us know if there are more relevant details you are aware of. We will be in contact again in due course as our investigations proceed, but do not hesitate to contact me in the meantime if you would like an update\nBest wishes, Tim\n The editor assured me that they \u0026lsquo;do take cases of plagiarism very seriously\u0026rsquo; and will investigate the overlap. I was waiting for their update. But 5 months passed, I never receive any reply from them even I sent several emails to ask for updates. I have no idea how long their \u0026lsquo;due course\u0026rsquo; is. As I did not receive any reply, I wrote a blog post (see Proper use of GOSemSim) to bring this to the R community and CRAN did remove the ppiPre package at that time. I told the Editor that this package had been removed from CRAN and again asked for update. This time, he did reply me (see screenshot):\n MS: 1069569029107167 Research ppiPre: predicting protein-protein interactions by combining heterogeneous features BMC Systems Biology 2013, 7:S8\nDear Guangchuang,\nThank you for your message and my apologies for the delay in this investigation. We had been trying to identify if any other code had also been plagiarised in the publication, although we did not find any evidence of this. Thank you also for drawing our attention to the removal of ppiPre from CRAN. We will be in touch with the article authors and will let you know when there is a further update.\nRegards, Tim\n As we can find in the editor\u0026rsquo;s email, \u0026lsquo;We will be in touch with the article authors\u0026rsquo;, they never contact the authors after 5 months passed from my report. In the following 2 months, I never receive any reply again. I was angry and sent an email to several Editors of BMC to complain that they are ruinning the reputation of BMC. Then again as expected, I got email (see screenshot):\n Dear Guangchuang,\nWe are continuing to pursue this case. As you will understand, as well as the clear evidence of plagiarism of your code, we are concerned about possible unacknowledged reuse of other code as well. We have been trying to contact the authors for a full explanation, as this will affect how we can address the issue. Until very recently we had not been successful in contacting them, although they have very recently got back to us and have said that they are considering their response, so we expect an update soon. From our perspective it is highly preferable for the authors to come clean about the issues and for any correction or retraction notice to come from them rather than from the editors, and for this reason it is often a drawn out process.\nThank you for your patience, and I can again assure you that this will be addressed formally in due course.\nYours sincerely, Tim\n I am very happy to see this as the editor told me they have contacted the authors and will have an update soon. I wait another 3 months without any update as usual. I asked for update again and this time they did give me an update (see screenshot):\n Dear Guangchuang,\nLooking back through my emails, I did receive a response back from the authors previously. They in turn said that the email address I had originally been trying to contact them with earlier last year was no longer in use, so they only received my emails when I found an additional alternative email address for the authors in my more recent emails.\nTheir explanation for the use of your code was that as the similarity measures were not their main focus of their study they had intended to either implement existing methods themselves or as in the case of GoSemSim, import the packages. However they had some problems with this and instead utilised the source code directly. Their rationale was that as the code was GPL licenced that this was acceptable, without realising that it was also required to cite the original source.\nThey say they have now created an updated version which they say has the following changes:\n(1) ppiPre imports GOSemSim. (2) ppiPre calls function geneSim() exported by GOSemSim to calculate Wang’s measure, instead of deriving code from GOSemSim directly. (3) Several internal functions of ppiPre (TCSSGetAncestors, GetOntology, GetGOParents, GetLatestCommonAncestor, TCSSCompute_ICA) are derived from GOSemSim since GOSemSim don’t export them. In source code (.R) and manuals (.RD), acknowledgement has been added including the information of author and publication of GOSemSim. (4) The author of GOSemSim (Guangchuang Yu) has been added in the ‘Author’ filed as contributor, as required by CRAN Repository Policy. (5) All the information content data in \\data directory of ppiPre have been removed. ppiPre directly obtained data from GOSemSim.\nThis version has been available in SourceForge (https://sourceforge.net/p/ppipre/). And we are submitting ppiPre to CRAN. We will notify you after ppiPre is available on CRAN.\nThey also apologise for failing to cite you correctly and have asked if they may submit a correction to their article to rectify this. This would be within our policy if this sounds acceptable to you. Please let me know if you would need more details or if you need to get in touch with the authors\nBest wishes, Tim\n After the changes, ppiPre is back to CRAN. Now in CRAN, what we can find is that ppiPre use source code from GOSemSim properly with acknowledgement. They removed all previous source tarball so that their source code plagiarism was gone. Fortunately, github recorded all the changes. The editor delay the processing to give the authors enough time to remove their bad records. I think CRAN shouldn\u0026rsquo;t accept re-submitted package if it was removed for plagiarism issue. In the email, the editor not only conveyed explanation from the author, but also have expressed their opinion: \u0026lsquo;They also apologise for failing to cite you correctly and have asked if they may submit a correction to their article to rectify this. This would be within our policy if this sounds acceptable to you\u0026rsquo;. This is why I think BMC do favor source code plagiarism. Their judgement/opinion is not fair! I can\u0026rsquo;t accept their explanation and replied to the editor (see screenshot):\n Dear Prof. Sands,\nThanks for your email. That makes it more clear.\nI can\u0026rsquo;t accept their explanation.\nThe ppiPre is a die package, they didn\u0026rsquo;t update any source code or IC data after publication, with the fact that annotation packages for calculating IC data have updated several times. The recent changes were forced by my report of plagiarism.\nThe recent update follows the requirement of GPL license which requires the derivative work also GPL licensed and acknowledge original works. That\u0026rsquo;s good, but remember it was forced to happen after my report of source code plagiarism.\nIn the version they published the paper, it is indeed source codes copied without any acknowledgement and the proportion is very large (about 2\u0026frasl;3 of ppiPre was copied from GOSemSim).\nIn their explanation, the author claimed that similarity measures were not their main focus. Can I ask what\u0026rsquo;s their main focus? SVM for protein-pretein interaction prediction as indicated in the title of the paper and in the package name? The SVM in that package is less than 80 lines, https://github.com/cran/ppiPre/blob/master/R/SVMPredict.r with more than half in calling similarity measures, and several empty lines, paramter checking and preparing input and output. They did nothing in svm; they just call e1071::svm in line 28 and and e1071::predict in line 16 with default parameters (users even don\u0026rsquo;t have chance to change kernel function in their package). If that\u0026rsquo;s their main focus, what\u0026rsquo;s their contribution of their paper? In the Method session, their only use a small paragraph, Prediction framework, that only mention they used svm for prediction but with many paragraphs emphasizing they have implemented many GO semantic similarity measures. They call svm implemented in e1071 package to train features calculated by source codes from GOSemSim. How do they explain this? I do have no idea of their so call main focus.\nThey also mentioned that they had problems in importing GOSemSim. This is also un-acceptable. As they copied most of the functions without any change, it is easy to import these functions using GOSemSim:::un-exported_function if the function is not exported. If they don\u0026rsquo;t know this feature and did not google search how to do it. They should contact me for help or ask for my permission of re-using my codes. But they didn\u0026rsquo;t. They may believe they can use my source code freely as it is GPL licensed, they should know that open source license also have requirement of acknowledgement. Even that\u0026rsquo;s due to their ignorance, why they only change the function names to pretend that\u0026rsquo;s their own functions? If these are not their main focus, why more than half of the text in the paper explaining the calculation of these algorithms and claim they were implemented in their package?\nIf they are not intended to do this, they will have acknowledgement in their source code, they will have citation in their paper and they will not just change function name that was copied without other changes. They intended to do so to cheat editor, reviewers and readers.\n (2) ppiPre calls function geneSim() exported by GOSemSim to calculate Wang’s measure, instead of deriving code from GOSemSim directly.\n Besides, most of the source code is not \u0026lsquo;derived\u0026rsquo; but copied from GOSemSim with only function name changed which can still be detected in the updated version, https://github.com/cran/ppiPre/blob/master/R/GOKEGGSims.r.\nBest Regards, Guangchuang\n AND again, the editor just ignore my email! 1 year passed and the case is very clear that they copied my source code and intended to pretend that\u0026rsquo;s their original work and use it to publish a paper. That\u0026rsquo;s definitely plagiarism. The editor replied me very quickly at the beginning and assured me that BMC do take cases like this seriously. I don\u0026rsquo;t know what happened after they contacted the authors. The editor always ignore my email except I put some pressure to them, they delay the process and try to persuade me that this is due to the author\u0026rsquo;s ignorance of open source license and an apology from the author is enough to solve this issue. If you see this post, you are welcome to comment and please help share it to social media. This will helps to give BMC some pressure and I will contact COPE if they won\u0026rsquo;t addressing this.\n","date":1432705124,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1432705124,"objectID":"4d293def299447e58ec58e2b6fb60327","permalink":"https://guangchuangyu.github.io/2015/05/bmc-favors-source-code-plagiarism/","publishdate":"2015-05-27T13:38:44+08:00","relpermalink":"/2015/05/bmc-favors-source-code-plagiarism/","section":"post","summary":"I found source code plagiarism a year ago and reported this case to BMC Systems Biology:\nI listed source code of many functions that are exactly copied from GOSemSim with only function name changed in my email. The detail of source code plagiarism can also be found at Proper use of GOSemSim.\n","tags":["BMC","plagiarism","GOSemSim"],"title":"BMC favors source code plagiarism","type":"post"},{"authors":null,"categories":["Bioinformatics","Systems Biology","R"],"content":"clusterProfiler supports enrichment analysis of both hypergeometric test and gene set enrichment analysis. It internally supports Gene Ontology analysis of about 20 species, Kyoto Encyclopedia of Genes and Genomes (KEGG) with all species that have annotation available in KEGG database, DAVID annotation (only hypergeometric test supported), Disease Ontology and Network of Cancer Genes (via DOSE for human) and Reactome Pathway (via ReactomePA for several species). This is still not enough for users may want to analyze their data with unsupported organisms, slim version of GO, novel functional annotation (eg GO via blastgo and KEGG via KAAS), unsupported ontology/pathway or customized annotation.\nclusterProfiler provides enricher function for hypergeometric test and GSEA function for gene set enrichment analysis that are designed to accept user defined annotation. They accept two additional parameters TERM2GENE and TERM2NAME. As indicated in the parameter names, TERM2GENE is a data.frame with first column of term ID and second column of corresponding mapped gene and TERM2NAME is a data.frame with first column of term ID and second column of corresponding term name. TERM2NAME is optional.\nHere I used DisGeNET which contains 381056 associations, between 16666 genes and 13172 diseases, as an example to demonstrate the usage of enricher and GSEA functions.\n\u0026gt; require(DOSE) \u0026gt; require(clusterProfiler) \u0026gt; data(geneList) \u0026gt; deg \u0026lt;- names(geneList)[abs(geneList)\u0026gt;2] ## downloaded from http://www.disgenet.org/ds/DisGeNET/results/all_gene_disease_associations.tar.gz \u0026gt; gda \u0026lt;- read.delim(\u0026quot;all_gene_disease_associations.txt\u0026quot;) \u0026gt; dim(gda) [1] 415681 9 \u0026gt; head(gda) geneId geneSymbol geneName diseaseId 1 540 ATP7B ATPase, Cu++ transporting, beta polypeptide umls:C0019202 2 540 ATP7B ATPase, Cu++ transporting, beta polypeptide umls:C0019202 3 540 ATP7B ATPase, Cu++ transporting, beta polypeptide umls:C0019202 4 4160 MC4R melanocortin 4 receptor umls:C0028754 5 4160 MC4R melanocortin 4 receptor umls:C0028754 6 3667 IRS1 insulin receptor substrate 1 umls:C0011860 diseaseName score NumberOfPubmeds associationType 1 Hepatolenticular Degeneration 0.9898764 229 GeneticVariation 2 Hepatolenticular Degeneration 0.9898764 229 Biomarker 3 Hepatolenticular Degeneration 0.9898764 229 AlteredExpression 4 Obesity 0.9400000 234 GeneticVariation 5 Obesity 0.9400000 234 Biomarker 6 Diabetes Mellitus, Type 2 0.9077659 106 GeneticVariation source 1 UNIPROT, CTD_human, MGD, RGD, GAD, LHGDN, BeFree 2 UNIPROT, CTD_human, MGD, RGD, GAD, LHGDN, BeFree 3 UNIPROT, CTD_human, MGD, RGD, GAD, LHGDN, BeFree 4 UNIPROT, CTD_human, MGD, RGD, GAD, BeFree 5 UNIPROT, CTD_human, MGD, RGD, GAD, BeFree 6 UNIPROT, CTD_human, MGD, RGD, GAD, BeFree \u0026gt; \u0026gt; disease2gene=gda[, c(\u0026quot;diseaseId\u0026quot;, \u0026quot;geneId\u0026quot;)] \u0026gt; disease2name=gda[, c(\u0026quot;diseaseId\u0026quot;, \u0026quot;diseaseName\u0026quot;)] \u0026gt; x = enricher(deg, TERM2GENE=disease2gene, TERM2NAME=disease2name) \u0026gt; head(summary(x)) ID Description GeneRatio BgRatio umls:C0006142 umls:C0006142 Malignant neoplasm breast 89/196 3324/16666 umls:C0006826 umls:C0006826 NEOPLASM MALIGNANT 113/196 5102/16666 umls:C0678222 umls:C0678222 Breast Carcinoma 83/196 3072/16666 umls:C1458156 umls:C1458156 Recurrent Malignant Neoplasm 47/196 1158/16666 umls:C1458155 umls:C1458155 Breast Neoplasms 60/196 1981/16666 umls:C0600139 umls:C0600139 prostate carcinoma 56/196 2033/16666 pvalue p.adjust qvalue umls:C0006142 4.934860e-16 9.845045e-13 8.249008e-13 umls:C0006826 3.071791e-15 3.064112e-12 2.567371e-12 umls:C0678222 5.894907e-15 3.920113e-12 3.284601e-12 umls:C1458156 3.230248e-14 1.611086e-11 1.349904e-11 umls:C1458155 1.724317e-12 6.880024e-10 5.764664e-10 umls:C0600139 5.025005e-10 1.670814e-07 1.399949e-07 geneID umls:C0006142 4312/10874/991/6280/2305/9493/1062/4605/9833/9133/6279/10403/8685/597/7153/6278/259266/3627/27074/6241/7368/11065/55355/9582/55872/51203/3669/22974/10460/10563/4751/820/27338/890/983/4085/6362/9837/5918/332/3832/6286/5163/2146/3002/50852/7272/2568/9212/51659/1111/9055/4321/3620/6790/891/4174/9232/9370/1602/4629/771/3117/80129/23158/125/1311/5174/4250/2167/652/4036/4137/8839/2066/4693/3158/3169/1408/9547/2922/10647/5304/8614/2625/7802/9/5241/10551 umls:C0006826 4312/10874/55388/991/6280/2305/1062/3868/4605/9833/6279/10403/597/7153/6278/79733/3627/27074/6241/55165/9787/7368/11065/9582/55872/51203/3669/83461/22974/10460/10563/4751/6373/8140/1844/4283/27299/27338/890/9415/983/10232/4085/6362/5080/5918/81620/332/3832/6286/5163/2146/3002/50852/7272/2568/2842/9212/8715/1111/9055/3833/4321/11182/10112/3902/3620/3887/51514/6790/4521/891/8544/24137/10578/9232/9370/1602/3708/9122/10699/4629/771/3117/23158/125/4958/1311/2018/1308/4250/652/80736/4036/8839/2066/4693/3169/1408/9547/2922/1524/1580/10647/5304/8614/2625/7802/11122/9/5241/10551/4969 umls:C0678222 4312/10874/6280/2305/4605/9833/9133/6279/10403/8685/597/7153/6278/259266/3627/27074/6241/55165/11065/55355/9582/55872/51203/3669/10563/4751/820/27338/890/983/4085/6362/9837/5918/332/6286/5163/2146/3002/50852/7272/2568/9212/1111/9055/4321/3620/6790/891/9232/9370/1602/3708/4629/771/3117/23158/125/1311/5174/2532/4250/2167/652/4036/4137/8839/2066/4693/3158/3169/9547/2922/1524/10647/5304/8614/2625/7021/7802/9/5241/10551 umls:C1458156 4312/991/6280/6279/8685/7153/6278/259266/3627/27074/6241/55165/9787/3669/22974/983/10232/4085/5080/332/2146/3002/50852/2568/9212/4321/3620/3887/6790/891/4174/9232/3708/4629/771/3117/23158/730/2018/4036/2066/9547/2625/9/5241/10551/57758 umls:C1458155 4312/10874/2305/4605/9833/9133/10403/597/7153/6278/259266/3627/11065/9582/3669/10563/8140/820/1844/27338/890/9415/983/81620/332/2146/3002/2568/9212/51659/1111/9055/11182/3620/51514/6790/4521/891/8544/9232/9370/1602/771/23158/125/4250/2167/652/8839/2066/3169/10647/5304/8614/2625/7021/9/5241/10551/57758 umls:C0600139 4312/6280/2305/4605/9833/6279/7153/3627/6241/55165/11065/22974/10563/8140/1844/890/983/5080/5918/6286/5163/2146/9212/1111/4321/3620/6790/891/8544/9232/9370/8857/1602/3708/23090/4629/3117/23158/2532/2167/652/80736/4036/3169/9547/2922/11283/1524/5304/8614/2625/79689/11122/9/5241/10551 Count umls:C0006142 89 umls:C0006826 113 umls:C0678222 83 umls:C1458156 47 umls:C1458155 60 umls:C0600139 56 \u0026gt; \u0026gt; barplot(x)  \u0026gt; y = GSEA(geneList, TERM2GENE=disease2gene, TERM2NAME=disease2name) \u0026gt; head(summary(y)) ID Description setSize enrichmentScore umls:C0001418 umls:C0001418 Adenocarcinoma 1224 0.2431172 umls:C0001973 umls:C0001973 Alcoholism 548 -0.3213479 umls:C0002171 umls:C0002171 Alopecia Areata 74 0.5122605 umls:C0003864 umls:C0003864 Arthritis 447 0.3140411 umls:C0003872 umls:C0003872 Arthritis, Psoriatic 122 0.4311280 umls:C0003873 umls:C0003873 Arthritis, Rheumatoid 1186 0.2855594 pvalue p.adjust qvalues umls:C0001418 0 0 0 umls:C0001973 0 0 0 umls:C0002171 0 0 0 umls:C0003864 0 0 0 umls:C0003872 0 0 0 umls:C0003873 0 0 0 \u0026gt; gseaplot(y, \u0026quot;umls:C0003872\u0026quot;)  Citation Yu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\n","date":1431304324,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1431304324,"objectID":"d820d3cedb5488d3fc2023c866545201","permalink":"https://guangchuangyu.github.io/2015/05/use-clusterprofiler-as-an-universal-enrichment-analysis-tool/","publishdate":"2015-05-11T08:32:04+08:00","relpermalink":"/2015/05/use-clusterprofiler-as-an-universal-enrichment-analysis-tool/","section":"post","summary":"clusterProfiler supports enrichment analysis of both hypergeometric test and gene set enrichment analysis. It internally supports Gene Ontology analysis of about 20 species, Kyoto Encyclopedia of Genes and Genomes (KEGG) with all species that have annotation available in KEGG database, DAVID annotation (only hypergeometric test supported), Disease Ontology and Network of Cancer Genes (via DOSE for human) and Reactome Pathway (via ReactomePA for several species). This is still not enough for users may want to analyze their data with unsupported organisms, slim version of GO, novel functional annotation (eg GO via blastgo and KEGG via KAAS), unsupported ontology/pathway or customized annotation.\nclusterProfiler provides enricher function for hypergeometric test and GSEA function for gene set enrichment analysis that are designed to accept user defined annotation. They accept two additional parameters TERM2GENE and TERM2NAME. As indicated in the parameter names, TERM2GENE is a data.frame with first column of term ID and second column of corresponding mapped gene and TERM2NAME is a data.frame with first column of term ID and second column of corresponding term name. TERM2NAME is optional.\n","tags":["clusterProfiler"],"title":"use clusterProfiler as an universal enrichment analysis tool","type":"post"},{"authors":null,"categories":["Proteomics","Publication","R"],"content":"Co-IP is usually used to identified interactions among specific proteins. It is widely used in detecting protein complex. Unfortunately, an identified protein may not be an interactor, and sometimes can be a background contaminant. Ranking proteins can help us to focus a study on a few high quality candidates for subsequent interaction investigation. My R package GOSemSim has been used in many studies to investigate protein protein interaction, see 1, 2, 3, 4 and more.\nIn the study, Proteomic investigation of the interactome of FMNL1 in hematopoietic cells unveils a role in calcium-dependent membrane plasticity, we investigate the interactors of FMNL1 by co-IP followed by LC-MS/MS analysis. In this study, we defined functional similarity as the geometric mean of semantic similarities in molecular function and cellular component. Functional similarity is designed for measuring the strength of the relationship between each protein and its partners by considering function and location of proteins. The similarities were calculated through GOSemSim package. The distributions of the functional similarities were demonstrated in the following figure.\nWe used the average functional similarities between the protein and its interaction partners to rank the protein. Proteins, which have strong relationship in function and location among the proteins within the interactome, were essential for the interactome to exert their functions. AHNAK1 has strong spatial and temporal interaction with other proteins and was selected for functional study. AHNAK1 had not been identified as an interaction partner of FMNL1, and we confirmed that it interacts at its C-terminus with N-terminal region of FMNL1. Previous study had reported AHNAK1 is calcium-dependent, and our study found that FMNL1 enhances ionophore-mediated calcium influx by inducing translocation of AHNAK1. This point to a new function of FMNL1 as a modulator in calcium-dependent cytoskeletal membrane processes.\nCitation Yu G†, Li F†, Qin Y, Bo X*, Wu Y and Wang S*. GOSemSim: an R package for measuring semantic similarity among GO terms and gene products. Bioinformatics. 2010, 26(7):976-978.\n \n","date":1430708235,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1430708235,"objectID":"0af1a5315ffea7c48fb6884638359ab8","permalink":"https://guangchuangyu.github.io/2015/05/using-gosemsim-to-rank-proteins-obtained-by-co-ip/","publishdate":"2015-05-04T10:57:15+08:00","relpermalink":"/2015/05/using-gosemsim-to-rank-proteins-obtained-by-co-ip/","section":"post","summary":"Co-IP is usually used to identified interactions among specific proteins. It is widely used in detecting protein complex. Unfortunately, an identified protein may not be an interactor, and sometimes can be a background contaminant. Ranking proteins can help us to focus a study on a few high quality candidates for subsequent interaction investigation. My R package GOSemSim has been used in many studies to investigate protein protein interaction, see 1, 2, 3, 4 and more.\n","tags":["GOSemSim"],"title":"using GOSemSim to rank proteins obtained by co-IP","type":"post"},{"authors":null,"categories":["R"],"content":"GOSemSim GOSemSim was first implemented in 2008 and published in Bioinformatics in 2010. It\u0026rsquo;s now a mature package with no bugs found in the past half year. Only vignette and Information content data were updated.\nclusterProfiler clusterProfiler was developed in 2011 and published in OMICS in 2012. I am very glad to find that clusterProfiler was presented in the book \u0026lsquo;Bioinformatics with R Cookbook\u0026lsquo;: In this release, KEGG enrichment analysis (both hypergeometric and GSEA) now supports using latest online data and DAVID functional analysis is also supported. In addition, compareCluster function now supports formula interface like x ~ y + z; this feature was contributed by @dalloliogm. Considering that many new users have problem of converting biological IDs, clusterProfiler contains a new function bitr, stands for Biological Id TranslatoR. NOW, clusterProfiler is not restricted to GO and KEGG analyses. All kinds of annotation can be supported via enricher function for hypergeometric test and GSEA function for gene set enrichment analysis. These two functions are not yet documented in vignette and will soon.\nDOSE DOSE was first released in 2011, and has been published in Bioinformatics on February 2015. An example of applying DOSE for disease ontology enrichment analysis can be found in Genome-wide Identification and Characterization of Fixed Human-Specific Regulatory Regions. Besides, DOSE also supports Network of Cancer Genes database.\nReactomePA ReactomePA was developed in 2012 when KEGG is no longer available in public domain. In BioC 3.0, reactome.db has a lot of issues. Until the early of this April, Bioconductor restored reactome.db in Bioc 3.0 to Bioc 2.14. This issue affects ReactomePA several months and was removed in BioC 3.1.\nChIPseeker ChIPseeker was developed in 2014, after I found a bug of ChIPpeakAnno package. Many new features were added thereafter, including several visualization methods, multiple annotations, ChIP-peak comparison and data mining with GEO database. ChIPseeker has been published in Bioinformatics. In this release, several minor bugs were fixed, a new parameter genomicAnnotationPriority was added in annotatePeak and plotAvgProf supports estimating confidence interval as shown below: This CI estimation feature was contributed by Yan Yun. ChIPseeker works fine with other ChIP-seq related tools as demonstrated in the ChIPseq Analysis workflow. It has also been presented in 2014 CSHLseq course and 2015 Use Bioconductor course.\nggtree ggtree was developed on December 2014, when I got tired of annotating tree by modifying node labels. This release (version=1.0.0) is the first release, output of many common software in evolution were supported and many new features were introduced in the past few months. Please view the vignette to find out more and I can guarantee that you won\u0026rsquo;t be disappointed.\nCitation Yu G, Wang LG and He QY*. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. Bioinformatics 2015, 31(14):2382-2383.\n\nYu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\nG Yu, LG Wang, GR Yan, QY He. DOSE: an R/Bioconductor package for Disease Ontology Semantic and Enrichment analysis. Bioinformatics 2015, 31(4):608-609.\n\nG Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \nYu G†, Li F†, Qin Y, Bo X*, Wu Y and Wang S*. GOSemSim: an R package for measuring semantic similarity among GO terms and gene products. Bioinformatics. 2010, 26(7):976-978.\n \nG Yu, QY He*. ReactomePA: an R/Bioconductor package for reactome pathway analysis and visualization. Molecular BioSystems 2016, 12(2):477-479.\n\n","date":1429501441,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1429501441,"objectID":"1a45f260f1f3f4a5ac7378b84362e76d","permalink":"https://guangchuangyu.github.io/2015/04/bioc-31-news-of-my-bioc-packages/","publishdate":"2015-04-20T11:44:01+08:00","relpermalink":"/2015/04/bioc-31-news-of-my-bioc-packages/","section":"post","summary":"GOSemSim GOSemSim was first implemented in 2008 and published in Bioinformatics in 2010. It\u0026rsquo;s now a mature package with no bugs found in the past half year. Only vignette and Information content data were updated.\n","tags":["BioC","GOSemSim","clusterProfiler","DOSE","ReactomePA","ggtree","ChIPseeker"],"title":"[Bioc 31] NEWS of my BioC packages","type":"post"},{"authors":null,"categories":["Evolution","Visualization","R"],"content":"FigTree is designed for viewing beast output as demonstrated by their example data: BEAST output is well supported by ggtree and it\u0026rsquo;s easy to reproduce such a tree view. ggtree supports parsing beast output by read.beast function. We can visualize the tree directly by using ggtree function. Since this is a time scale tree, we can set the parameter mrsd to most recent sampling date.\nrequire(ggplot2) require(ggtree) x \u0026lt;- read.beast(\u0026quot;/Applications/FigTree/influenza.tree\u0026quot;) cols \u0026lt;- scale_color(x, by=\u0026quot;height\u0026quot;) ggtree(x, right=TRUE, mrsd=\u0026quot;2005-04-02\u0026quot;, color=cols) + theme_tree2() + geom_text(aes(x=max(x), label=label), size=1, color=cols, hjust=-.3) + scale_x_continuous(breaks=c(1992, 1995, 1997, 2000, 2002, 2005), minor_breaks=seq(1992, 2005, 1)) + geom_segment(aes(xend=max(x)+.20, yend=y), linetype=\u0026quot;dotted\u0026quot;, size=.1, color=cols) + theme(panel.grid.major = element_line(color=\u0026quot;black\u0026quot;, size=.2), panel.grid.minor = element_line(color=\u0026quot;grey\u0026quot;, size=.2), panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank())  Citation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1427824204,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1427824204,"objectID":"d46570aee9a975af91542eae69019f43","permalink":"https://guangchuangyu.github.io/2015/04/an-example-of-drawing-beast-tree-using-ggtree/","publishdate":"2015-04-01T01:50:04+08:00","relpermalink":"/2015/04/an-example-of-drawing-beast-tree-using-ggtree/","section":"post","summary":"FigTree is designed for viewing beast output as demonstrated by their example data: ","tags":["ggtree"],"title":"an example of drawing beast tree using ggtree","type":"post"},{"authors":null,"categories":["R"],"content":"clusterProfiler was used to visualize DAVID results in a paper published in BMC Genomics.\nSome users told me that they may want to use DAVID at some circumstances. I think it maybe a good idea to make clusterProfiler supports DAVID, so that DAVID users can use visualization functions provided by clusterProfiler.\nrequire(DOSE) require(clusterProfiler) data(geneList) gene = names(geneList)[abs(geneList) \u0026gt; 2] david = enrichDAVID(gene = gene, idType=\u0026quot;ENTREZ_GENE_ID\u0026quot;, listType=\u0026quot;Gene\u0026quot;, annotation=\u0026quot;KEGG_PATHWAY\u0026quot;) \u0026gt; summary(david) ID Description GeneRatio BgRatio pvalue hsa04110 hsa04110 Cell cycle 11/68 125/5085 4.254437e-06 hsa04114 hsa04114 Oocyte meiosis 10/68 110/5085 1.119764e-05 hsa03320 hsa03320 PPAR signaling pathway 7/68 69/5085 2.606715e-04 p.adjust qvalue geneID hsa04110 0.0003998379 NA 9133/4174/890/991/1111/891/7272/8318/4085/983/9232 hsa04114 0.0005261534 NA 9133/5241/51806/3708/991/891/4085/983/9232/6790 hsa03320 0.0081354974 NA 4312/2167/5346/5105/3158/9370/9415 Count hsa04110 11 hsa04114 10 hsa03320 7  There are only 5085 human genes annotated by KEGG, this is due to out-of-date DAVID data.\nbarplot(david)\ncnetplot(david, foldChange=geneList)  With enrichDAVID, compare DAVID functional profiles among different gene clusters is also supported.\ndata(gcSample) x=compareCluster(gcSample, fun=\u0026quot;enrichDAVID\u0026quot;, annotation=\u0026quot;KEGG_PATHWAY\u0026quot;) plot(x)  As I pointed out in KEGG enrichment analysis with latest online data using clusterProfiler, there are many webservers using out of date data. This may leads to different interpretation of biological results. DAVID\u0026rsquo;s data is also out of date. DAVID stopped updating database since 2010. This is why I love Bioconductor, almost all the annotation packages are maintained by Bioconductor core team and will be updated biannual. enrichGO and enrichKEGG is more reliable with more updated data than many other tools.\nCitation Yu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\n","date":1426458814,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1426458814,"objectID":"a8b3077d0551e800331c95d07c0b3910","permalink":"https://guangchuangyu.github.io/2015/03/david-functional-analysis-with-clusterprofiler/","publishdate":"2015-03-16T06:33:34+08:00","relpermalink":"/2015/03/david-functional-analysis-with-clusterprofiler/","section":"post","summary":"clusterProfiler was used to visualize DAVID results in a paper published in BMC Genomics.\nSome users told me that they may want to use DAVID at some circumstances. I think it maybe a good idea to make clusterProfiler supports DAVID, so that DAVID users can use visualization functions provided by clusterProfiler.\nrequire(DOSE) require(clusterProfiler) data(geneList) gene = names(geneList)[abs(geneList) \u0026gt; 2] david = enrichDAVID(gene = gene, idType=\u0026quot;ENTREZ_GENE_ID\u0026quot;, listType=\u0026quot;Gene\u0026quot;, annotation=\u0026quot;KEGG_PATHWAY\u0026quot;) \u0026gt; summary(david) ID Description GeneRatio BgRatio pvalue hsa04110 hsa04110 Cell cycle 11/68 125/5085 4.254437e-06 hsa04114 hsa04114 Oocyte meiosis 10/68 110/5085 1.119764e-05 hsa03320 hsa03320 PPAR signaling pathway 7/68 69/5085 2.606715e-04 p.adjust qvalue geneID hsa04110 0.0003998379 NA 9133/4174/890/991/1111/891/7272/8318/4085/983/9232 hsa04114 0.0005261534 NA 9133/5241/51806/3708/991/891/4085/983/9232/6790 hsa03320 0.0081354974 NA 4312/2167/5346/5105/3158/9370/9415 Count hsa04110 11 hsa04114 10 hsa03320 7  There are only 5085 human genes annotated by KEGG, this is due to out-of-date DAVID data.\n","tags":["clusterProfiler","DAVID"],"title":"DAVID functional analysis with clusterProfiler","type":"post"},{"authors":null,"categories":["Publication","R","Bioinformatics"],"content":"My R/Bioconductor package, DOSE, published in Bioinformatics.\nDOSE: an R/Bioconductor package for Disease Ontology Semantic and Enrichment analysis\nG Yu, LG Wang, GR Yan, QY He. Bioinformatics 2015, 31(4):608-609\nReceived: 7 May 2014 Accepted: 14 October 2014 Online: 17 October 2014\nDOI:10.1093/bioinformatics/btu684\nSummary: Disease ontology (DO) annotates human genes in the context of disease. DO is important annotation in translating molecular findings from high-throughput data to clinical relevance. DOSE is an R package providing semantic similarity computations among DO terms and genes which allows biologists to explore the similarities of diseases and of gene functions in disease perspective. Enrichment analyses including hypergeometric model and gene set enrichment analysis are also implemented to support discovering disease associations of high-throughput biological data. This allows biologists to verify disease relevance in a biological experiment and identify unexpected disease associations. Comparison among gene clusters is also supported.\nAvailability and implementation: DOSE is released under Artistic-2.0 License. The source code and documents are freely available through Bioconductor (http://www.bioconductor.org/packages/release/bioc/html/DOSE.html).\nMore importantly, DOSE provides several visualization functions to produce highly customizable, publication-quality figures of similarity and enrichment analyses. With these visualization tools, the results obtained by DOSE are more interpretable.\n","date":1425157461,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1425157461,"objectID":"18e7c4ee4b442cc520e372c6879cc80f","permalink":"https://guangchuangyu.github.io/2015/03/dose-an-r/bioconductor-package-for-disease-ontology-semantic-and-enrichment-analysis/","publishdate":"2015-03-01T05:04:21+08:00","relpermalink":"/2015/03/dose-an-r/bioconductor-package-for-disease-ontology-semantic-and-enrichment-analysis/","section":"post","summary":"My R/Bioconductor package, DOSE, published in Bioinformatics.\n","tags":["DOSE"],"title":"DOSE: an R/Bioconductor package for Disease Ontology Semantic and Enrichment analysis","type":"post"},{"authors":null,"categories":["R"],"content":"I am very exciting that I have received very positive feedback from Ahmed Moustafa and Simon Frost.\nggtree now has equipped with a lot of new features. This time, I would like to introduce the replace operator, %\u0026lt;%. Suppose we have build a tree view using ggtree with multiple layers, we don\u0026rsquo;t need to run the code again to build a new tree view with another tree. In ggtree, we provides an operator, %\u0026lt;%, for updating tree view.\nlibrary(ggplot2) library(ggtree) ggtree(rtree(15)) %\u0026lt;% rtree(30)  It supports different layout.\nggtree(rtree(15), layout=\u0026quot;unrooted\u0026quot;, ladderize=FALSE) %\u0026lt;% rtree(45)  It is chainable.\nggtree(rtree(15), layout=\u0026quot;cladogram\u0026quot;, ladderize=FALSE) %\u0026lt;% rtree(30) %\u0026lt;% rtree(45)  It also supports multiple layers.\n(ggtree(rtree(15), layout=\u0026quot;fan\u0026quot;) + geom_point(aes(shape=isTip, color=isTip))) %\u0026lt;% rtree(40)  In the final example, we parse rst file from BaseML output and annotate the tree with marginal_AA_subs.\nrstfile \u0026lt;- system.file(\u0026quot;extdata/PAML_Baseml\u0026quot;, \u0026quot;rst\u0026quot;, package=\u0026quot;ggtree\u0026quot;) tipfas \u0026lt;- system.file(\u0026quot;extdata\u0026quot;, \u0026quot;pa.fas\u0026quot;, package=\u0026quot;ggtree\u0026quot;) rst \u0026lt;- read.paml_rst(rstfile, tipfas) p \u0026lt;- plot(rst, annotation=\u0026quot;marginal_AA_subs\u0026quot;, annotation.color=\u0026quot;steelblue\u0026quot;) print(p)  We have ancestral sequences inferred from CodeML with the same tree. We can use this new data to update the tree view.\nrstfile \u0026lt;- system.file(\u0026quot;extdata/PAML_Codeml\u0026quot;, \u0026quot;rst\u0026quot;, package=\u0026quot;ggtree\u0026quot;) rst \u0026lt;- read.paml_rst(rstfile, tipfas) p %\u0026lt;% rst  In these two figures, we can found that they have different evolution distances, and substitutions inferred from BASEML and CODEML are slightly different.\nCitation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1423508303,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1423508303,"objectID":"668dfae3a32cca400b70c5c7a9a446d7","permalink":"https://guangchuangyu.github.io/2015/02/ggtree-updating-a-tree-view/","publishdate":"2015-02-10T02:58:23+08:00","relpermalink":"/2015/02/ggtree-updating-a-tree-view/","section":"post","summary":"I am very exciting that I have received very positive feedback from Ahmed Moustafa and Simon Frost.\nggtree now has equipped with a lot of new features. This time, I would like to introduce the replace operator, %\u0026lt;%. Suppose we have build a tree view using ggtree with multiple layers, we don\u0026rsquo;t need to run the code again to build a new tree view with another tree. In ggtree, we provides an operator, %\u0026lt;%, for updating tree view.\n","tags":["ggtree"],"title":"ggtree - updating a tree view","type":"post"},{"authors":null,"categories":["R"],"content":"KEGG.db is not updated since 2012. The data is now pretty old, but many of the Bioconductor packages still using it for KEGG annotation and enrichment analysis. As pointed out in \u0026lsquo;Are there too many biological databases\u0026rsquo;, there is a problem that many out of date biological databases often don\u0026rsquo;t get offline. This issue also exists in web-server or software that using out-of-date data. For example, the WEGO web-server stopped updating GO annotation data since 2009, and WEGO still online with many people using it. The biological story may changed totally if using a recently updated data. Seriously, We should keep an eye on this issue.\nNow enrichKEGG function is reloaded with a new parameter use_internal_data. This parameter is by default setting to FALSE, and enrichKEGG function will download the latest KEGG data for enrichment analysis. If the parameter use_internal_data is explicitly setting to TRUE, it will use the KEGG.db which is still supported but not recommended. With this new feature, supported species is unlimited if only there are KEGG annotations available in KEGG database. You can access the full list of species supported by KEGG via: http://www.genome.jp/kegg/catalog/org_list.html Now the organism parameter in enrichKEGG should be abbreviation of academic name, for example \u0026lsquo;hsa\u0026rsquo; for human and \u0026lsquo;mmu\u0026rsquo; for mouse. It accepts any species listed in http://www.genome.jp/kegg/catalog/org_list.html. In the current release version of clusterProfiler (in Bioconductor 3.0), enrichKEGG supports about 20 species, and the organism parameter accept common name of species, for instance \u0026ldquo;human\u0026rdquo; and \u0026ldquo;mouse\u0026rdquo;. For these previously supported species, common name is also supported. So that you script is still working with new version of clusterProfiler. For other species, common name is not supported, since I don\u0026rsquo;t want to maintain such a long mapping list with many species have no common name available and it may also introduce unexpected bugs.\nExample 1: Using online KEGG annotation library(DOSE) data(geneList) de \u0026lt;- names(geneList)[geneList \u0026gt; 1] library(clusterProfiler) kk \u0026lt;- enrichKEGG(de, organism=\u0026quot;hsa\u0026quot;, pvalueCutoff=0.05, pAdjustMethod=\u0026quot;BH\u0026quot;, qvalueCutoff=0.1, readable=TRUE) head(summary(kk))  \u0026gt; head(summary(kk)) ID Description GeneRatio BgRatio hsa04110 hsa04110 Cell cycle 31/247 124/6861 hsa03030 hsa03030 DNA replication 9/247 36/6861 hsa04060 hsa04060 Cytokine-cytokine receptor interaction 25/247 265/6861 hsa04114 hsa04114 Oocyte meiosis 14/247 113/6861 hsa04115 hsa04115 p53 signaling pathway 10/247 68/6861 hsa04062 hsa04062 Chemokine signaling pathway 18/247 189/6861 pvalue p.adjust qvalue hsa04110 2.280256e-18 9.349050e-17 5.280593e-17 hsa03030 3.527197e-06 7.230753e-05 4.084123e-05 hsa04060 8.404037e-06 1.148552e-04 6.487326e-05 hsa04114 4.827484e-05 4.948171e-04 2.794859e-04 hsa04115 1.406946e-04 9.801620e-04 5.536217e-04 hsa04062 1.434383e-04 9.801620e-04 5.536217e-04 geneID hsa04110 CDC45/CDC20/CCNB2/CCNA2/CDK1/MAD2L1/TTK/CHEK1/CCNB1/MCM5/PTTG1/MCM2/CDC25A/CDC6/PLK1/BUB1B/ESPL1/CCNE1/ORC6/ORC1/CCNE2/MCM6/MCM4/DBF4/SKP2/CDC25B/BUB1/MYC/PCNA/E2F1/CDKN2A hsa03030 MCM5/MCM2/MCM6/MCM4/FEN1/RFC4/PCNA/RNASEH2A/DNA2 hsa04060 CXCL10/CXCL13/CXCL11/CXCL9/CCL18/IL1R2/CCL8/CXCL3/CCL20/IL12RB2/CXCL8/TNFRSF11A/CCL5/CXCR6/IL2RA/CCR1/CCL2/IL2RG/CCL4/CCR8/CCR7/GDF5/IL24/LTB/IL7 hsa04114 CDC20/CCNB2/CDK1/MAD2L1/CALML5/AURKA/CCNB1/PTTG1/PLK1/ESPL1/CCNE1/CCNE2/BUB1/FBXO5 hsa04115 CCNB2/RRM2/CDK1/CHEK1/CCNB1/GTSE1/CCNE1/CCNE2/SERPINB5/CDKN2A hsa04062 CXCL10/CXCL13/CXCL11/CXCL9/CCL18/CCL8/CXCL3/CCL20/CXCL8/CCL5/CXCR6/CCR1/STAT1/CCL2/CCL4/HCK/CCR8/CCR7 Count hsa04110 31 hsa03030 9 hsa04060 25 hsa04114 14 hsa04115 10 hsa04062 18 \u0026gt;  In the KEGG.db, there are only 5894 human genes annotated. With current online data, the number of annotated gene increase to 6861 as shown above and of course, p-values changed. User should pay attention to another issue that readable parameter is only available for those species that has an annotation db. For example, for human we use org.Hs.eg.db for mapping gene ID to Symbol.\nExample 2: enrichment analysis of species which are not previously supported Here, I use a gene list of Streptococcus pneumoniae D39 to demonstrate using enrichKEGG with species that are not supported previously.\n\u0026gt; gene [1] \u0026quot;SPD_0065\u0026quot; \u0026quot;SPD_0071\u0026quot; \u0026quot;SPD_0293\u0026quot; \u0026quot;SPD_0295\u0026quot; \u0026quot;SPD_0296\u0026quot; \u0026quot;SPD_0297\u0026quot; [7] \u0026quot;SPD_0327\u0026quot; \u0026quot;SPD_0426\u0026quot; \u0026quot;SPD_0427\u0026quot; \u0026quot;SPD_0428\u0026quot; \u0026quot;SPD_0559\u0026quot; \u0026quot;SPD_0560\u0026quot; [13] \u0026quot;SPD_0561\u0026quot; \u0026quot;SPD_0562\u0026quot; \u0026quot;SPD_0580\u0026quot; \u0026quot;SPD_0789\u0026quot; \u0026quot;SPD_1046\u0026quot; \u0026quot;SPD_1047\u0026quot; [19] \u0026quot;SPD_1048\u0026quot; \u0026quot;SPD_1050\u0026quot; \u0026quot;SPD_1051\u0026quot; \u0026quot;SPD_1052\u0026quot; \u0026quot;SPD_1053\u0026quot; \u0026quot;SPD_1057\u0026quot; [25] \u0026quot;SPD_1326\u0026quot; \u0026quot;SPD_1432\u0026quot; \u0026quot;SPD_1534\u0026quot; \u0026quot;SPD_1582\u0026quot; \u0026quot;SPD_1612\u0026quot; \u0026quot;SPD_1613\u0026quot; [31] \u0026quot;SPD_1633\u0026quot; \u0026quot;SPD_1634\u0026quot; \u0026quot;SPD_1648\u0026quot; \u0026quot;SPD_1678\u0026quot; \u0026quot;SPD_1919\u0026quot; \u0026gt; spdKEGG = enrichKEGG(gene, organism=\u0026quot;spd\u0026quot;) \u0026gt; summary(spdKEGG) ID Description GeneRatio BgRatio spd00052 spd00052 Galactose metabolism 35/35 35/752 spd02060 spd02060 Phosphotransferase system (PTS) 12/35 47/752 spd01100 spd01100 Metabolic pathways 28/35 341/752 spd00520 spd00520 Amino sugar and nucleotide sugar metabolism 9/35 43/752 pvalue p.adjust qvalue spd00052 4.961477e-61 2.480739e-60 5.222608e-61 spd02060 2.470177e-07 6.175443e-07 1.300093e-07 spd01100 1.958319e-05 3.263866e-05 6.871296e-06 spd00520 6.534975e-05 8.168718e-05 1.719730e-05 geneID spd00052 SPD_0065/SPD_0071/SPD_0293/SPD_0295/SPD_0296/SPD_0297/SPD_0327/SPD_0426/SPD_0427/SPD_0428/SPD_0559/SPD_0560/SPD_0561/SPD_0562/SPD_0580/SPD_0789/SPD_1046/SPD_1047/SPD_1048/SPD_1050/SPD_1051/SPD_1052/SPD_1053/SPD_1057/SPD_1326/SPD_1432/SPD_1534/SPD_1582/SPD_1612/SPD_1613/SPD_1633/SPD_1634/SPD_1648/SPD_1678/SPD_1919 spd02060 SPD_0293/SPD_0295/SPD_0296/SPD_0297/SPD_0426/SPD_0428/SPD_0559/SPD_0560/SPD_0561/SPD_1047/SPD_1048/SPD_1057 spd01100 SPD_0071/SPD_0426/SPD_0427/SPD_0428/SPD_0559/SPD_0560/SPD_0561/SPD_0562/SPD_0580/SPD_0789/SPD_1046/SPD_1047/SPD_1048/SPD_1050/SPD_1051/SPD_1052/SPD_1053/SPD_1057/SPD_1326/SPD_1432/SPD_1534/SPD_1582/SPD_1612/SPD_1613/SPD_1633/SPD_1634/SPD_1648/SPD_1919 spd00520 SPD_0580/SPD_1326/SPD_1432/SPD_1612/SPD_1613/SPD_1633/SPD_1634/SPD_1648/SPD_1919 Count spd00052 35 spd02060 12 spd01100 28 spd00520 9  Summary To summarize, clusterProfiler supports downloading the latest KEGG annotation for enrichment analysis and it supports all species that have KEGG annotation available in KEGG database.\nCitation Yu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\n","date":1422765507,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1422765507,"objectID":"c31929ba36b65ed90b37e132ce410ea2","permalink":"https://guangchuangyu.github.io/2015/02/kegg-enrichment-analysis-with-latest-online-data-using-clusterprofiler/","publishdate":"2015-02-01T12:38:27+08:00","relpermalink":"/2015/02/kegg-enrichment-analysis-with-latest-online-data-using-clusterprofiler/","section":"post","summary":"KEGG.db is not updated since 2012. The data is now pretty old, but many of the Bioconductor packages still using it for KEGG annotation and enrichment analysis. As pointed out in \u0026lsquo;Are there too many biological databases\u0026rsquo;, there is a problem that many out of date biological databases often don\u0026rsquo;t get offline. This issue also exists in web-server or software that using out-of-date data. For example, the WEGO web-server stopped updating GO annotation data since 2009, and WEGO still online with many people using it. The biological story may changed totally if using a recently updated data. Seriously, We should keep an eye on this issue.\nNow enrichKEGG function is reloaded with a new parameter use_internal_data. This parameter is by default setting to FALSE, and enrichKEGG function will download the latest KEGG data for enrichment analysis. If the parameter use_internal_data is explicitly setting to TRUE, it will use the KEGG.db which is still supported but not recommended. With this new feature, supported species is unlimited if only there are KEGG annotations available in KEGG database. You can access the full list of species supported by KEGG via: http://www.genome.jp/kegg/catalog/org_list.html Now the organism parameter in enrichKEGG should be abbreviation of academic name, for example \u0026lsquo;hsa\u0026rsquo; for human and \u0026lsquo;mmu\u0026rsquo; for mouse. It accepts any species listed in http://www.genome.jp/kegg/catalog/org_list.html. In the current release version of clusterProfiler (in Bioconductor 3.0), enrichKEGG supports about 20 species, and the organism parameter accept common name of species, for instance \u0026ldquo;human\u0026rdquo; and \u0026ldquo;mouse\u0026rdquo;. For these previously supported species, common name is also supported. So that you script is still working with new version of clusterProfiler. For other species, common name is not supported, since I don\u0026rsquo;t want to maintain such a long mapping list with many species have no common name available and it may also introduce unexpected bugs.\n","tags":["clusterProfiler","KEGG"],"title":"KEGG enrichment analysis with latest online data using clusterProfiler","type":"post"},{"authors":["**G Yu**","LG Wang","GR Yan","QY He*"],"categories":null,"content":"","date":1422748800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1422748800,"objectID":"9177fdd4c33f38b619a018938768087b","permalink":"https://guangchuangyu.github.io/publication/dose/","publishdate":"2015-02-01T00:00:00Z","relpermalink":"/publication/dose/","section":"publication","summary":"Disease ontology (DO) annotates human genes in the context of disease. DO is important annotation in translating molecular findings from high-throughput data to clinical relevance. DOSE is an R package providing semantic similarity computations among DO terms and genes which allows biologists to explore the similarities of diseases and of gene functions in disease perspective. Enrichment analyses including hypergeometric model and gene set enrichment analysis are also implemented to support discovering disease associations of high-throughput biological data. This allows biologists to verify disease relevance in a biological experiment and identify unexpected disease associations. Comparison among gene clusters is also supported.","tags":null,"title":"DOSE: an R/Bioconductor package for disease ontology semantic and enrichment analysis","type":"publication"},{"authors":null,"categories":["R"],"content":"I am very glad that ggtree is now available via Bioconductor. This is my 6th Bioconductor package. ggtree now supports parsing output files from BEAST, PAML, HYPHY, EPA and PPLACER and can annotate phylogenetic tree directly using plot methods.\nNow you can use the following command to install ggtree:\ninstall.packages(\u0026quot;ggtree\u0026quot;, repos = \u0026quot;http://www.bioconductor.org/packages/devel/bioc\u0026quot;, type = \u0026quot;source\u0026quot;)  Find out more at http://www.bioconductor.org/packages/3.1/bioc/html/ggtree.html and check out the vignette, http://www.bioconductor.org/packages/3.1/bioc/vignettes/ggtree/inst/doc/ggtree.html\nCitation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1421610623,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1421610623,"objectID":"9d8c431cd1e651ea060590bdc6a80ed8","permalink":"https://guangchuangyu.github.io/2015/01/ggtree-in-bioconductor-3.1/","publishdate":"2015-01-19T03:50:23+08:00","relpermalink":"/2015/01/ggtree-in-bioconductor-3.1/","section":"post","summary":"I am very glad that ggtree is now available via Bioconductor. This is my 6th Bioconductor package. ggtree now supports parsing output files from BEAST, PAML, HYPHY, EPA and PPLACER and can annotate phylogenetic tree directly using plot methods.\n","tags":["ggtree","BioC"],"title":"ggtree in Bioconductor 3.1","type":"post"},{"authors":null,"categories":["R"],"content":"I like running fortune every time when the terminal was started. A screenshot is shown below:\nAt the end of the post trick things in R, I introduced the fortunes package of R. The fortune program provides UNIX related quotations, while the quotations supplied by the R package, fortunes, are all R related. We can learn a lot from these quotations.\n\u0026gt; fortune(343) Sooner or later most R beginners are bitten by this all too convenient shortcut. As an R newbie, think of R as your bank account: overuse of $-extraction can lead to undesirable consequences. It's best to acquire the '[[' and '[' habit early. -- Peter Ehlers (about the use of $-extraction) R-help (March 2013)  I have answered why \u0026lsquo;[[\u0026rsquo; and \u0026lsquo;[\u0026rsquo; is better than \u0026lsquo;\\$\u0026rsquo; in the post, tricky things in R. One more thing I want to emphasize is that we should remember that \u0026lsquo;[[\u0026rsquo; and \u0026lsquo;[\u0026rsquo; are all functions that defined in the base package. Their behaviour is predictable when applying to data.frame or list. But when they were applicable to S4 object, they don\u0026rsquo;t always work in the way you expected. You should read the documents of how they were defined. Don\u0026rsquo;t try to guess by your intuition. This is also a reason of why R is hard to learn.\n\u0026gt; fortune(343) 'They' did write documentation that told you that Perl was needed, but 'they' can't read it for you. -- Brian D. Ripley R-help (February 2001)  In this post, I would like to introduce how to print a random quotation when every time R is started. It\u0026rsquo;s very easy, just add the following lines to ~/.Rprofile\nlibrary(\u0026quot;fortunes\u0026quot;) fortune()  Robin Hankin: I'd say that without a tool like R you cannot learn statistics. David Whiting: I believe Fisher and a few others managed to get by without it. Peter Dalgaard: But think how far they could have got with R! -- Robin Hankin, David Whiting, and Peter Dalgaard (on teaching/learning statistics with R) R-help (December 2004)  Learn statistics with R is almost unavoidable especially for students in biology.\nAND learn R wisdom with fortunes, it can be fun.\n","date":1420413382,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420413382,"objectID":"f1c8aefffd402820c8ca7df9b7a0f8f4","permalink":"https://guangchuangyu.github.io/2015/01/","publishdate":"2015-01-05T07:16:22+08:00","relpermalink":"/2015/01/","section":"post","summary":"I like running fortune every time when the terminal was started. A screenshot is shown below:\n","tags":["fortunes",""],"title":"","type":"post"},{"authors":null,"categories":["Evolution","Visualization","R"],"content":"When I need to annotate nucleotide substitutions in the phylogenetic tree, I found that all the software are designed to display the tree but not annotating it. Some of them may support annotating the tree with specific data such as bootstrap values, but they are restricted to a few supported data types. It is hard/impossible to inject user specific data.\nI decided to implement my own one by extending the ggplot2 package. There are other R packages that implemented tree viewer using ggplot2, including OutbreakTools, phyloseq and ggphylo, but all of them only create complex tree view function for their specific needs. They are just classical tree viewers that only viewing the tree or annotating a specific data type. The good parts of ggplot2 are not available in these packages. They lack of flexibilities of annotating phylogenetic tree by diverse user inputs. I develop ggtree, which is based on grammar of graphics and will takes all the good parts of ggplot2.\nnwk \u0026lt;- system.file(\u0026quot;extdata\u0026quot;, \u0026quot;sample.nwk\u0026quot;, package = \u0026quot;ggtree\u0026quot;) library(ape) tree \u0026lt;- read.tree(nwk) library(ggplot2) library(ggtree) ggplot(tree, aes(x, y)) + geom_tree() + theme_tree() + xlab(\u0026quot;\u0026quot;) + ylab(\u0026quot;\u0026quot;)  It extends ggplot2 to support tree objects and implements a geom_tree() layer to draw the tree.\nThe ggtree package provides a function, ggtree, for shortcut of ggplot()+geom_tree()+theme_tree().\nIt supports several tree objects including phylo that defined in ape, phylo4 that defined in phylobase and jplace that defined within the ggtree package.\np1 \u0026lt;- ggtree(tree) + ggtitle(\u0026quot;tree of phylo object\u0026quot;) tr2 \u0026lt;- as(tree, \u0026quot;phylo4\u0026quot;) p2 \u0026lt;- ggtree(tr2) + ggtitle(\u0026quot;tree of phylo4 object\u0026quot;) jpf \u0026lt;- system.file(\u0026quot;extdata\u0026quot;, \u0026quot;sample.jplace\u0026quot;, package=\u0026quot;ggtree\u0026quot;) jp \u0026lt;- read.jplace(jpf) p3 \u0026lt;- ggtree(jp) + ggtitle(\u0026quot;tree of jplace object\u0026quot;) library(gridExtra) grid.arrange(p1, p2, p3, ncol=3)  With this implementation, it is possible to inject user input. But is it easy? The answer is yes and no. It may depends on user\u0026rsquo;s ggplot2 experiences. To place the input data at the correct position, you should know how the tree was layout. It may be easy for an experienced user, but hard for newbie. Most of us are impatient and reluctant to learn, so I should create a way that is easy to follow. It\u0026rsquo;s not a good idea to implement unnecessary geom_XXX layer, for it violates the great idea of taking all the good parts of ggplot2, and it will violate the consistent function calls of geom_XXX. Thanks to my sleep disorder, I came out with an operator %\u0026lt;+% for injecting input data to the tree view. After the injection, the data is visible to all the geom_XXX layers.\np \u0026lt;- ggtree(tree) print(dd) taxa place value M NA 55.9 A GZ 65.6 C GZ 59.3 I CZ 78.5 E GZ 62.9 D GZ 64.1 J CZ 62.3 K CZ 79.1 B GZ 89.0 L CZ 57.1 G HK 66.4 H HK 61.6 F HK 59.9  Suppose we have a tree view p, and input data dd, we can attach the data to the tree and add a layer of tip labels and colored by place.\np \u0026lt;- p %\u0026lt;+% dd + geom_text(aes(color=place, label=label), hjust=-0.5) print(p)  Once the data is attached, it is always attached, and we can add more layers easily.\np + geom_text(aes(color=place, label=place), hjust=1, vjust=-0.4, size=3) + geom_text(aes(color=place, label=value), hjust=1, vjust=1.4, size=3)  The package is now available via github, https://github.com/GuangchuangYu/ggtree.\nSuggestions, comments and feature request are all welcome. Let\u0026rsquo;s make it an easy to use and feature-riched package for viewing and annotating phylogenetic trees.\nAt last, wish you a merry christmas :)\nCitation G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. doi:10.1111/2041-210X.12628.\n \n","date":1419120008,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1419120008,"objectID":"5b52e64f1d80ddeff897b0bb7c465251","permalink":"https://guangchuangyu.github.io/2014/12/viewing-and-annotating-phylogenetic-tree-with-ggtree/","publishdate":"2014-12-21T08:00:08+08:00","relpermalink":"/2014/12/viewing-and-annotating-phylogenetic-tree-with-ggtree/","section":"post","summary":"When I need to annotate nucleotide substitutions in the phylogenetic tree, I found that all the software are designed to display the tree but not annotating it. Some of them may support annotating the tree with specific data such as bootstrap values, but they are restricted to a few supported data types. It is hard/impossible to inject user specific data.\n","tags":["ggtree"],"title":"viewing and annotating phylogenetic tree with ggtree","type":"post"},{"authors":null,"categories":["Software"],"content":"Auto complete is good, it can save you times in typing and prevent typo sometimes.\nRStudio now supports function arguments in auto complete. ESS\u0026rsquo;s auto complete is more advance, it supports help page.\nWe should use \u0026lsquo;ess-use-auto-complete\u0026rsquo; to activate auto complete in ESS buffers.\n(setq ess-use-auto-complete t)  The effect is quite amazing. Auto-complete extension is needed for ESS, we need to install the auto-complete extension and load it at Emacs startup.\n(require 'auto-complete) (require 'auto-complete-config) (add-to-list 'ac-dictionary-directories \u0026quot;~/.emacs.d/site-lisp/auto-complete/dict\u0026quot;) (ac-config-default) (auto-complete-mode)  ","date":1417918955,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1417918955,"objectID":"62ed07d5232ce8485ef6aca5573f33f0","permalink":"https://guangchuangyu.github.io/2014/12/auto-complete-in-ess/","publishdate":"2014-12-07T10:22:35+08:00","relpermalink":"/2014/12/auto-complete-in-ess/","section":"post","summary":"Auto complete is good, it can save you times in typing and prevent typo sometimes.\nRStudio now supports function arguments in auto complete. ESS\u0026rsquo;s auto complete is more advance, it supports help page.\nWe should use \u0026lsquo;ess-use-auto-complete\u0026rsquo; to activate auto complete in ESS buffers.\n(setq ess-use-auto-complete t)  The effect is quite amazing. Auto-complete extension is needed for ESS, we need to install the auto-complete extension and load it at Emacs startup.","tags":["Emacs","ESS"],"title":"auto-complete in ESS","type":"post"},{"authors":null,"categories":null,"content":"","date":1417478400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1417478400,"objectID":"19ee67b146e5b6ddf0e6fc37a7b00abb","permalink":"https://guangchuangyu.github.io/project/ggtree/","publishdate":"2014-12-02T00:00:00Z","relpermalink":"/project/ggtree/","section":"project","summary":"The ggtree package extending the ggplot2 package. It based on grammar of graphics and takes all the good parts of ggplot2. ggtree is designed for not only viewing phylogenetic tree but also displaying annotation data on the tree.","tags":["bioc"],"title":"ggtree","type":"project"},{"authors":null,"categories":["Research","R"],"content":"One day, I am looking for R packages that can analyze PPI and after searching, I found the ppiPre package in CRAN.\nThe function of this package is not impressive, and I already knew some related works, including http://intscore.molgen.mpg.de/. The authors of this webserver contacted me for the usages of GOSemSim when they developing it. What makes me curious is that the ppiPre package can calculate GO semantic similarity and supports 20 species exactly like GOSemSim. I opened the source tarball, and surprisingly found that its sources related to semantic similarity calculation are totally copied from GOSemSim.\nGOSemSim was firstly released in 2008 Bioconductor 2.4 (at that time, devel version) and published in Bioinformatics in 2010. After compared the sources, I found the sources in ppiPre were copied from GOSemSim version 1.6.8 which released in 2010 Bioconductor 2.6. The Wang method defined in GOKEGGSims.r file of ppiPre is:\n 119 WangMethod \u0026lt;- function(GOID1, GOID2, ont=\u0026quot;MF\u0026quot;, organism=\u0026quot;yeast\u0026quot;) { 120 if(!exists(\u0026quot;ppiPreEnv\u0026quot;)) .initial() 121 weight.isa = 0.8 122 weight.partof = 0.6 123 124 if (GOID1 == GOID2) 125 return (1) 126 127 Parents.name \u0026lt;- switch(ont, 128 MF = \u0026quot;MFParents\u0026quot;, 129 BP = \u0026quot;BPParents\u0026quot;, 130 CC = \u0026quot;CCParents\u0026quot; 131 ) 132 if (!exists(Parents.name, envir=ppiPreEnv)) { 133 GetGOParents(ont) 134 } 135 Parents \u0026lt;- get(Parents.name, envir=ppiPreEnv) 136 137 sv.a \u0026lt;- 1 138 sv.b \u0026lt;- 1 139 sw \u0026lt;- 1 140 names(sv.a) \u0026lt;- GOID1 141 names(sv.b) \u0026lt;- GOID2 142 143 sv.a \u0026lt;- WangSemVal(GOID1, ont, Parents, sv.a, sw, weight.isa, weight.partof) 144 sv.b \u0026lt;- WangSemVal(GOID2, ont, Parents, sv.b, sw, weight.isa, weight.partof) 145 146 sv.a \u0026lt;- uniqsv(sv.a) 147 sv.b \u0026lt;- uniqsv(sv.b) 148 149 idx \u0026lt;- intersect(names(sv.a), names(sv.b)) 150 inter.sva \u0026lt;- unlist(sv.a[idx]) 151 inter.svb \u0026lt;- unlist(sv.b[idx]) 152 sim \u0026lt;- sum(inter.sva,inter.svb) / sum(sv.a, sv.b) 153 return(sim) 154 } 155 WangSemVal \u0026lt;- function(goid, ont, Parents, sv, w, weight.isa, weight.partof) { 156 if(!exists(\u0026quot;ppiPreCache\u0026quot;)) 157 return(WangSemVal_internal(goid, ont, Parents, sv, w, weight.isa, weight.partof)) 158 goid.ont \u0026lt;- paste(goid, ont, sep=\u0026quot;.\u0026quot;) 159 if (!exists(goid.ont, envir=ppiPreCache)) { 160 value \u0026lt;- WangSemVal_internal(goid, ont, Parents, sv, w, weight.isa, weight.partof) 161 assign(eval(goid.ont), value, envir=ppiPreCache) 162 } 163 return(get(goid.ont, envir=ppiPreCache)) 164 } 165 166 WangSemVal_internal \u0026lt;- function(goid, ont, Parents, sv, w, weight.isa, weight.partof) { 167 p \u0026lt;- Parents[goid] 168 p \u0026lt;- unlist(p[[1]]) 169 if (length(p) == 0) { 170 return(0) 171 } 172 relations \u0026lt;- names(p) 173 old.w \u0026lt;- w 174 for (i in 1:length(p)) { 175 if (relations[i] == \u0026quot;is_a\u0026quot;) { 176 w \u0026lt;- old.w * weight.isa 177 } else { 178 w \u0026lt;- old.w * weight.partof 179 } 180 names(w) \u0026lt;- p[i] 181 sv \u0026lt;- c(sv,w) 182 if (p[i] != \u0026quot;all\u0026quot;) { 183 sv \u0026lt;- WangSemVal_internal(p[i], ont, Parents, sv, w, weight.isa, weight.partof) 184 } 185 } 186 return (sv) 187 } 188 189 uniqsv \u0026lt;- function(sv) { 190 sv \u0026lt;- unlist(sv) 191 una \u0026lt;- unique(names(sv)) 192 sv \u0026lt;- unlist(sapply(una, function(x) {max(sv[names(sv)==x])})) 193 return (sv) 194 }  It is identical to the one I defined in GOSemSim 1.6.8:\n 196 ygcWangMethod \u0026lt;- function(GOID1, GOID2, ont=\u0026quot;MF\u0026quot;, organism=\u0026quot;human\u0026quot;) { 197 if(!exists(\u0026quot;GOSemSimEnv\u0026quot;)) .initial() 198 weight.isa = 0.8 199 weight.partof = 0.6 200 201 if (GOID1 == GOID2) 202 return (gosim=1) 203 204 Parents.name \u0026lt;- switch(ont, 205 MF = \u0026quot;MFParents\u0026quot;, 206 BP = \u0026quot;BPParents\u0026quot;, 207 CC = \u0026quot;CCParents\u0026quot; 208 ) 209 if (!exists(Parents.name, envir=GOSemSimEnv)) { 210 ygcGetParents(ont) 211 } 212 Parents \u0026lt;- get(Parents.name, envir=GOSemSimEnv) 213 214 sv.a \u0026lt;- 1 215 sv.b \u0026lt;- 1 216 sw \u0026lt;- 1 217 names(sv.a) \u0026lt;- GOID1 218 names(sv.b) \u0026lt;- GOID2 219 220 sv.a \u0026lt;- ygcSemVal(GOID1, ont, Parents, sv.a, sw, weight.isa, weight.partof) 221 sv.b \u0026lt;- ygcSemVal(GOID2, ont, Parents, sv.b, sw, weight.isa, weight.partof) 222 223 sv.a \u0026lt;- uniqsv(sv.a) 224 sv.b \u0026lt;- uniqsv(sv.b) 225 226 idx \u0026lt;- intersect(names(sv.a), names(sv.b)) 227 inter.sva \u0026lt;- unlist(sv.a[idx]) 228 inter.svb \u0026lt;- unlist(sv.b[idx]) 229 sim \u0026lt;- sum(inter.sva,inter.svb) / sum(sv.a, sv.b) 230 return(sim) 231 } 232 233 234 235 uniqsv \u0026lt;- function(sv) { 236 sv \u0026lt;- unlist(sv) 237 una \u0026lt;- unique(names(sv)) 238 sv \u0026lt;- unlist(sapply(una, function(x) {max(sv[names(sv)==x])})) 239 return (sv) 240 } 241 242 ygcSemVal_internal \u0026lt;- function(goid, ont, Parents, sv, w, weight.isa, weight.partof) { 243 p \u0026lt;- Parents[goid] 244 p \u0026lt;- unlist(p[[1]]) 245 if (length(p) == 0) { 246 #warning(goid, \u0026quot; may not belong to Ontology \u0026quot;, ont) 247 return(0) 248 } 249 relations \u0026lt;- names(p) 250 old.w \u0026lt;- w 251 for (i in 1:length(p)) { 252 if (relations[i] == \u0026quot;is_a\u0026quot;) { 253 w \u0026lt;- old.w * weight.isa 254 } else { 255 w \u0026lt;- old.w * weight.partof 256 } 257 names(w) \u0026lt;- p[i] 258 sv \u0026lt;- c(sv,w) 259 if (p[i] != \u0026quot;all\u0026quot;) { 260 sv \u0026lt;- ygcSemVal_internal(p[i], ont, Parents, sv, w, weight.isa, weight.partof) 261 } 262 } 263 return (sv) 264 } 265 266 ygcSemVal \u0026lt;- function(goid, ont, Parents, sv, w, weight.isa, weight.partof) { 267 if(!exists(\u0026quot;GOSemSimCache\u0026quot;)) return(ygcSemVal_internal(goid, ont, Parents, sv, w, weight.isa, weight.partof)) 268 goid.ont \u0026lt;- paste(goid, ont, sep=\u0026quot;.\u0026quot;) 269 if (!exists(goid.ont, envir=GOSemSimCache)) { 270 value \u0026lt;- ygcSemVal_internal(goid, ont, Parents, sv, w, weight.isa, weight.partof) 271 assign(goid.ont, value, envir=GOSemSimCache) 272 #cat(\u0026quot;recompute \u0026quot;, goid, value, \u0026quot;\\n\u0026quot;) 273 } 274 else{ 275 #cat(\u0026quot;cache \u0026quot;, goid, get(goid, envir=GOSemSimCache), \u0026quot;\\n\u0026quot;) 276 } 277 return(get(goid.ont, envir=GOSemSimCache)) 278 }  The information content based method in ppiPre:\n 495 GetLatestCommonAncestor\u0026lt;-function(GOID1, GOID2, ont, organism){ 496 #message(\u0026quot;Calulating Latest Common Ancestor...\u0026quot;) 497 if(!exists(\u0026quot;ppiPreEnv\u0026quot;)) .initial() 498 499 fname \u0026lt;- paste(\u0026quot;Info_Contents\u0026quot;, ont, organism, sep=\u0026quot;_\u0026quot;) 500 tryCatch(utils::data(list=fname, package=\u0026quot;ppiPre\u0026quot;, envir=ppiPreEnv)) 501 InfoContents \u0026lt;- get(\u0026quot;IC\u0026quot;, envir=ppiPreEnv) 502 503 rootCount \u0026lt;- max(InfoContents[InfoContents != Inf]) 504 InfoContents[\u0026quot;all\u0026quot;] = 0 505 p1 \u0026lt;- InfoContents[GOID1]/rootCount 506 p2 \u0026lt;- InfoContents[GOID2]/rootCount 507 if(is.na(p1) || is.na(p2)) return (NA) 508 if (p1 == 0 || p2 == 0) return (NA) 509 Ancestor.name \u0026lt;- switch(ont,MF = \u0026quot;MFAncestors\u0026quot;,BP = \u0026quot;BPAncestors\u0026quot;,CC = \u0026quot;CCAncestors\u0026quot;) 510 if (!exists(Ancestor.name, envir=ppiPreEnv)) { 511 TCSSGetAncestors(ont) 512 } 513 514 Ancestor \u0026lt;- get(Ancestor.name, envir=ppiPreEnv) 515 ancestor1 \u0026lt;- unlist(Ancestor[GOID1]) 516 ancestor2 \u0026lt;- unlist(Ancestor[GOID2]) 517 if (GOID1 == GOID2) { 518 commonAncestor \u0026lt;- GOID1 519 } else if (GOID1 %in% ancestor2) { 520 commonAncestor \u0026lt;- GOID1 521 } else if (GOID2 %in% ancestor1) { 522 commonAncestor \u0026lt;- GOID2 523 } else { 524 commonAncestor \u0026lt;- intersect(ancestor1, ancestor2) 525 } 526 if (length(commonAncestor) == 0) 527 LCA\u0026lt;-NULL 528 max\u0026lt;- -100 529 LCA\u0026lt;-NULL 530 for(a in commonAncestor){ 531 if(!is.na(InfoContents[a])) { 532 if(InfoContents[a]\u0026gt;max){ 533 max\u0026lt;-InfoContents[a] 534 LCA\u0026lt;-a 535 } 536 } 537 } 538 #message(\u0026quot;done...\u0026quot;) 539 return (LCA) 540 541 }  also identical to the one in GOSemSim 1.6.8:\n 280 `ygcInfoContentMethod` \u0026lt;- function(GOID1, GOID2, ont, measure, organism) { 281 if(!exists(\u0026quot;GOSemSimEnv\u0026quot;)) .initial() 282 fname \u0026lt;- paste(\u0026quot;Info_Contents\u0026quot;, ont, organism, sep=\u0026quot;_\u0026quot;) 283 tryCatch(utils::data(list=fname, package=\u0026quot;GOSemSim\u0026quot;, envir=GOSemSimEnv)) 284 Info.contents \u0026lt;- get(\u0026quot;IC\u0026quot;, envir=GOSemSimEnv) 285 286 rootCount \u0026lt;- max(Info.contents[Info.contents != Inf]) 287 Info.contents[\u0026quot;all\u0026quot;] = 0 288 p1 \u0026lt;- Info.contents[GOID1]/rootCount 289 p2 \u0026lt;- Info.contents[GOID2]/rootCount 290 291 if (p1 == 0 || p2 == 0) return (NA) 292 Ancestor.name \u0026lt;- switch(ont, 293 MF = \u0026quot;MFAncestors\u0026quot;, 294 BP = \u0026quot;BPAncestors\u0026quot;, 295 CC = \u0026quot;CCAncestors\u0026quot; 296 ) 297 if (!exists(Ancestor.name, envir=GOSemSimEnv)) { 298 ygcGetAncestors(ont) 299 } 300 301 Ancestor \u0026lt;- get(Ancestor.name, envir=GOSemSimEnv) 302 ancestor1 \u0026lt;- unlist(Ancestor[GOID1]) 303 ancestor2 \u0026lt;- unlist(Ancestor[GOID2]) 304 if (GOID1 == GOID2) { 305 commonAncestor \u0026lt;- GOID1 306 } else if (GOID1 %in% ancestor2) { 307 commonAncestor \u0026lt;- GOID1 308 } else if (GOID2 %in% ancestor1) { 309 commonAncestor \u0026lt;- GOID2 310 } else { 311 commonAncestor \u0026lt;- intersect(ancestor1, ancestor2) 312 } 313 if (length(commonAncestor) == 0) return (NA) 314 pms \u0026lt;- max(Info.contents[commonAncestor], na.rm=TRUE)/rootCount 315 sim\u0026lt;-switch(measure, 316 Resnik = pms, 317 Lin = pms/(p1+p2), 318 Jiang = 1 - min(1, -2*pms + p1 + p2), 319 Rel = 2*pms/(p1+p2)*(1-exp(-pms*rootCount)) 320 ) 321 return (sim) 322 }  Let\u0026rsquo;s look at some helper functions in ppiPre:\n 477 rebuildICdata \u0026lt;- function(){ 478 ont \u0026lt;- c(\u0026quot;MF\u0026quot;,\u0026quot;CC\u0026quot;, \u0026quot;BP\u0026quot;) 479 species \u0026lt;- c(\u0026quot;human\u0026quot;, \u0026quot;rat\u0026quot;, \u0026quot;mouse\u0026quot;, \u0026quot;fly\u0026quot;, \u0026quot;yeast\u0026quot;, \u0026quot;zebrafish\u0026quot;, \u0026quot;arabidopsis\u0026quot;,\u0026quot;worm\u0026quot;, \u0026quot;ecolik12\u0026quot;, \u0026quot;bovine\u0026quot;,\u0026quot;canine\u0026quot;,\u0026quot;anopheles\u0026quot;,\u0026quot;ecsakai\u0026quot;,\u0026quot;chicken\u0026quot;,\u0026quot;chimp\u0026quot;,\u0026quot;malaria\u0026quot;,\u0026quot;rhesus\u0026quot;,\u0026quot;pig\u0026quot;,\u0026quot;xenopus\u0026quot;,\u0026quot;coelicolor\u0026quot;) 480 cat(\u0026quot;------------------------------------\\n\u0026quot;) 481 cat(\u0026quot;calulating Information Content...\\nSpecies:\\t\\tOntology\\n\u0026quot;) 482 for (i in ont) { 483 for (j in species) { 484 cat(j) 485 cat(\u0026quot;\\t\\t\\t\u0026quot;) 486 cat(i) 487 cat(\u0026quot;\\n\u0026quot;) 488 TCSSComputeIC(ont=i, organism=j) 489 } 490 } 491 cat(\u0026quot;------------------------------------\\n\u0026quot;) 492 message(\u0026quot;done...\u0026quot;) 493 }  Again, it is identical to GOSemSim 1.6.8:\n 390 rebuildICdata \u0026lt;- function(){ 391 ont \u0026lt;- c(\u0026quot;MF\u0026quot;,\u0026quot;CC\u0026quot;, \u0026quot;BP\u0026quot;) 392 species \u0026lt;- c(\u0026quot;human\u0026quot;, \u0026quot;rat\u0026quot;, \u0026quot;mouse\u0026quot;, \u0026quot;fly\u0026quot;, \u0026quot;yeast\u0026quot;, \u0026quot;zebrafish\u0026quot;, \u0026quot;arabidopsis\u0026quot;,\u0026quot;worm\u0026quot;, \u0026quot;ecolik12\u0026quot;, \u0026quot;bovine\u0026quot;,\u0026quot;canine\u0026quot;,\u0026quot;anopheles\u0026quot;,\u0026quot;ecsakai\u0026quot;,\u0026quot;chicken\u0026quot;,\u0026quot;chimp\u0026quot;,\u0026quot;malaria\u0026quot;,\u0026quot;rhesus\u0026quot;,\u0026quot;pig\u0026quot;,\u0026quot;xenopus\u0026quot;) 393 cat(\u0026quot;------------------------------------\\n\u0026quot;) 394 cat(\u0026quot;calulating Information Content...\\nSpecies:\\t\\tOntology\\n\u0026quot;) 395 for (i in ont) { 396 for (j in species) { 397 cat(j) 398 cat(\u0026quot;\\t\\t\\t\u0026quot;) 399 cat(i) 400 cat(\u0026quot;\\n\u0026quot;) 401 ygcCompute_Information_Content(ont=i, organism=j) 402 } 403 } 404 cat(\u0026quot;------------------------------------\\n\u0026quot;) 405 print(\u0026quot;done...\u0026quot;) 406 }  Let\u0026rsquo;s look at the internal function TCSSComputeIC in ppiPre:\n 410 TCSSComputeIC \u0026lt;- function(dropCodes=\u0026quot;IEA\u0026quot;, ont, organism) { 411 message(\u0026quot;Calulating IC...\u0026quot;) 412 wh_ont \u0026lt;- match.arg(ont, c(\u0026quot;MF\u0026quot;, \u0026quot;BP\u0026quot;, \u0026quot;CC\u0026quot;)) 413 wh_organism \u0026lt;- match.arg(organism, c(\u0026quot;human\u0026quot;, \u0026quot;fly\u0026quot;, \u0026quot;mouse\u0026quot;, \u0026quot;rat\u0026quot;, \u0026quot;yeast\u0026quot;, \u0026quot;zebrafish\u0026quot;, \u0026quot;worm\u0026quot;, \u0026quot;arabidopsis\u0026quot;, \u0026quot;ecolik12\u0026quot;, \u0026quot;bovine\u0026quot;,\u0026quot;canine\u0026quot;,\u0026quot;anopheles\u0026quot;,\u0026quot;ecsakai\u0026quot;,\u0026quot;chicken\u0026quot;,\u0026quot;chimp\u0026quot;,\u0026quot;malaria\u0026quot;,\u0026quot;rhesus\u0026quot;,\u0026quot;pig\u0026quot;,\u0026quot;xenopus\u0026quot;, \u0026quot;coelicolor\u0026quot;)) 414 CheckAnnotationPackage(wh_organism) 415 gomap \u0026lt;- switch(organism, 416 human = org.Hs.egGO, 417 fly = org.Dm.egGO, 418 mouse = org.Mm.egGO, 419 rat = org.Rn.egGO, 420 yeast = org.Sc.sgdGO, 421 zebrafish = org.Dr.egGO, 422 worm = org.Ce.egGO, 423 arabidopsis = org.At.tairGO, 424 ecoli = org.EcK12.egGO, 425 bovine = org.Bt.egGO, 426 canine = org.Cf.egGO, 427 anopheles = org.Ag.egGO, 428 ecsakai = org.EcSakai.egGO, 429 chicken = org.Gg.egGO, 430 chimp = org.Pt.egGO, 431 malaria = org.Pf.plasmoGO, 432 rhesus = org.Mmu.egGO, 433 pig = org.Ss.egGO, 434 xenopus = org.Xl.egGO, 435 coelicolor = org.Sco.egGO 436 ) 437 438 mapped_genes \u0026lt;- mappedkeys(gomap) 439 gomap = AnnotationDbi::as.list(gomap[mapped_genes]) 440 if (!is.null(dropCodes)){ 441 gomap\u0026lt;-sapply(gomap,function(x) sapply(x,function(y) c(y$Evidence %in% dropCodes, y$Ontology %in% wh_ont))) 442 gomap\u0026lt;-sapply(gomap, function(x) x[2,x[1,]==\u0026quot;FALSE\u0026quot;]) 443 gomap\u0026lt;-gomap[sapply(gomap,length) \u0026gt;0] 444 }else { 445 gomap \u0026lt;- sapply(gomap,function(x) sapply(x,function(y) y$Ontology %in% wh_ont)) 446 } 447 448 goterms\u0026lt;-unlist(sapply(gomap, function(x) names(x)), use.names=FALSE) # all GO terms appearing in an annotation 449 goids \u0026lt;- toTable(GOTERM) 450 451 goids \u0026lt;- unique(goids[goids[,\u0026quot;Ontology\u0026quot;] == wh_ont, \u0026quot;go_id\u0026quot;]) 452 gocount \u0026lt;- table(goterms) 453 goname \u0026lt;- names(gocount) #goid of specific organism and selected category. 454 455 go.diff \u0026lt;- setdiff(goids, goname) 456 m \u0026lt;- double(length(go.diff)) 457 names(m) \u0026lt;- go.diff 458 gocount \u0026lt;- as.vector(gocount) 459 names(gocount) \u0026lt;- goname 460 gocount \u0026lt;- c(gocount, m) 461 462 Offsprings.name \u0026lt;- switch(wh_ont, 463 MF = \u0026quot;MFOffsprings\u0026quot;, 464 BP = \u0026quot;BPOffsprings\u0026quot;, 465 CC = \u0026quot;CCOffsprings\u0026quot; 466 ) 467 if (!exists(Offsprings.name, envir=ppiPreEnv)) { 468 TCSSGetOffsprings(wh_ont) 469 } 470 Offsprings \u0026lt;- get(Offsprings.name, envir=ppiPreEnv) 471 cnt \u0026lt;- sapply(goids,function(x){ c=gocount[unlist(Offsprings[x])]; gocount[x]+sum(c[!is.na(c)])}) 472 names(cnt) \u0026lt;- goids 473 IC\u0026lt;- -log(cnt/sum(gocount)) 474 message(\u0026quot;done...\u0026quot;) 475 return (IC) 476 }  and ygcCompute_Information_Content in GOSemSim 1.6.8:\n 326 ygcCompute_Information_Content \u0026lt;- function(dropCodes=\u0026quot;NULL\u0026quot;, ont, organism) { 327 wh_ont \u0026lt;- match.arg(ont, c(\u0026quot;MF\u0026quot;, \u0026quot;BP\u0026quot;, \u0026quot;CC\u0026quot;)) 328 wh_organism \u0026lt;- match.arg(organism, c(\u0026quot;human\u0026quot;, \u0026quot;fly\u0026quot;, \u0026quot;mouse\u0026quot;, \u0026quot;rat\u0026quot;, \u0026quot;yeast\u0026quot;, \u0026quot;zebrafish\u0026quot;, \u0026quot;worm\u0026quot;, \u0026quot;arabidopsis\u0026quot;, \u0026quot;ecolik12\u0026quot;, \u0026quot;bovine\u0026quot;,\u0026quot;canine\u0026quot;,\u0026quot;anopheles\u0026quot;,\u0026quot;ecsakai\u0026quot;,\u0026quot;chicken\u0026quot;,\u0026quot;chimp\u0026quot;,\u0026quot;malaria\u0026quot;,\u0026quot;rhesus\u0026quot;,\u0026quot;pig\u0026quot;,\u0026quot;xenopus\u0026quot;)) 329 ygcCheckAnnotationPackage(wh_organism) 330 gomap \u0026lt;- switch(wh_organism, 331 human = org.Hs.egGO, 332 fly = org.Dm.egGO, 333 mouse = org.Mm.egGO, 334 rat = org.Rn.egGO, 335 yeast = org.Sc.sgdGO, 336 zebrafish = org.Dr.egGO, 337 worm = org.Ce.egGO, 338 arabidopsis = org.At.tairGO, 339 ecolik12 = org.EcK12.egGO, 340 bovine = org.Bt.egGO, 341 canine = org.Cf.egGO, 342 anopheles = org.Ag.egGO, 343 ecsakai = org.EcSakai.egGO, 344 chicken = org.Gg.egGO, 345 chimp = org.Pt.egGO, 346 malaria = org.Pf.plasmoGO, 347 rhesus = org.Mmu.egGO, 348 pig = org.Ss.egGO, 349 xenopus = org.Xl.egGO 350 ) 351 mapped_genes \u0026lt;- mappedkeys(gomap) 352 gomap = AnnotationDbi::as.list(gomap[mapped_genes]) 353 if (!is.null(dropCodes)){ 354 gomap\u0026lt;-sapply(gomap,function(x) sapply(x,function(y) c(y$Evidence %in% dropCodes, y$Ontology %in% wh_ont))) 355 gomap\u0026lt;-sapply(gomap, function(x) x[2,x[1,]==\u0026quot;FALSE\u0026quot;]) 356 gomap\u0026lt;-gomap[sapply(gomap,length) \u0026gt;0] 357 }else { 358 gomap \u0026lt;- sapply(gomap,function(x) sapply(x,function(y) y$Ontology %in% wh_ont)) 359 } 360 361 goterms\u0026lt;-unlist(sapply(gomap, function(x) names(x)), use.names=FALSE) # all GO terms appearing in an annotation 362 goids \u0026lt;- toTable(GOTERM) 363 # all go terms which belong to the corresponding category.. 364 goids \u0026lt;- unique(goids[goids[,\u0026quot;Ontology\u0026quot;] == wh_ont, \u0026quot;go_id\u0026quot;]) 365 gocount \u0026lt;- table(goterms) 366 goname \u0026lt;- names(gocount) #goid of specific organism and selected category. 367 ## ensure goterms not appearing in the specific annotation have 0 frequency.. 368 go.diff \u0026lt;- setdiff(goids, goname) 369 m \u0026lt;- double(length(go.diff)) 370 names(m) \u0026lt;- go.diff 371 gocount \u0026lt;- as.vector(gocount) 372 names(gocount) \u0026lt;- goname 373 gocount \u0026lt;- c(gocount, m) 374 375 Offsprings.name \u0026lt;- switch(wh_ont, 376 MF = \u0026quot;MFOffsprings\u0026quot;, 377 BP = \u0026quot;BPOffsprings\u0026quot;, 378 CC = \u0026quot;CCOffsprings\u0026quot; 379 ) 380 if (!exists(Offsprings.name, envir=GOSemSimEnv)) { 381 ygcGetOffsprings(wh_ont) 382 } 383 Offsprings \u0026lt;- get(Offsprings.name, envir=GOSemSimEnv) 384 cnt \u0026lt;- sapply(goids,function(x){ c=gocount[unlist(Offsprings[x])]; gocount[x]+sum(c[!is.na(c)])}) 385 names(cnt) \u0026lt;- goids 386 IC\u0026lt;- -log(cnt/sum(gocount)) 387 save(IC, file=paste(paste(\u0026quot;Info_Contents\u0026quot;, wh_ont, organism, sep=\u0026quot;_\u0026quot;), \u0026quot;.rda\u0026quot;, sep=\u0026quot;\u0026quot;)) 388 }  Another helper function GetGOMap in ppiPre:\n 308 GetGOMap \u0026lt;- function(organism=\u0026quot;yeast\u0026quot;) { 309 if(!exists(\u0026quot;ppiPreEnv\u0026quot;)) .initial() 310 CheckAnnotationPackage(organism) #download and install the packages 311 species \u0026lt;- switch(organism, 312 human = \u0026quot;Hs\u0026quot;, 313 fly = \u0026quot;Dm\u0026quot;, 314 mouse = \u0026quot;Mm\u0026quot;, 315 rat = \u0026quot;Rn\u0026quot;, 316 yeast = \u0026quot;Sc\u0026quot;, 317 zebrafish = \u0026quot;Dr\u0026quot;, 318 worm = \u0026quot;Ce\u0026quot;, 319 arabidopsis = \u0026quot;At\u0026quot;, 320 ecolik12 = \u0026quot;EcK12\u0026quot;, 321 bovine = \u0026quot;Bt\u0026quot;, 322 canine = \u0026quot;Cf\u0026quot;, 323 anopheles = \u0026quot;Ag\u0026quot;, 324 ecsakai = \u0026quot;EcSakai\u0026quot;, 325 chicken = \u0026quot;Gg\u0026quot;, 326 chimp = \u0026quot;Pt\u0026quot;, 327 malaria = \u0026quot;Pf\u0026quot;, 328 rhesus = \u0026quot;Mmu\u0026quot;, 329 pig = \u0026quot;Ss\u0026quot;, 330 xenopus = \u0026quot;Xl\u0026quot;, 331 coelicolor = \u0026quot;Sco\u0026quot; 332 ) 333 334 gomap \u0026lt;- switch(organism, 335 human = org.Hs.egGO, 336 fly = org.Dm.egGO, 337 mouse = org.Mm.egGO, 338 rat = org.Rn.egGO, 339 yeast = org.Sc.sgdGO, 340 zebrafish = org.Dr.egGO, 341 worm = org.Ce.egGO, 342 arabidopsis = org.At.tairGO, 343 ecoli = org.EcK12.egGO, 344 bovine = org.Bt.egGO, 345 canine = org.Cf.egGO, 346 anopheles = org.Ag.egGO, 347 ecsakai = org.EcSakai.egGO, 348 chicken = org.Gg.egGO, 349 chimp = org.Pt.egGO, 350 malaria = org.Pf.plasmoGO, 351 rhesus = org.Mmu.egGO, 352 pig = org.Ss.egGO, 353 xenopus = org.Xl.egGO, 354 coelicolor = org.Sco.egGO 355 ) 356 357 assign(eval(species), gomap, envir=ppiPreEnv) 358 }  My ygcGetGOMap in GOSemSim 1.6.8:\n 100 ygcGetGOMap \u0026lt;- function(organism=\u0026quot;human\u0026quot;) { 101 if(!exists(\u0026quot;GOSemSimEnv\u0026quot;)) .initial() 102 ygcCheckAnnotationPackage(organism) 103 species \u0026lt;- switch(organism, 104 human = \u0026quot;Hs\u0026quot;, 105 fly = \u0026quot;Dm\u0026quot;, 106 mouse = \u0026quot;Mm\u0026quot;, 107 rat = \u0026quot;Rn\u0026quot;, 108 yeast = \u0026quot;Sc\u0026quot;, 109 zebrafish = \u0026quot;Dr\u0026quot;, 110 worm = \u0026quot;Ce\u0026quot;, 111 arabidopsis = \u0026quot;At\u0026quot;, 112 ecolik12 = \u0026quot;EcK12\u0026quot;, 113 bovine = \u0026quot;Bt\u0026quot;, 114 canine = \u0026quot;Cf\u0026quot;, 115 anopheles = \u0026quot;Ag\u0026quot;, 116 ecsakai = \u0026quot;EcSakai\u0026quot;, 117 chicken = \u0026quot;Gg\u0026quot;, 118 chimp = \u0026quot;Pt\u0026quot;, 119 malaria = \u0026quot;Pf\u0026quot;, 120 rhesus = \u0026quot;Mmu\u0026quot;, 121 pig = \u0026quot;Ss\u0026quot;, 122 xenopus = \u0026quot;Xl\u0026quot; 123 ) 124 gomap \u0026lt;- switch(organism, 125 human = org.Hs.egGO, 126 fly = org.Dm.egGO, 127 mouse = org.Mm.egGO, 128 rat = org.Rn.egGO, 129 yeast = org.Sc.sgdGO, 130 zebrafish = org.Dr.egGO, 131 worm = org.Ce.egGO, 132 arabidopsis = org.At.tairGO, 133 ecolik12 = org.EcK12.egGO, 134 bovine = org.Bt.egGO, 135 canine = org.Cf.egGO, 136 anopheles = org.Ag.egGO, 137 ecsakai = org.EcSakai.egGO, 138 chicken = org.Gg.egGO, 139 chimp = org.Pt.egGO, 140 malaria = org.Pf.plasmoGO, 141 rhesus = org.Mmu.egGO, 142 pig = org.Ss.egGO, 143 xenopus = org.Xl.egGO 144 ) 145 assign(eval(species), gomap, envir=GOSemSimEnv) 146 }  There are many other small helper functions that are identical. ppiPre copy most of the source code of GOSemSim. There is 862 lines in GOKEGGSims.r, in which only the following function is about KEGG that is not related to GOSemSim.\n 10 KEGGSim \u0026lt;- function(protein1, protein2) # KEGG-based similarity of two proteins 11 { 12 13 if(!require(\u0026quot;KEGG.db\u0026quot;)){ stop(\u0026quot;package KEGG.db is needed.\u0026quot;)} 14 Pathway1 \u0026lt;- KEGG.db::KEGGEXTID2PATHID[[protein1]] 15 Pathway2 \u0026lt;- KEGG.db::KEGGEXTID2PATHID[[protein2]] 16 intersec \u0026lt;- length(na.omit(match(Pathway1, Pathway2))) 17 if(intersec==0) 18 sim\u0026lt;-0 19 else 20 sim\u0026lt;-intersec/(length(Pathway1)+length(Pathway2)-intersec) 21 return(sim) 22 }  This function is only 12 lines, and it calculates the similarity by divide the intersect to the total sum. The other lines in GOKEGGSims.r, more than 800 lines, were totally copied from GOSemSim. Other source files in the ppiPre only has less than 450 lines in sum. About 2\u0026frasl;3 of ppiPre were copied from GOSemSim.\nThe author of ppiPre changed the function names and pretend it is their original works. They just copy and paste and take the credit of months of development of GOSemSim. This is really sucks.\nAfter I found this issue, I add a proper use of GOSemSim statement in its github page:\n I am very glad that many people find GOSemSim useful and GOSemSim has been cited by 114 (by google scholar, Aug, 2014).\nThere are two R packages BiSEp and tRanslatome depend on GOSemSim and three R packages clusterProfiler, DOSE and Rcpi import GOSemSim.\nSemDist package copy some of the source code from GOSemSim with acknowledging within source code and document.\nppiPre package copy many source code from GOSemSim without any acknowledgement in souce code or document and did not cited GOSemSim in their publication. This violates the restriction of open source license.\nFor R developers, if you found functions provided in GOSemSim useful, please depends or imports GOSemSim. If you would like to copy and paste source code, you should acknowledge the source code was copied/derived from GOSemSim authored by Guangchuang Yu guangchuangyu@gmail.com within source code, add GOSemSim in Suggests field and also includes the following reference in the man files for functions that copied/derived from GOSemSim and cited in vignettes.\n\\references{ Yu et al. (2010) GOSemSim: an R package for measuring semantic similarity among GO terms and gene products \\emph{Bioinformatics} (Oxford, England), 26:7 976\u0026ndash;978, April 2010. ISSN 1367-4803 \\url{http://bioinformatics.oxfordjournals.org/cgi/content/abstract/26/7/976} PMID: 20179076 }\n You are welcome to use GOSemSim in the way you like, but please cite it and give it the proper credit. I hope you can understand. ```\n","date":1416680843,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1416680843,"objectID":"69d7d4f0805d7b78cb06eaeb7008097f","permalink":"https://guangchuangyu.github.io/2014/11/proper-use-of-gosemsim/","publishdate":"2014-11-23T02:27:23+08:00","relpermalink":"/2014/11/proper-use-of-gosemsim/","section":"post","summary":"One day, I am looking for R packages that can analyze PPI and after searching, I found the ppiPre package in CRAN.\n","tags":["GOSemSim"],"title":"proper use of GOSemSim","type":"post"},{"authors":null,"categories":["BSD","Mac OS"],"content":"Installing OS is painful, you need to re-install all the software and configure them to the way you want. We don\u0026rsquo;t want to wast time in doing this. To prevent doing this dirty job, we perform an upgrade install instead of clean install. We all have experience of upgrading Windows sucks, same as OS X. All the issues you have in old system will be remained, and sometimes new issues will be introduced in the process of upgrading. The system will be slower compare to clean install one.\nLife is short, we want a clean system without wasting time in setting software, but how can it be. The answer is yes and no. Firstly, you should have two partitions, one for OS and the other one for your data. Only in this way, you can formatting the system partition and keep your data untouch.\nWhen I was an undergraduate student, I install both FreeBSD and debian in my PC. They were configured to share the same home partition, so that I don\u0026rsquo;t have to configure software in both of the systems. In OS X, the home directory is not located at traditional path /home/userName, but at /Users/userName. You should change your home directory from system partition to your data partition. If you have done that, you can formatting your system partition as I do and clean install the OS X system.\nAfter the system was installed, I need to install Xcode for compiling software, MacTex for compiling $\\LaTeX$ documents, and MS office, which is the reason I need OS X.\nAlmost all the other software I used in OS X is the same as in Linux. After I setting the home directory to my previous location. All the software will perform as in my old system. My setting of the trackpad is remain, and so as my dock items; Firefox have its bookmarks and plugins; Emacs know how to load extensions; Even plugins I installed for MS Word are already there. I don\u0026rsquo;t need to do anything, and everything works in their old way.\nUpgrading R is tedious, for you need to re-install all the packages. The library path for brew installed R is something like this: \u0026lsquo;﻿﻿/usr/local/Cellar/r/3.1.2/R.framework/Versions/3.1/Resources/library\u0026rsquo;. If you installed your packages in this folder, you need to get installed package names from it. The path is long and hard to remember (many soft links may get you lost if you don\u0026rsquo;t know the function \u0026lsquo;.libPaths()\u0026rsquo;). My solution is to install all my packages in ~/Library/R/3.1/library, so after I re-installed R, all the packages are still there. When R is upgrade to 3.2, all I need is to move the folder from 3.1 to 3.2 and use one command \u0026lsquo;update.packages(ask=FALSE, checkBuilt=TRUE)\u0026rsquo; to update them. This is a painless way for R and this idea is the secret of painless clean install of UNIX-like systems including OS X.\n","date":1415910888,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1415910888,"objectID":"b684ff18b3bccc7f79f3b134ce5513e8","permalink":"https://guangchuangyu.github.io/2014/11/hello-yosemite/","publishdate":"2014-11-14T04:34:48+08:00","relpermalink":"/2014/11/hello-yosemite/","section":"post","summary":"Installing OS is painful, you need to re-install all the software and configure them to the way you want. We don\u0026rsquo;t want to wast time in doing this. To prevent doing this dirty job, we perform an upgrade install instead of clean install. We all have experience of upgrading Windows sucks, same as OS X. All the issues you have in old system will be remained, and sometimes new issues will be introduced in the process of upgrading. The system will be slower compare to clean install one.\n","tags":["OSX"],"title":"hello yosemite","type":"post"},{"authors":null,"categories":["R","Visualization","Epidemics"],"content":"The SIR model divides the population to three compartments: Susceptible, Infected and Recovered. If the disease dynamic fits the SIR model, then the flow of individuals is one direction from the susceptible group to infected group and then to the recovered group. All individuals are assumed to be identical in terms of their susceptibility to infection, infectiousness if infected and mixing behaviour associated with disease transmission.\nWe defined: $S_t$ = the number of susceptible individuals at time t\n$ I_t $ = the number of infected individuals at time t\n$R_t$ = the number of recovered individuals at time t\nSuppose on average every infected individual will contact $\\gamma$ person, and $\\kappa$ percent of these $\\gamma$ person will be infected. Then on average there are $\\beta = \\gamma \\times \\kappa$ person will be infected an infected individual.\nSo with infected number $I_t$, they will infected $\\beta I_t$ individuals. Since not all people are susceptible, this number should multiple to the percentage of susceptible individuals. Therefore, $I_t$ infected individuals will infect $\\beta \\frac{S_t}{N} I_t$ individuals.\nAnother parameter $\\alpha$ describes the percentage of infected individuals to recover in a time period. That is on average, it takes $1/\\alpha$ periods for an infected person to recover.\nrequire(reshape2) require(ggplot2) require(gridExtra) SIR \u0026lt;- function(N, S0, I0, beta, alpha, t) { S \u0026lt;- numeric(t) I \u0026lt;- numeric(t) S[1] \u0026lt;- S0 I[1] \u0026lt;- I0 for (i in 2:t) { S[i] \u0026lt;- S[i-1] - beta*S[i-1]/N*I[i-1] I[i] \u0026lt;- I[i-1] + beta*S[i-1]/N*I[i-1] - alpha * I[i-1] if (I[i] \u0026lt; 1 || S[i] \u0026lt; 1) break } df \u0026lt;- data.frame(time=1:t, S=S, I=I, R=N-S-I) df \u0026lt;- df[S\u0026gt;1\u0026amp;I\u0026gt;1,] df$AR \u0026lt;- (df$I+df$R)/N nr \u0026lt;- nrow(df) rate \u0026lt;- df$I[2:nr]/df$I[1:(nr-1)] df$rate \u0026lt;- c(rate[1], rate) return(df) } plotSIR \u0026lt;- function(df) { nr \u0026lt;- nrow(df) p1 \u0026lt;- ggplot(df, aes(time, I))+geom_line() p1 \u0026lt;- p1+ggtitle(\u0026quot;No. of Infections\u0026quot;) p1 \u0026lt;- p1+geom_point(x=df[nr, \u0026quot;time\u0026quot;], y=df[nr, \u0026quot;I\u0026quot;], color=\u0026quot;red\u0026quot;, size=3) p2 \u0026lt;- ggplot(df, aes(time, AR))+geom_line()+xlab(\u0026quot;\u0026quot;) p2 \u0026lt;- p2 + ggtitle(\u0026quot;Attack rate increases\u0026quot;) p2 \u0026lt;- p2 + geom_point(x=df[nr, \u0026quot;time\u0026quot;], y=df[nr, \u0026quot;AR\u0026quot;], color=\u0026quot;red\u0026quot;, size=3) p3 \u0026lt;- ggplot(df, aes(time, S))+geom_line() p3 \u0026lt;- p3 +ggtitle(\u0026quot;Depletion of susceptibles\u0026quot;) p3 \u0026lt;- p3+ylim(0, max(df$S)) + geom_point(x=df[nr, \u0026quot;time\u0026quot;], y=df[nr, \u0026quot;S\u0026quot;], color=\u0026quot;red\u0026quot;, size=3) p4 \u0026lt;- ggplot(df, aes(time, rate))+geom_line() p4 \u0026lt;- p4 + ggtitle(\u0026quot;R\u0026quot;)+ ylim(range(df$rate)+c(-.2, .2)) + geom_hline(yintercept=1, color=\u0026quot;steelblue\u0026quot;, linetype=\u0026quot;dashed\u0026quot;) p4 \u0026lt;- p4+geom_point(x=df[nr, \u0026quot;time\u0026quot;], y=df[nr, \u0026quot;rate\u0026quot;], color=\u0026quot;red\u0026quot;, size=3) grid.arrange(p1,p2,p3,p4, ncol=1) invisible(list(p1=p1, p2=p2, p3=p3, p4=p4)) } df \u0026lt;- SIR(1e6, 1e6-1, 1, 0.3, 0.1, 300) plotSIR(df)  ","date":1413151042,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1413151042,"objectID":"ec3c1958ba7134ca777e1638ff68e95d","permalink":"https://guangchuangyu.github.io/2014/10/sir-model-of-epidemics/","publishdate":"2014-10-13T05:57:22+08:00","relpermalink":"/2014/10/sir-model-of-epidemics/","section":"post","summary":"The SIR model divides the population to three compartments: Susceptible, Infected and Recovered. If the disease dynamic fits the SIR model, then the flow of individuals is one direction from the susceptible group to infected group and then to the recovered group. All individuals are assumed to be identical in terms of their susceptibility to infection, infectiousness if infected and mixing behaviour associated with disease transmission.\nWe defined: $S_t$ = the number of susceptible individuals at time t\n$ I_t $ = the number of infected individuals at time t\n$R_t$ = the number of recovered individuals at time t\nSuppose on average every infected individual will contact $\\gamma$ person, and $\\kappa$ percent of these $\\gamma$ person will be infected. Then on average there are $\\beta = \\gamma \\times \\kappa$ person will be infected an infected individual.\n","tags":["SIR"],"title":"SIR Model of Epidemics","type":"post"},{"authors":null,"categories":["Genomics","Visualization","R"],"content":"Nearest gene annotation Almost all annotation software calculate the distance of a peak to the nearest TSS and assign the peak to that gene. This can be misleading, as binding sites might be located between two start sites of different genes or hit different genes which have the same TSS location in the genome.\nThe function annotatePeak provides option to assign genes with a max distance cutoff and all genes within this distance were reported for each peak.\n\u0026gt; anno = annotatePeak(getSampleFiles()[[4]], addFlankGeneInfo=TRUE, flankDistance=5000) \u0026gt;\u0026gt; loading peak file... 2014-09-30 01:12:09 PM \u0026gt;\u0026gt; preparing features information... 2014-09-30 01:12:09 PM \u0026gt;\u0026gt; identifying nearest features... 2014-09-30 01:12:10 PM \u0026gt;\u0026gt; calculating distance from peak to TSS... 2014-09-30 01:12:11 PM \u0026gt;\u0026gt; assigning genomic annotation... 2014-09-30 01:12:11 PM \u0026gt;\u0026gt; adding flank feature information from peaks...2014-09-30 01:12:37 PM \u0026gt;\u0026gt; assigning chromosome lengths 2014-09-30 01:12:39 PM \u0026gt;\u0026gt; done... 2014-09-30 01:12:39 PM \u0026gt; head(as.GRanges(anno)) GRanges object with 6 ranges and 14 metadata columns: seqnames ranges strand | V4 V5 | [1] chr1 [ 815092, 817883] * | MACS_peak_1 295.76 [2] chr1 [1243287, 1244338] * | MACS_peak_2 63.19 [3] chr1 [2979976, 2981228] * | MACS_peak_3 100.16 [4] chr1 [3566181, 3567876] * | MACS_peak_4 558.89 [5] chr1 [3816545, 3818111] * | MACS_peak_5 57.57 [6] chr1 [6304864, 6305704] * | MACS_peak_6 54.57 annotation geneChr geneStart geneEnd geneLength geneStrand [1] Distal Intergenic chr1 803451 812182 8732 - [2] Promoter (\u0026lt;=1kb) chr1 1243994 1247057 3064 + [3] Promoter (\u0026lt;=1kb) chr1 2976181 2980350 4170 - [4] Promoter (\u0026lt;=1kb) chr1 3547331 3566671 19341 - [5] Promoter (\u0026lt;=1kb) chr1 3816968 3832011 15044 + [6] Promoter (1-2kb) chr1 6304252 6305638 1387 + geneId transcriptId distanceToTSS [1] 284593 uc001abt.4 -5701 [2] 126789 uc001aed.3 0 [3] 440556 uc001aka.3 0 [4] 49856 uc001ako.3 0 [5] 100133612 uc001alg.3 0 [6] 390992 uc009vly.2 1452 flank_txIds [1] uc001abt.4 [2] uc001aea.2;uc001aeb.2;uc001aec.1;uc001aed.3;uc010nyi.2;uc009vjx.3;uc009vjy.1;uc001aee.2;uc001aef.2;uc001aeg.2;uc001aeh.2;uc001aei.2;uc001aek.2;uc009vjz.2;uc010nyj.2 [3] uc001aka.3;uc010nzg.1;uc001akc.3;uc001ake.3;uc001akf.3;uc009vlh.3 [4] uc001ako.3;uc001akn.3;uc010nzi.2;uc001akp.3;uc021ofb.1;uc021ofc.1;uc021ofd.1;uc021ofe.1;uc021off.1 [5] uc001alg.3;uc010nzo.2;uc001alh.4;uc001alf.3;uc009vls.3;uc031pkz.1 [6] uc001amp.2;uc009vly.2 flank_geneIds [1] 284593 [2] 116983;116983;116983;126789;126789;126789;54973;54973;54973;54973;54973;54973;54973;54973;54973 [3] 440556;440556;63976;63976;63976;63976 [4] 49856;49856;49856;7161;7161;7161;7161;7161;7161 [5] 100133612;100133612;100133612;339448;339448;339448 [6] 387509;390992 flank_gene_distances [1] -2910 [2] -1978;-18;0;0;0;-128;8492;15729;15729;15729;15729;15729;15729;15729;15729 [3] 0;0;-4514;-4514;-4514;-4514 [4] 0;0;0;-1253;-1253;-1253;-1253;-1253;-1253 [5] 0;0;0;0;0;0 [6] 15331;0 ------- seqinfo: 24 sequences from hg19 genome  Three extra columns, flank_txIds, flank_geneIds, flank_gene_distances were added if parameter addFlankGeneInfo is set to TRUE.\nGenomic annotation The annotation column annotates the genomic location of a given peak. Since some annotations overlap, they are assigned based on the following priority.\n Promoter (defined by tssRegion parameter) 5\u0026rsquo; UTR 3\u0026rsquo; UTR Exon Intron Downstream (immediate downstream of a gene, within 3kb) Distal Intergenic  I have implemented plotAnnoPie and plotAnnoBar to visualize their distribution. I am wondering how to visualize the annotation overlap and found venn pie-agram can partially solve this issue. It\u0026rsquo;s hard/impossible to visualize all the overlap information within one vennpie plot.\nI employed the vennpie to ChIPseeker, and now with the vennpie function, we can visualize some of the overlap annotations.\nvennpie(anno)  In order to manage complex data, annotatePeak now output a S4 object. Users can use as.GRanges to convert it to as.GRanges object or as.data.frame to convert it to data.frame and then the output can be exported by write.table function.\nCitation Yu G, Wang LG and He QY*. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. Bioinformatics 2015, 31(14):2382-2383.\n\n","date":1412139633,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1412139633,"objectID":"f2a0a1928152a0095db0644c1e8f1495","permalink":"https://guangchuangyu.github.io/2014/10/multiple-annotation-in-chipseeker/","publishdate":"2014-10-01T13:00:33+08:00","relpermalink":"/2014/10/multiple-annotation-in-chipseeker/","section":"post","summary":"Nearest gene annotation Almost all annotation software calculate the distance of a peak to the nearest TSS and assign the peak to that gene. This can be misleading, as binding sites might be located between two start sites of different genes or hit different genes which have the same TSS location in the genome.\nThe function annotatePeak provides option to assign genes with a max distance cutoff and all genes within this distance were reported for each peak.\n","tags":["ChIPseeker"],"title":"multiple annotation in ChIPseeker","type":"post"},{"authors":null,"categories":["Linux","Software"],"content":" Usually Roche\u0026rsquo;s installer is a catastrophe, they only provides rpm packages of the software for 454 GS FLX (version 2.9). Although the package contains setup.sh, the script is useless since it is actually a binary payload.\nI run the setup.sh, and it throw error of not finding /sbin/lspci. In debian derived distribution, lspci command is located in /bin folder. This issue is easy to solve by adding a soft link to /sbin/lspci.\nThe second error message popping up says: \u0026quot;Error: Could not execute command: type rocks 2\u0026gt;\u0026amp;1\u0026quot;, and I used the command, sudo ln -s /bin/true /bin/rocks, to solve it.\nThe third error is lack of libraries zlib.i386, libXi.i386, libXtst.i386, and libXaw.i386. Since my OS is 64bit ubuntu 14.04 LTS, I used, sudo apt-get install ia32-libs, to install all the 32bit compatible libraries.\nThe fourth error is weird for it can\u0026rsquo;t found /bin/sh which is available for all unix-like systems. Since debian links sh to dash, while most of the Linux distributions links to bash, I changed the link to bash but the error still exists.\nI can\u0026rsquo;t figure out how to solve the fourth error and tried to install the rpm packages by using rpm -ivh command but the error doesn\u0026rsquo;t change.\nAlthough I can\u0026rsquo;t install the software using setup.sh, it install java6 successfully. I do believe I can install the software since it is java program. I start to extract the contents of these rpm packages and then it is very clear. Some programs, mostly tools of gsSeqTools, are binary files that needs shared libs and it is the reason why it throw error of lacking libraries. This issue had been solved.\nMost of the programs are jar files, and shell scripts that wrap the calling of these jar files. All these jar and shell script files can run properly by copying them to the right place.\nThe contents of rpm file can be extracted using the command like:\nrpm2cpio gsAmplicons-2.9-1.noarch.rpm| cpio -idmv  This is the key point of successfully installing 454 GS Data Analysis Software. I believe it can be installed on most of the Unix-like system.\nupdate When I upgrade Ubuntu to 16.04, I found that ia-32 is no more exist in package repo.\nSo, we need to download corresponding old packages:\n http://launchpadlibrarian.net/105344356/ia32-libs-multiarch_20090808ubuntu36_i386.deb http://mirrors.kernel.org/ubuntu/pool/universe/i/ia32-libs/ia32-libs_20090808ubuntu36_amd64.deb  Then, use sudo dpkg --force-all -i to install them and sudo apt-get install -f --fix-missing to install corresponding i386 packages.\n","date":1409816324,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1409816324,"objectID":"955ba23373329f13fe2f282086f2a85e","permalink":"https://guangchuangyu.github.io/2014/09/install-454-gs-data-analysis-software-on-ubuntu/","publishdate":"2014-09-04T15:38:44+08:00","relpermalink":"/2014/09/install-454-gs-data-analysis-software-on-ubuntu/","section":"post","summary":"Usually Roche\u0026rsquo;s installer is a catastrophe, they only provides rpm packages of the software for 454 GS FLX (version 2.9). Although the package contains setup.sh, the script is useless since it is actually a binary payload.\nI run the setup.sh, and it throw error of not finding /sbin/lspci. In debian derived distribution, lspci command is located in /bin folder. This issue is easy to solve by adding a soft link to /sbin/lspci.","tags":["454","ubuntu","redhat"],"title":"install 454 GS Data Analysis Software on ubuntu","type":"post"},{"authors":null,"categories":["R","Biology","Evolution"],"content":" Genetic drift is the term used in population genetics to refer to the statistical drift over time of gene frequencies in a population due to random sampling effects in the formation of successive generations. In a narrower sense, genetic drift refers to the expected population dynamics of neutral alleles (those defined as having no positive or negative impact on reproductive fitness), which are predicted to eventually become fixed at zero or 100% frequency in the absence of other mechanisms affecting allele distributions.\n The most important keyword in the definition of genetic drift is random sampling effects. The figure belowed illustrates this idea. The surviving individuals do not necessarily have selection advantage. They are randomly selected.\nGenetic drift can changes the proportion of genetic polymorphism. A particular mutation that are rare may becomes majority of the population due to random events. If all individuals in the population contain a particular mutation, we call it fixation.\n In population genetics, fixation is the change in a gene pool from a situation where there exists at least two variants of a particular gene (allele) to a situation where only one of the alleles remains.\n If there are m individuals contains a particular mutation in the population of size N, the ratio of have and do not have this mutation is $a = m/N$ , and $1-a$ respectively. According to Wright-Fisher model, the probability of n individuals that have this mutation in next generation follows the distribution of binomial: $P(n) = C^N_n a^n(1-a)^{N-n}$\nWith this distribution, we can perform simulation. Here, assume population size N=200, and initial probability of $ a=0.1 $ , we can sample n base on Wright-Fisher model and repeatedly update $a$ until $a$ is equals to 0 or 100%.\nIn the above figure, I showed 20 times of simulations. There are 2 fixations. The ratio 2\u0026frasl;20 is equals to the initial value of $a$ (0.1). For neutral mutation, the probability of fixation is equals to the mutation rate.\nNot all mutation are neutral. With selection pressures, some mutations have advantage while some mutations are deleterious. Advantageous mutation has fitness 1+s, while s is the selection coefficient. Fitness is the ratio between actual number of offspring and the expected offspring number. So individuals that contain advantageous mutation produce 1+s times of offspring than those do not have that mutation.\nThe mean of fitness in m copies of mutation is: $\\bar{w} = \\frac{m(1+s) + (N-m)}{N}$\nIn next generation, the ratio of this mutation is: $ a = \\frac{m(1+s)}{N\\bar{w}} $\nI used s=0.05 to perform simulation again. Most of the advantageous mutation can be fixed after 100 generations.\nIf I set s=0.2, mutation can be fixed after 30 generations.\nAccordingly, if mutation is deleterious, the fitness is 1-s.\nKimura proposed diffusion theory that the probability of fixation for advantageous mutation is: $p_{fix} = \\frac{1-e^{-2s}}{1-e^{-2Ns}}$\nand for deleterious mutation is: $ p_{fix} = \\frac{e^{2s}-1}{e^{2Ns}-1}$\nIf s is very small and Ns \u0026lt;\u0026lt; 1, the major force behind fixation is genetic drift, similar to neutral mutation (purple line).\nIn the condition of Ns \u0026gt;\u0026gt; 1 and s \u0026lt;\u0026lt; 1, $ e^{-2s} \\approx 1-2s$ and $p_{fix} \\approx 2s $ (red line).\nReference: Chapter 3 of Bioinformatics and Molecular Evolution\n","date":1407900275,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1407900275,"objectID":"338de7636d78b89abca4ef12f5787226","permalink":"https://guangchuangyu.github.io/2014/08/the-spread-of-new-mutations/","publishdate":"2014-08-13T11:24:35+08:00","relpermalink":"/2014/08/the-spread-of-new-mutations/","section":"post","summary":" Genetic drift is the term used in population genetics to refer to the statistical drift over time of gene frequencies in a population due to random sampling effects in the formation of successive generations. In a narrower sense, genetic drift refers to the expected population dynamics of neutral alleles (those defined as having no positive or negative impact on reproductive fitness), which are predicted to eventually become fixed at zero or 100% frequency in the absence of other mechanisms affecting allele distributions.\n The most important keyword in the definition of genetic drift is random sampling effects. The figure belowed illustrates this idea. The surviving individuals do not necessarily have selection advantage. They are randomly selected.\n","tags":["simulation","model","mutation"],"title":"The spread of new mutations","type":"post"},{"authors":null,"categories":["R","Bioinformatics"],"content":"@kaji331 compared cluserProfiler with GeneAnswers and found that clusterProfiler gives larger p values.\nIt eventually came out that he passed the input gene as numeric vector, which was supposed to be character and he used an old version of clusterProfiler which didn\u0026rsquo;t use as.character to coerce the input\nBut his comment forces me to test it.\nrequire(GeneAnswers) data('humanGeneInput') y \u0026lt;- geneAnswersBuilder(humanGeneInput, 'org.Hs.eg.db', categoryType='KEGG', testType='hyperG', pvalueT=0.1, geneExpressionProfile=humanExpr, verbose=FALSE) yy \u0026lt;- y@enrichmentInfo require(clusterProfiler) x \u0026lt;- enrichKEGG(humanGeneInput$GeneID, pvalueCutoff=0.2, qvalueCutoff=0.2, minGSSize=1) xx \u0026lt;- summary(x) id \u0026lt;- sub(\u0026quot;hsa\u0026quot;, \u0026quot;\u0026quot;, xx$ID) idx \u0026lt;- id %in% rownames(yy) p.clusterProfiler \u0026lt;- xx$pvalue[idx] p.GeneAnswers \u0026lt;- yy[id[idx],]$\u0026quot;p value\u0026quot; \u0026gt; cor(p.clusterProfiler, p.GeneAnswers) [1] 0.9996165 \u0026gt; p.clusterProfiler - p.GeneAnswers [1] 1.029789e-04 -3.588252e-05 -4.623010e-05 1.079117e-04 -1.075746e-04 [6] -1.077398e-04 -3.774637e-04 -2.849278e-04 -4.197993e-04 7.588155e-04 [11] -3.702141e-04 2.314721e-03 -5.695641e-04 -5.940830e-04 -4.923697e-04 [16] -5.560738e-04 -5.884079e-04 2.011138e-03  Here, I used the dataset, humanGeneInput, provided by GeneAnswers. There are 19 pathways have p values below 0.1 by GeneAnswers and 18 pathways have p values below 0.1 by clusterProfiler. 18 of them are the same and p values are highly correlated with very small differences. Enrichment analyses are tested by geometric model, I believe all packages do it in the same way. The difference should be attributed to annotation file and I found background ratio are different.\n\u0026gt; xx[1,] ID Description GeneRatio BgRatio pvalue p.adjust hsa04110 hsa04110 Cell cycle 6/51 128/5894 0.00075424 0.02191169 qvalue geneID Count hsa04110 0.01683117 894/595/4175/6502/4173/9134 6 \u0026gt; yy[1,] genes in Category percent in the observed List percent in the genome 04110 6 0.1176471 0.02112436 fold of overrepresents odds ratio p value 04110 5.56926 6.441808 0.0006512612 \u0026gt; allEG = unique(unlist(as.list(org.Hs.egPATH2EG))) \u0026gt; length(get(\u0026quot;04110\u0026quot;, org.Hs.egPATH2EG)) [1] 124 \u0026gt; length(allEG) [1] 5870 \u0026gt; length(get(\u0026quot;04110\u0026quot;, org.Hs.egPATH2EG))/length(allEG) [1] 0.02112436  In the above example, the BgRatio of clusterProfiler is 128\u0026frasl;5894, slightly larger than 0.02112436 calculated by GeneAnswers. This is why clusterProfiler gives a p value larger than GeneAnswers (In this particular pathway of this particular example, clusterProfiler not always produce larger p values). The annotation file used by clusterProfiler is KEGG.db, while GeneAnswers uses org.Hs.eg.db. This is the reason of the difference and it\u0026rsquo;s not a big deal.\nIt\u0026rsquo;s not a good idea to give the background ratio in decimal format as GeneAnswers does. We have no idea of the number of total genes in background with ratio like 0.02112436. Some software packages may use the gene number of the whole genome as background. If the total gene number is setting to 18000, the background ratio turn out to be 124\u0026frasl;18000=0.006888889. With 0.006888889, it\u0026rsquo;s hard to detect the background gene number was set to a larger number. In this scenario, all the p values will become very small, and many false positive were reported.\nclusterProfiler and GeneAnswers estimate the total genes in the right way, but there are many packages may setting it to all the genes, no matter they have annotation or not. For instance, some software may setting the background to 20,000 when testing human genes.\nI still remember in 2007, I used princeton\u0026rsquo;s web server, http://go.princeton.edu/cgi-bin/GOTermFinder, to test GO enrichment. I found the background gene number was set to a very large number and all the p values were extremely small. When writing this blog post, I submit a job to this web server and found the gene number of human is setting to 45758. After I found this, I never use this web server again. The result is extremely \u0026ldquo;significant\u0026rdquo;! The web sever has an option, \u0026ldquo;Enter the number of products estimated for your organism\u0026rdquo;. This is ridiculous. It\u0026rsquo;s hard to estimate for ordinary users and it is impossible to estimate it correctly since we don\u0026rsquo;t know the annotation file in used. The default number, 45758 for human, is too large, result in many false positive.\nInput a gene list as background is useful, for instance we may use all genes that are detected in microarray experiment or all proteins identified by MS as background. This is an effective way to eliminate bias of using the whole genome. Use the whole genome is not mean to use the total number of gene in the genome as background. By default, KEGG enrichment analyses of clusterProfiler and GeneAnswers are using the whole genome, that is about 5900 genes for human, which are all genes have pathway annotation in the whole genome. Others without annotation are abandoned. This itself is a bias actually, but it\u0026rsquo;s the realistic. If we include all genes no matter they have annotation or not, and setting 20000 or even more as background of human genes, definitely we will get significant result! But it is man-made significant.\nAs I replied to @kaji331, if p values obtained by different software are different, trust the one produce larger p values. Many user will choose a software give a more \u0026ldquo;significant\u0026rdquo; result, but trust me, you are making type I error. Conservatively, always choose the one give you larger p-values if you know nothing about the calculation. Software that never \u0026ldquo;fail\u0026rdquo; is untrustable.\nCitation Yu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\n","date":1407361595,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1407361595,"objectID":"a24ddc1aef66f426c2d07b937ba1312f","permalink":"https://guangchuangyu.github.io/2014/08/why-clusterprofiler-fails/","publishdate":"2014-08-07T05:46:35+08:00","relpermalink":"/2014/08/why-clusterprofiler-fails/","section":"post","summary":"@kaji331 compared cluserProfiler with GeneAnswers and found that clusterProfiler gives larger p values.\nIt eventually came out that he passed the input gene as numeric vector, which was supposed to be character and he used an old version of clusterProfiler which didn\u0026rsquo;t use as.character to coerce the input\nBut his comment forces me to test it.\n","tags":["clusterProfiler"],"title":"why clusterProfiler fails","type":"post"},{"authors":null,"categories":["Visualization","R"],"content":"In PLOB\u0026rsquo;s QQ group, someone asked how to change the color of enrichment map in Cytoscape. I am very curious how enrichment map can helps to interpret enrichment results. It took me 2 hours to implement it using R and I am surprised that the enrichment map is better than anticipated.\nNow in the development version of clusterProfiler, DOSE, and ReactomePA, you can use enrichmap function to generate the enrichment map of enrichment results obtained by hypergeometric test or gene set enrichment analysis.\nCitation Yu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\n","date":1407041295,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1407041295,"objectID":"3ad2524e8f64272a499bd84d35552957","permalink":"https://guangchuangyu.github.io/2014/08/enrichment-map/","publishdate":"2014-08-03T12:48:15+08:00","relpermalink":"/2014/08/enrichment-map/","section":"post","summary":"In PLOB\u0026rsquo;s QQ group, someone asked how to change the color of enrichment map in Cytoscape. I am very curious how enrichment map can helps to interpret enrichment results. It took me 2 hours to implement it using R and I am surprised that the enrichment map is better than anticipated.\n","tags":["clusterProfiler"],"title":"enrichment map","type":"post"},{"authors":null,"categories":["Genomics","Visualization","R"],"content":"After two weeks developed, I have added/updated some plot functions in ChIPseeker (version \u0026gt;=1.0.1).\nChIP peaks over Chromosomes \u0026gt; files=getSampleFiles() \u0026gt; peak=readPeakFile(files[[4]]) \u0026gt; peak GRanges object with 1331 ranges and 2 metadata columns: seqnames ranges strand | V4 V5 | [1] chr1 [ 815092, 817883] * | MACS_peak_1 295.76 [2] chr1 [1243287, 1244338] * | MACS_peak_2 63.19 [3] chr1 [2979976, 2981228] * | MACS_peak_3 100.16 [4] chr1 [3566181, 3567876] * | MACS_peak_4 558.89 [5] chr1 [3816545, 3818111] * | MACS_peak_5 57.57 ... ... ... ... ... ... ... [1327] chrX [135244782, 135245821] * | MACS_peak_1327 55.54 [1328] chrX [139171963, 139173506] * | MACS_peak_1328 270.19 [1329] chrX [139583953, 139586126] * | MACS_peak_1329 918.73 [1330] chrX [139592001, 139593238] * | MACS_peak_1330 210.88 [1331] chrY [ 13845133, 13845777] * | MACS_peak_1331 58.39 --- seqlengths: chr1 chr10 chr11 chr12 chr13 chr14 ... chr6 chr7 chr8 chr9 chrX chrY NA NA NA NA NA NA ... NA NA NA NA NA NA \u0026gt; covplot(peak, weightCol=\u0026quot;V5\u0026quot;)  Heatmap of ChIP binding to TSS regions require(TxDb.Hsapiens.UCSC.hg19.knownGene) txdb \u0026lt;- TxDb.Hsapiens.UCSC.hg19.knownGene peakHeatmap(files, weightCol=\u0026quot;V5\u0026quot;, TxDb=txdb, upstream=3000, downstream=3000, color=rainbow(length(files)))  Average Profile of ChIP peaks binding to TSS region plotAvgProf(files, TranscriptDb=txdb, weightCol=\u0026quot;V5\u0026quot;, upstream=3000, downstream=3000)  Genomic Annotation peakAnnoList=lapply(files, annotatePeak) plotAnnoPie(peakAnnoList[[1]])  plotAnnoBar(peakAnnoList)  Distance to TSS plotDistToTSS(peakAnnoList)  Overlap of peak sets genes= lapply(peakAnnoList, function(i) as.data.frame(i)$geneId) vennplot(genes)  In the future version, ChIPseeker will support statistical comparison among ChIP peak sets, and incorporate open access database GEO for users to compare their own dataset to those deposited in database. Significant overlap among peak sets can be used to infer cooperative regulation. This feature will soon be available.\nCitation Yu G, Wang LG and He QY*. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. Bioinformatics 2015, 31(14):2382-2383.\n\n","date":1398810821,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1398810821,"objectID":"5eee1eceaee2bf194bd7b1a2b981e803","permalink":"https://guangchuangyu.github.io/2014/04/visualization-methods-in-chipseeker/","publishdate":"2014-04-30T06:33:41+08:00","relpermalink":"/2014/04/visualization-methods-in-chipseeker/","section":"post","summary":"After two weeks developed, I have added/updated some plot functions in ChIPseeker (version \u0026gt;=1.0.1).\nChIP peaks over Chromosomes \u0026gt; files=getSampleFiles() \u0026gt; peak=readPeakFile(files[[4]]) \u0026gt; peak GRanges object with 1331 ranges and 2 metadata columns: seqnames ranges strand | V4 V5 | [1] chr1 [ 815092, 817883] * | MACS_peak_1 295.76 [2] chr1 [1243287, 1244338] * | MACS_peak_2 63.19 [3] chr1 [2979976, 2981228] * | MACS_peak_3 100.16 [4] chr1 [3566181, 3567876] * | MACS_peak_4 558.89 [5] chr1 [3816545, 3818111] * | MACS_peak_5 57.57 ... ... ... ... ... ... ... [1327] chrX [135244782, 135245821] * | MACS_peak_1327 55.54 [1328] chrX [139171963, 139173506] * | MACS_peak_1328 270.19 [1329] chrX [139583953, 139586126] * | MACS_peak_1329 918.73 [1330] chrX [139592001, 139593238] * | MACS_peak_1330 210.88 [1331] chrY [ 13845133, 13845777] * | MACS_peak_1331 58.39 --- seqlengths: chr1 chr10 chr11 chr12 chr13 chr14 ... chr6 chr7 chr8 chr9 chrX chrY NA NA NA NA NA NA ... NA NA NA NA NA NA \u0026gt; covplot(peak, weightCol=\u0026quot;V5\u0026quot;) ","tags":["ChIPseeker","ChIPseq"],"title":"visualization methods in ChIPseeker","type":"post"},{"authors":null,"categories":["R"],"content":"ChIPpeakAnno WAS the only R package for ChIP peak annotation. I used it for annotating peak in my recent study.\nI found it does not consider the strand information of genes. I reported the bug to the authors, but they are reluctant to change.\nSo I decided to develop my own package, ChIPseeker, and it\u0026rsquo;s now available in Bioconductor.\n\u0026gt; require(TxDb.Hsapiens.UCSC.hg19.knownGene) \u0026gt; txdb \u0026lt;- TxDb.Hsapiens.UCSC.hg19.knownGene \u0026gt; require(ChIPseeker) \u0026gt; peakfile = getSampleFiles()[[4]] \u0026gt; peakfile [1] \u0026quot;/usr/local/Cellar/r/3.1.0/R.framework/Versions/3.1/Resources/library/ChIPseeker/extdata//GEO_sample_data/GSM1295076_CBX6_BF_ChipSeq_mergedReps_peaks.bed.gz\u0026quot; \u0026gt; peakAnno \u0026lt;- annotatePeak(peakfile, tssRegion=c(-3000, 1000), TxDb=txdb, annoDb=\u0026quot;org.Hs.eg.db\u0026quot;) \u0026gt;\u0026gt; loading peak file... 2014-04-13 12:03:45 PM \u0026gt;\u0026gt; preparing features information... 2014-04-13 12:03:45 PM \u0026gt;\u0026gt; identifying nearest features... 2014-04-13 12:03:45 PM \u0026gt;\u0026gt; calculating distance from peak to TSS... 2014-04-13 12:03:46 PM \u0026gt;\u0026gt; assigning genomic annotation... 2014-04-13 12:03:46 PM \u0026gt;\u0026gt; adding gene annotation... 2014-04-13 12:03:50 PM \u0026gt;\u0026gt; assigning chromosome lengths 2014-04-13 12:03:50 PM \u0026gt;\u0026gt; done... 2014-04-13 12:03:50 PM \u0026gt; head(as.GRanges(peakAnno)) GRanges object with 6 ranges and 14 metadata columns: seqnames ranges strand | V4 V5 | [1] chr1 [ 815092, 817883] * | MACS_peak_1 295.76 [2] chr1 [1243287, 1244338] * | MACS_peak_2 63.19 [3] chr1 [2979976, 2981228] * | MACS_peak_3 100.16 [4] chr1 [3566181, 3567876] * | MACS_peak_4 558.89 [5] chr1 [3816545, 3818111] * | MACS_peak_5 57.57 [6] chr1 [6304864, 6305704] * | MACS_peak_6 54.57 annotation geneChr geneStart geneEnd geneLength geneStrand [1] Distal Intergenic chr1 803451 812182 8732 - [2] Promoter (\u0026lt;=1kb) chr1 1243994 1247057 3064 + [3] Promoter (\u0026lt;=1kb) chr1 2976181 2980350 4170 - [4] Promoter (\u0026lt;=1kb) chr1 3547331 3566671 19341 - [5] Promoter (\u0026lt;=1kb) chr1 3816968 3832011 15044 + [6] 3 UTR chr1 6304252 6305638 1387 + geneId transcriptId distanceToTSS ENSEMBL SYMBOL [1] 284593 uc001abt.4 -5701 ENSG00000230368 FAM41C [2] 126789 uc001aed.3 0 ENSG00000169972 PUSL1 [3] 440556 uc001aka.3 0 ENSG00000177133 LINC00982 [4] 49856 uc001ako.3 0 ENSG00000116213 WRAP73 [5] 100133612 uc001alg.3 0 ENSG00000236423 LINC01134 [6] 390992 uc009vly.2 1452 ENSG00000173673 HES3 GENENAME [1] family with sequence similarity 41, member C [2] pseudouridylate synthase-like 1 [3] long intergenic non-protein coding RNA 982 [4] WD repeat containing, antisense to TP73 [5] long intergenic non-protein coding RNA 1134 [6] hes family bHLH transcription factor 3 --- seqlengths: chr1 chr10 chr11 chr12 ... chr8 chr9 chrX 249250621 135534747 135006516 133851895 ... 146364022 141213431 155270560  annotatePeak function can accept peak file or GRanges object that contained peak information. The sample peakfile shown above is a sample output from MACS. All the information contained in peakfile will be kept in the output of annotatePeak.\nThe annotation column annotates genomic features of the peak, that is whether peak is located in Promoter, Exon, UTR, Intron or Intergenic. If the peak is annotated by Exon or Intron, more detail information will be provided. For instance, Exon (38885 exon 3 of 11) indicates that the peak is located at the 3th exon of gene 38885 (entrezgene ID) which contain 11 exons in total.\nAll the names of column that contains information of nearest gene annotated will start with gene in camelCaps style.\nIf parameter annoDb=\u0026ldquo;org.Hs.eg.db\u0026rdquo; is provided, extra columns of ENSEMBL, SYMBOL and GENENAME will be provided in the final output.\nFor more detail, please refer to the package vignette. Comments or suggestions are welcome.\n\u0026mdash;\u0026mdash;- below was added at April 30, 2014 \u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;\nAfter two weeks of ChIPseeker release in Bioconductor, I am very glad to receive an email from Cambridge Systems Biology Centre that they are using ChIPseeker in annotating Drosophila ChIP data.\nAlthough I only illustrate examples in human, ChIPseeker do supports all species only if genomic information was available. :mrgreen: :mrgreen:\n\u0026gt; require(TxDb.Dmelanogaster.UCSC.dm3.ensGene) \u0026gt; require(ChIPseeker) \u0026gt; txdb \u0026lt;- TxDb.Dmelanogaster.UCSC.dm3.ensGene \u0026gt; \u0026gt; chr \u0026lt;- c(\u0026quot;chrX\u0026quot;, \u0026quot;chrX\u0026quot;, \u0026quot;chrX\u0026quot;) \u0026gt; start \u0026lt;- c(71349, 77124, 86364) \u0026gt; end \u0026lt;- c(72835, 77836, 88378) \u0026gt; peak \u0026lt;- GRanges(seqnames = chr, ranges = IRanges(start, end)) \u0026gt; peakAnno \u0026lt;- annotatePeak(peak, + tssRegion=c(-3000,100), + TxDb = txdb, + annoDb=\u0026quot;org.Dm.eg.db\u0026quot;) \u0026gt;\u0026gt; preparing features information... 2014-04-30 21:28:27 \u0026gt;\u0026gt; identifying nearest features... 2014-04-30 21:28:30 \u0026gt;\u0026gt; calculating distance from peak to TSS... 2014-04-30 21:28:31 \u0026gt;\u0026gt; assigning genomic annotation... 2014-04-30 21:28:31 \u0026gt;\u0026gt; adding gene annotation... 2014-04-30 21:28:42 Loading required package: org.Dm.eg.db Loading required package: DBI \u0026gt;\u0026gt; assigning chromosome lengths 2014-04-30 21:28:43 \u0026gt;\u0026gt; done... 2014-04-30 21:28:43 \u0026gt; as.GRanges(peakAnno) GRanges object with 3 ranges and 12 metadata columns: seqnames ranges strand | | [1] chrX [71349, 72835] * | [2] chrX [77124, 77836] * | [3] chrX [86364, 88378] * | annotation geneChr geneStart [1] Promoter (\u0026lt;=1kb) chrX 72458 [2] Intron (FBtr0100135/FBgn0029128, intron 1 of 7) chrX 72458 [3] Intron (FBtr0100135/FBgn0029128, intron 2 of 7) chrX 72458 geneEnd geneLength geneStrand geneId transcriptId distanceToTSS [1] 96056 23599 + FBgn0029128 FBtr0100135 0 [2] 96056 23599 + FBgn0029128 FBtr0100135 5378 [3] 96056 23599 + FBgn0029128 FBtr0100135 15920 ENTREZID SYMBOL GENENAME [1] 3354987 tyn trynity [2] 3354987 tyn trynity [3] 3354987 tyn trynity --- seqlengths: chrX 22422827 \u0026gt;  Citation Yu G, Wang LG and He QY*. ChIPseeker: an R/Bioconductor package for ChIP peak annotation, comparison and visualization. Bioinformatics 2015, 31(14):2382-2383.\n\n","date":1397365335,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1397365335,"objectID":"8e8e4f8bebe7f3d9def295f1cbecf22c","permalink":"https://guangchuangyu.github.io/2014/04/chipseeker-for-chip-peak-annotation/","publishdate":"2014-04-13T13:02:15+08:00","relpermalink":"/2014/04/chipseeker-for-chip-peak-annotation/","section":"post","summary":"ChIPpeakAnno WAS the only R package for ChIP peak annotation. I used it for annotating peak in my recent study.\nI found it does not consider the strand information of genes. I reported the bug to the authors, but they are reluctant to change.\nSo I decided to develop my own package, ChIPseeker, and it\u0026rsquo;s now available in Bioconductor.\n","tags":["ChIPseeker","ChIPseq"],"title":"ChIPseeker for ChIP peak annotation","type":"post"},{"authors":null,"categories":null,"content":"","date":1396310400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1396310400,"objectID":"74ee3f78ed152a2112401b35d80b0d48","permalink":"https://guangchuangyu.github.io/project/chipseeker/","publishdate":"2014-04-01T00:00:00Z","relpermalink":"/project/chipseeker/","section":"project","summary":"This package implements functions to retrieve the nearest genes around the peak, annotate genomic region of the peak, statstical methods for estimate the significance of overlap among ChIP peak data sets, and incorporate GEO database for user to compare their own dataset with those deposited in database. The comparison can be used to infer cooperative regulation and thus can be used to generate hypotheses. Several visualization functions are implemented to summarize the coverage of the peak experiment, average profile and heatmap of peaks binding to TSS regions, genomic annotation, distance to TSS, and overlap of peaks or genes.","tags":["bioc"],"title":"ChIPseeker","type":"project"},{"authors":null,"categories":["Genomics","R"],"content":"I used R package ChIPpeakAnno for annotating peaks, and found that it handle the DNA strand in the wrong way. Maybe the developers were from the computer science but not biology background.\n\u0026gt; require(ChIPpeakAnno) \u0026gt; packageVersion(\u0026quot;ChIPpeakAnno\u0026quot;) [1] '2.10.0' \u0026gt; peak \u0026lt;- RangedData(space=\u0026quot;chr1\u0026quot;, IRanges(24736757, 24737528)) \u0026gt; data(TSS.human.GRCh37) \u0026gt; ap \u0026lt;- annotatePeakInBatch(peak, Annotation=TSS.human.GRCh37) \u0026gt; ap RangedData with 1 row and 9 value columns across 1 space space ranges | peak strand | 1 ENSG00000001461 1 [24736757, 24737528] | 1 + feature start_position end_position insideFeature 1 ENSG00000001461 ENSG00000001461 24742284 24799466 upstream distancetoFeature shortestDistance fromOverlappingOrNearest 1 ENSG00000001461 -5527 4756 NearestStart  In this example, I defined a peak ranging from chr1:24736757 to chr1:24737528 and annotated the peak using ChIPpeakAnno package.\nIt returns that the nearest gene is ENSG00000001461, whose gene symbol is NIPAL3.\n\u0026gt; require(org.Hs.eg.db) \u0026gt; gene.ChIPpeakAnno \u0026lt;- select(org.Hs.eg.db, key=ap$feature, keytype=\u0026quot;ENSEMBL\u0026quot;, columns=c(\u0026quot;ENSEMBL\u0026quot;, \u0026quot;ENTREZID\u0026quot;, \u0026quot;SYMBOL\u0026quot;)) \u0026gt; gene.ChIPpeakAnno ENSEMBL ENTREZID SYMBOL 1 ENSG00000001461 57185 NIPAL3  When looking at the peak in Genome Browser, I found the nearest gene is STPG1. The gene symbol, STPG1, was converted to ENTREZID for future processing.\n\u0026gt; gene.nearest \u0026lt;- select(org.Hs.eg.db, key=\u0026quot;STPG1\u0026quot;, keytype=\u0026quot;SYMBOL\u0026quot;, columns=c(\u0026quot;ENSEMBL\u0026quot;, \u0026quot;ENTREZID\u0026quot;, \u0026quot;SYMBOL\u0026quot;)) \u0026gt; gene.nearest SYMBOL ENSEMBL ENTREZID 1 STPG1 ENSG00000001460 90529  We can query the coordination of these two genes, and compare their distances to the peak.\n\u0026gt; require(TxDb.Hsapiens.UCSC.hg19.knownGene) \u0026gt; knownGene \u0026lt;- transcriptsBy(TxDb.Hsapiens.UCSC.hg19.knownGene, by=\u0026quot;gene\u0026quot;) \u0026gt; \u0026gt; gene.ChIPpeakAnno.info \u0026lt;- knownGene[[gene.ChIPpeakAnno$ENTREZID]] \u0026gt; gene.ChIPpeakAnno.info GRanges with 4 ranges and 2 metadata columns: seqnames ranges strand | tx_id tx_name | [1] chr1 [24742245, 24781314] + | 618 uc010oek.2 [2] chr1 [24742245, 24799473] + | 619 uc001bjh.3 [3] chr1 [24742245, 24799473] + | 620 uc009vrc.3 [4] chr1 [24782628, 24792864] + | 621 uc001bji.3 --- seqlengths: chr1 chr2 ... chrUn_gl000249 249250621 243199373 ... 38502  After getting the information of the gene annotated by ChIPpeakAnno, I also found that the ranges of the gene is slightly different from the one returned by annotatePeakInBatch function. This may due to the variation of different versions and it\u0026rsquo;s not a big deal.\nAs the gene, NIPAL3, is encoded in + strand, the nearest distance is:\n\u0026gt; min(abs(start(peak) - start(gene.ChIPpeakAnno.info))) [1] 5488  While the gene, STPG1, is encoded in - strand, the end of the gene coordination is actually the start position of the gene and the start of the gene coordination is the end position. So the distance should be calculated by the end coordination.\n\u0026gt; gene.nearest.info \u0026lt;- knownGene[[gene.nearest$ENTREZID]] \u0026gt; gene.nearest.info GRanges with 6 ranges and 2 metadata columns: seqnames ranges strand | tx_id tx_name | [1] chr1 [24683489, 24700300] - | 4706 uc010oej.2 [2] chr1 [24683489, 24740262] - | 4707 uc001bja.3 [3] chr1 [24683489, 24740262] - | 4708 uc001bjb.3 [4] chr1 [24683489, 24740262] - | 4709 uc001bjc.3 [5] chr1 [24683489, 24741587] - | 4710 uc001bjd.3 [6] chr1 [24695211, 24718169] - | 4711 uc001bjf.3 --- seqlengths: chr1 chr2 ... chrUn_gl000249 249250621 243199373 ... 38502 \u0026gt; min(abs(end(peak) - end(knownGene[[gene.nearest$ENTREZID]]))) [1] 2734  STPG1 is more close to the peak than NIPAL3. Those genes encoded in - strand can\u0026rsquo;t be well-handled by ChIPpeakAnno package.\nI look careful to the source code of annotatePeakInBatch function.\n TSS.ordered \u0026lt;- AnnotationData rm(AnnotationData) if (!length(rownames(TSS.ordered))) { rownames(TSS.ordered) = formatC(1:dim(TSS.ordered)[1], width = nchar(dim(TSS.ordered)[1]), flag = \u0026quot;0\u0026quot;) } if (length(TSS.ordered$strand) == length(start(TSS.ordered))) { r2 = cbind(rownames(TSS.ordered), start(TSS.ordered), end(TSS.ordered), as.character(TSS.ordered$strand)) } else { TSS.ordered$strand = rep(\u0026quot;+\u0026quot;, length(start(TSS.ordered))) r2 = cbind(rownames(TSS.ordered), start(TSS.ordered), end(TSS.ordered), rep(\u0026quot;+\u0026quot;, length(start(TSS.ordered)))) } colnames(r2) = c(\u0026quot;feature_id\u0026quot;, \u0026quot;start_position\u0026quot;, \u0026quot;end_position\u0026quot;, \u0026quot;strand\u0026quot;)  The AnnotationData object is provided by the package, or query from biomaRt, the length(TSS.ordered\\$strand) == length(start(TSS.ordered) should be TRUE, and this code should works fine. But when the expression return FALSE, the function should complain this, with warning message showing in the screen or even stop running. But the author just simply assign all the genes encoded in + strand, this is nonsense.\nThen for calculating the feauture location:\n if (FeatureLocForDistance == \u0026quot;middle\u0026quot; || FeatureLocForDistance == \u0026quot;m\u0026quot;) { FeatureLoc = unlist(lapply(1:dim(r2)[1], function(i) { round(mean(c(as.numeric(r2[i, 2]), as.numeric(r2[i, 3])))) })) FeatureLocForDistance = \u0026quot;middle\u0026quot; } else if (FeatureLocForDistance == \u0026quot;start\u0026quot; || FeatureLocForDistance == \u0026quot;s\u0026quot;) { FeatureLoc = r2[, 2] FeatureLocForDistance = \u0026quot;start\u0026quot; } else if (FeatureLocForDistance == \u0026quot;end\u0026quot; || FeatureLocForDistance == \u0026quot;e\u0026quot;) { FeatureLoc = r2[, 3] FeatureLocForDistance = \u0026quot;end\u0026quot; } else if (FeatureLocForDistance == \u0026quot;geneEnd\u0026quot; || FeatureLocForDistance == \u0026quot;g\u0026quot;) { FeatureLoc = unlist(lapply(1:dim(r2)[1], function(i) { if (as.character(r2[i, 4]) == \u0026quot;+\u0026quot; || as.character(r2[i, 4]) == \u0026quot;1\u0026quot; || as.character(r2[i, 4]) == \u0026quot;*\u0026quot;) { r2[i, 3] } else { r2[i, 2] } })) FeatureLocForDistance = \u0026quot;geneEnd\u0026quot; } else { FeatureLoc = unlist(lapply(1:dim(r2)[1], function(i) { if (as.character(r2[i, 4]) == \u0026quot;+\u0026quot; || as.character(r2[i, 4]) == \u0026quot;1\u0026quot; || as.character(r2[i, 4]) == \u0026quot;*\u0026quot;) { r2[i, 2] } else { r2[i, 3] } })) FeatureLocForDistance = \u0026quot;TSS\u0026quot; }  Only \u0026ldquo;geneEnd\u0026rdquo; and \u0026ldquo;TSS\u0026rdquo; types consider the strand information. For \u0026ldquo;middle\u0026rdquo;, omits the strand information should be fine, but for \u0026ldquo;start\u0026rdquo; and \u0026ldquo;end\u0026rdquo;, the \u0026ldquo;start\u0026rdquo; should be \u0026ldquo;end\u0026rdquo; and \u0026ldquo;end\u0026rdquo; should be \u0026ldquo;start\u0026rdquo; when the gene is located at - strand. Again, the annotatePeakInBatch function omits the strand information of genes/features.\n TSS.ordered$FeatureLoc = FeatureLoc myPeakList$PeakLoc = PeakLoc plusAnno = TSS.ordered[as.character(TSS.ordered$strand) %in% c(\u0026quot;+\u0026quot;, \u0026quot;*\u0026quot;, \u0026quot;1\u0026quot;), ] minusAnno = TSS.ordered[as.character(TSS.ordered$strand) %in% c(\u0026quot;-1\u0026quot;, \u0026quot;-\u0026quot;), ] r1 = do.call(rbind, lapply(seq_len(numberOfChromosome), function(i) { chr = allChr[i] if (chr %in% allChr.Anno) { featureStart = as.numeric(TSS.ordered[chr]$FeatureLoc) peakLoc = as.numeric(myPeakList[chr]$PeakLoc) peakStart = as.numeric(start(myPeakList[chr])) peakEnd = as.numeric(end(myPeakList[chr])) name = rownames(myPeakList[chr]) peakRanges = IRanges(start = peakStart, end = peakEnd, names = name) featureID = rownames(TSS.ordered[chr]) featureRanges = IRanges(start = featureStart, end = featureStart, names = featureID) nearestFeature = featureRanges[nearest(peakRanges, featureRanges)] data.frame(name = name, feature_id = names(nearestFeature)) } }))  For identifying the nearest feature, the author use:\nnearestFeature = featureRanges[nearest(peakRanges, featureRanges)]  The \u0026ldquo;start\u0026rdquo; of the features should be used when it were encoded in + strand and \u0026ldquo;end\u0026rdquo; when features were encoded in - strand. But the author use nearest function which use both \u0026ldquo;start\u0026rdquo; and \u0026ldquo;end\u0026rdquo; of the interval to calculate the distance by default.\nConsidering the \u0026ldquo;start\u0026rdquo; and \u0026ldquo;end\u0026rdquo; records may reverse when the genes/features were encoded in - strand and the way ChIPpeakAnno calcultes the distance is too simple by using nearest function, I can\u0026rsquo;t trust their results. It\u0026rsquo;s not hard to implement a function to annotate peaks. Preparing the gene annotation and calculating the distances among genes and peaks for finding the nearest gene of the peak. That\u0026rsquo;s it.\n","date":1389690547,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1389690547,"objectID":"ff0bb2d661abb628b47831c916902441","permalink":"https://guangchuangyu.github.io/2014/01/bug-of-r-package-chippeakanno/","publishdate":"2014-01-14T17:09:07+08:00","relpermalink":"/2014/01/bug-of-r-package-chippeakanno/","section":"post","summary":"I used R package ChIPpeakAnno for annotating peaks, and found that it handle the DNA strand in the wrong way. Maybe the developers were from the computer science but not biology background.\n\u0026gt; require(ChIPpeakAnno) \u0026gt; packageVersion(\u0026quot;ChIPpeakAnno\u0026quot;) [1] '2.10.0' \u0026gt; peak \u0026lt;- RangedData(space=\u0026quot;chr1\u0026quot;, IRanges(24736757, 24737528)) \u0026gt; data(TSS.human.GRCh37) \u0026gt; ap \u0026lt;- annotatePeakInBatch(peak, Annotation=TSS.human.GRCh37) \u0026gt; ap RangedData with 1 row and 9 value columns across 1 space space ranges | peak strand | 1 ENSG00000001461 1 [24736757, 24737528] | 1 + feature start_position end_position insideFeature 1 ENSG00000001461 ENSG00000001461 24742284 24799466 upstream distancetoFeature shortestDistance fromOverlappingOrNearest 1 ENSG00000001461 -5527 4756 NearestStart ","tags":["ChIPseq","ChIPseeker"],"title":"Bug of R package ChIPpeakAnno","type":"post"},{"authors":null,"categories":["Biology","Software"],"content":"I was asked to set up a local blast for the lab. Blast can be installed directly using apt in debian and it turns out to be easy.\nroot@jz:/ssd/genomes# apt-get install ncbi-blast+ Reading package lists... Done Building dependency tree Reading state information... Done The following NEW packages will be installed: ncbi-blast+ 0 upgraded, 1 newly installed, 0 to remove and 26 not upgraded. Need to get 11.2 MB of archives. After this operation, 32.8 MB of additional disk space will be used. Get:1 http://ftp.hk.debian.org/debian/ wheezy/main ncbi-blast+ amd64 2.2.26-3 [11.2 MB] Fetched 11.2 MB in 1min 16s (146 kB/s) Selecting previously unselected package ncbi-blast+. (Reading database ... 252681 files and directories currently installed.) Unpacking ncbi-blast+ (from .../ncbi-blast+_2.2.26-3_amd64.deb) ... Processing triggers for man-db ... Setting up ncbi-blast+ (2.2.26-3) ...  Before the program can be used for sequence alignment, we should prepare the db files:\nroot@jz:/ssd/genomes/blast/db# makeblastdb -in ../../hg19.fa -out hg19 -dbtype nucl Building a new DB, current time: 11/21/2013 16:03:05 New DB name: hg19 New DB title: ../../hg19.fa Sequence type: Nucleotide Keep Linkouts: T Keep MBits: T Maximum file size: 1073741824B Adding sequences from FASTA; added 25 sequences in 27.7084 seconds.  That\u0026rsquo;s it. Now blast is supported in the lab server. I tested blastn with the AHANAK sequence.\nygc@jz:~$ date; blastn -num_threads 8 -query sequence.fasta -db /ssd/genomes/blast/db/hg19 \u0026gt;\u0026gt; testblast.txt ; date Thu Nov 21 16:19:19 HKT 2013 Thu Nov 21 17:19:45 HKT 2013 ygc@jz:~$ wc -c sequence.fasta 149510 sequence.fasta  Blast search has three distinctive stages: word matching with database scan, ungapped alignment, gapped alignment with traceback. Only word matching stage is multi-threaded. So it tooks 1 hour to align this long gene.\nThe most significant hit of the blast result indicated that the sequence is located at chr11:62331329-62184015, which is consistent with the information presented in the AHANAK sequence link.\nygc@jz:~$ cat testblast.txt BLASTN 2.2.26+ Reference: Zheng Zhang, Scott Schwartz, Lukas Wagner, and Webb Miller (2000), \u0026quot;A greedy algorithm for aligning DNA sequences\u0026quot;, J Comput Biol 2000; 7(1-2):203-14. Database: ../../hg19.fa 25 sequences; 3,095,693,983 total letters Query= gi|224589802:c62331329-62184015 Homo sapiens chromosome 11, GRCh37.p13 Primary Assembly Length=147315 Score E Sequences producing significant alignments: (Bits) Value chr11 2.720e+05 0.0 chr14 941 0.0 ... \u0026gt; chr11 Length=135006516 Score = 2.720e+05 bits (147315), Expect = 0.0 Identities = 147315/147315 (100%), Gaps = 0/147315 (0%) Strand=Plus/Minus Query 1 CATTTGGAAAGGAACCTGGGACCTAGGGTTAAAGGACAGATCCTCTGCTTTGCTACAGTG 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| Sbjct 62331329 CATTTGGAAAGGAACCTGGGACCTAGGGTTAAAGGACAGATCCTCTGCTTTGCTACAGTG 62331270 Query 61 TAATCTTGGACAGGTCATTCTACTTGGTCTCATCTGTAAAGAGAGGGGAGGGTCAGGGTA 120 |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| Sbjct 62331269 TAATCTTGGACAGGTCATTCTACTTGGTCTCATCTGTAAAGAGAGGGGAGGGTCAGGGTA 62331210 ... Database: ../../hg19.fa Posted date: Nov 21, 2013 4:03 PM Number of letters in database: 3,095,693,983 Number of sequences in database: 25 Matrix: blastn matrix 1 -2 Gap Penalties: Existence: 0, Extension: 2.5  In addition to the species-specific sequence file, we should download the non-redundent gene and protein sequences from ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nt.gz and ftp://ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz respectively.\nnt contains all nucleotide sequences of GenBank, RefSeq Nucleotides, EMBL, DDBJ and PDB, while nr contains all non-redundant peptide sequences from GenBank CDS translations, RefSeq Proteins, PDB, SwissProt, PIR and PRF. After generating the db files, we can blast a sequence to multiple species.\nmakeblastdb -in ../../nr/nr -out nr -dbtype prot makeblastdb -in ../../nr/nt -out nt -dbtype nucl  ","date":1385001622,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1385001622,"objectID":"75e7736e23b7507aed3c4f847cde3b28","permalink":"https://guangchuangyu.github.io/2013/11/local-blast/","publishdate":"2013-11-21T10:40:22+08:00","relpermalink":"/2013/11/local-blast/","section":"post","summary":"I was asked to set up a local blast for the lab. Blast can be installed directly using apt in debian and it turns out to be easy.\nroot@jz:/ssd/genomes# apt-get install ncbi-blast+ Reading package lists... Done Building dependency tree Reading state information... Done The following NEW packages will be installed: ncbi-blast+ 0 upgraded, 1 newly installed, 0 to remove and 26 not upgraded. Need to get 11.2 MB of archives. After this operation, 32.","tags":["blast"],"title":"local blast","type":"post"},{"authors":["X Sun†*","**G Yu**†*","Q Xu","N Li","C Xiao","X Yin","K Cao","J Han","QY He*"],"categories":null,"content":"","date":1370044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1370044800,"objectID":"ab95c70b9d43c42d3125444a959c540a","permalink":"https://guangchuangyu.github.io/publication/2013_metallomics/","publishdate":"2013-06-01T00:00:00Z","relpermalink":"/publication/2013_metallomics/","section":"publication","summary":"Cobalt and nickel play important roles in various biological processes. The present work focuses on the enrichment and identification of Co- and Ni-binding motifs and proteins in Gram-positive bacteria. Immobilized metal affinity column (IMAC) was used to partially enrich putative metal-binding proteins and peptides from Streptococcus pneumoniae, and then LTQ-Orbitrap mass spectrometry (MS) was applied to identify and characterize the metal-binding motifs and proteins. In total, 208 and 223 proteins were isolated by Co- and Ni-IMAC columns respectively, in which 129 proteins were present in both preparations. Based on the gene ontology (GO) analysis, the putative metal-binding proteins were found to be mainly involved in protein metabolism, gene expression regulation and carbohydrate metabolism. These putative metal-binding proteins form a highly connected network, indicating that they may synergistically work together to achieve specific biological functions. Putative Co- and Ni-binding motifs were identified with H(X)nH, M(X)nH and H(X)nM derived from the identified 51 Co-binding peptides and 66 Ni-binding peptides. Statistics of frequency of amino acids in the metal-binding motifs showed that cobalt and nickel prefer to bind histidine and methionine, but not cysteine. These results obtained by a systematic metalloproteomic approach provide important clues for the further investigation of metal homeostasis and metal-related virulence of bacteria.","tags":null,"title":"Putative cobalt- and nickel-binding proteins and motifs in Streptococcus pneumoniae","type":"publication"},{"authors":["YY Zhu†","**G Yu**†","Y Zhang","Z Xu","YQ Huang","GR Yan*","QY He*"],"categories":null,"content":"","date":1356998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1356998400,"objectID":"12e4d3afe1b5abdd16caa65322e99a43","permalink":"https://guangchuangyu.github.io/publication/2013_proteomics/","publishdate":"2013-01-01T00:00:00Z","relpermalink":"/publication/2013_proteomics/","section":"publication","summary":"Andrographolide-lipoic acid conjugate (AL-1) is a new in-house synthesized chemical entity, which was derived by covalently linking andrographolide with lipoic acid. However, its anti-cancer effect and cytotoxic mechanism remains unknown. In this study, we found that AL-1 could significantly inhibit cell viability of human leukemia K562 cells by inducing G2/M arrest and apoptosis in a dose-dependent manner. Thirty-one AL-1-regulated protein alterations were identified by proteomics analysis. Gene ontology and ingenuity pathway analysis revealed that a cluster of proteins of oxidative redox state and apoptotic cell death-related proteins, such as PRDX2, PRDX3, PRDX6, TXNRD1, and GLRX3, were regulated by AL-1. Functional studies confirmed that AL-1 induced apoptosis of K562 cells through a ROS-dependent mechanism, and anti-oxidant, N-acetyl-l-cysteine, could completely block AL-1-induced cytotoxicity, implicating that ROS generation played a vital role in AL-1 cytotoxicity. Accumulated ROS resulted in oxidative DNA damage and subsequent G2/M arrest and mitochondrial-mediated apoptosis. The current work reveals that a novel andrographolide derivative AL-1 exerts its anticancer cytotoxicity through a ROS-dependent DNA damage and mitochondrial-mediated apoptosis mechanism","tags":null,"title":"A novel andrographolide derivative AL-1 exerts its cytotoxicity on K562 cells through a ROS-dependent mechanism","type":"publication"},{"authors":["**G Yu**","LG Wang","XH Meng","QY He*"],"categories":null,"content":"","date":1342310400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1342310400,"objectID":"04705acea5edfbf0e4d7ef50eb814264","permalink":"https://guangchuangyu.github.io/publication/lxtoo/","publishdate":"2012-07-15T00:00:00Z","relpermalink":"/publication/lxtoo/","section":"publication","summary":"Recent advances in high-throughput technologies dramatically increase biological data generation. However, many research groups lack computing facilities and specialists. This is an obstacle that remains to be addressed. Here, we present a Linux distribution, LXtoo, to provide a flexible computing platform for bioinformatics analysis.","tags":null,"title":"LXtoo: an integrated live Linux distribution for the bioinformatics community","type":"publication"},{"authors":null,"categories":["Publication","R","clusterProfiler"],"content":"Increasing quantitative data generated from transcriptomics and proteomics require integrative strategies for analysis. Here, we present an R package, clusterProfiler that automates the process of biological-term classification and the enrichment analysis of gene clusters. The analysis module and visualization module were combined into a reusable workflow. Currently, clusterProfiler supports three species, including humans, mice, and yeast. Methods provided in this package can be easily extended to other species and ontologies. The clusterProfiler package is released under Artistic-2.0 License within Bioconductor project. The source code and vignette are freely available at http://bioconductor.org/packages/release/bioc/html/clusterProfiler.html\nYu, Guangchuang, Li-Gen Wang, Yanyan Han, and Qing-Yu He. clusterProfiler: An R Package for Comparing Biological Themes Among Gene Clusters. OMICS: A Journal of Integrative Biology 16, no. 5 (May 2012): 284–287.\n","date":1336331086,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1336331086,"objectID":"b5d8c42e0b7e791e4591c01ebab90566","permalink":"https://guangchuangyu.github.io/2012/05/clusterprofiler-an-r-package-for-comparing-biological-themes-among-gene-clusters/","publishdate":"2012-05-07T03:04:46+08:00","relpermalink":"/2012/05/clusterprofiler-an-r-package-for-comparing-biological-themes-among-gene-clusters/","section":"post","summary":"Increasing quantitative data generated from transcriptomics and proteomics require integrative strategies for analysis. Here, we present an R package, clusterProfiler that automates the process of biological-term classification and the enrichment analysis of gene clusters. The analysis module and visualization module were combined into a reusable workflow. Currently, clusterProfiler supports three species, including humans, mice, and yeast. Methods provided in this package can be easily extended to other species and ontologies. The clusterProfiler package is released under Artistic-2.0 License within Bioconductor project. The source code and vignette are freely available at http://bioconductor.org/packages/release/bioc/html/clusterProfiler.html\n","tags":["clusterProfiler"],"title":"clusterProfiler: an R Package for Comparing Biological Themes Among Gene Clusters","type":"post"},{"authors":["**G Yu**","LG Wang","Y Han","QY He*"],"categories":null,"content":"","date":1335830400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1335830400,"objectID":"f47412adfe27371f26de9fe60889b33e","permalink":"https://guangchuangyu.github.io/publication/clusterprofiler/","publishdate":"2012-05-01T00:00:00Z","relpermalink":"/publication/clusterprofiler/","section":"publication","summary":"Increasing quantitative data generated from transcriptomics and proteomics require integrative strategies for analysis. Here, we present an R package, clusterProfiler that automates the process of biological-term classification and the enrichment analysis of gene clusters. The analysis module and visualization module were combined into a reusable workflow. Currently, clusterProfiler supports three species, including humans, mice, and yeast. Methods provided in this package can be easily extended to other species and ontologies. The clusterProfiler package is released under Artistic-2.0 License within Bioconductor project. The source code and vignette are freely available at http://bioconductor.org/packages/release/bioc/html/clusterProfiler.html","tags":null,"title":"clusterProfiler: an R Package for Comparing Biological Themes Among Gene Clusters","type":"publication"},{"authors":null,"categories":null,"content":"","date":1330560000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1330560000,"objectID":"fccc4837ddf3886f2360589fd126e371","permalink":"https://guangchuangyu.github.io/project/dose/","publishdate":"2012-03-01T00:00:00Z","relpermalink":"/project/dose/","section":"project","summary":"This package implements five methods proposed by Resnik, Schlicker, Jiang, Lin and Wang respectively for measuring semantic similarities among DO terms and gene products. Enrichment analyses including hypergeometric model and gene set enrichment analysis are also implemented for discovering disease associations of high-throughput biological data.","tags":["bioc"],"title":"DOSE","type":"project"},{"authors":null,"categories":null,"content":"","date":1330560000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1330560000,"objectID":"73f5f2972b9d1cd09a130f74d16a061d","permalink":"https://guangchuangyu.github.io/project/reactomepa/","publishdate":"2012-03-01T00:00:00Z","relpermalink":"/project/reactomepa/","section":"project","summary":"Pathway analysis based on REACTOME pathway database. It implements enrichment analysis, gene set enrichment analysis and several functions for visualization.","tags":["bioc"],"title":"ReactomePA","type":"project"},{"authors":null,"categories":["Visualization","R"],"content":"The Chinese character Jiong (囧) is now widely used for expressing ideas or feelings such as annoyance, shock, embarrassment, awkwardness, scorn.\nThe function plot of y=1/(x^2-1) looks very similar of this symbol.\nI use ggplot2 to draw the symbol of Jiong.\nIt looks like: The function line is very easy to draw, but the options to hone this graph need some tricky tips.\nThe source code for generating this plot can be found in github.\n","date":1329442010,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1329442010,"objectID":"a95434bc3b2e9d2e32d264d2bd20f4f6","permalink":"https://guangchuangyu.github.io/2012/02/draw-chinese-character-jiong-using-ggplot2/","publishdate":"2012-02-17T09:26:50+08:00","relpermalink":"/2012/02/draw-chinese-character-jiong-using-ggplot2/","section":"post","summary":"The Chinese character Jiong (囧) is now widely used for expressing ideas or feelings such as annoyance, shock, embarrassment, awkwardness, scorn.\nThe function plot of y=1/(x^2-1) looks very similar of this symbol.\nI use ggplot2 to draw the symbol of Jiong.\n","tags":["ggplot2"],"title":"draw chinese character Jiong using ggplot2","type":"post"},{"authors":null,"categories":["Visualization","R"],"content":"In order to provide an option to compare graphs produced by basic internal plot function and ggplot2, I have recreated the figures in the book, 25 Recipes for Getting Started with R, with ggplot2.\nThe code used to create the images is in separate paragraphs, allowing easy comparison. 1.16 Creating a Scatter Plot\nplot(cars)  \nggplot(cars,aes(speed,dist))+geom_point()  \n1.17 Creating a Bar Chart\nheights \u0026lt;- tapply(airquality$Temp, airquality$Month, mean) par(mfrow=c(1,2)) barplot(heights) barplot(heights, main=\u0026quot;Mean Temp. by Month\u0026quot;, names.arg=c(\u0026quot;May\u0026quot;, \u0026quot;Jun\u0026quot;, \u0026quot;Jul\u0026quot;, \u0026quot;Aug\u0026quot;, \u0026quot;Sep\u0026quot;), ylab=\u0026quot;Temp (deg. F)\u0026quot;)  \nrequire(gridExtra) heights=ddply(airquality,.(Month), mean) heights$Month=as.character(heights$Month) p1 \u0026lt;- ggplot(heights, aes(x=Month,weight=Temp))+ geom_bar() p2 \u0026lt;- ggplot(heights, aes(x=factor(Month, labels=c(\u0026quot;May\u0026quot;, \u0026quot;Jun\u0026quot;, \u0026quot;Jul\u0026quot;, \u0026quot;Aug\u0026quot;, \u0026quot;Sep\u0026quot;)), weight=Temp))+ geom_bar()+ ggtitle(\u0026quot;Mean Temp. By Month\u0026quot;) + xlab(\u0026quot;\u0026quot;) + ylab(\u0026quot;Temp (deg. F)\u0026quot;) grid.arrange(p1,p2, ncol=2)  \n1.18 Creating a Box Plot\ny \u0026lt;- c(-5, rnorm(100), 5) boxplot(y)  \nggplot()+geom_boxplot(aes(x=factor(1),y=y))+xlab(\u0026quot;\u0026quot;)+ylab(\u0026quot;\u0026quot;)  \n1.19 Creating a Histogram\ndata(Cars93, package=\u0026quot;MASS\u0026quot;) par(mfrow=c(1,2)) hist(Cars93$MPG.city) hist(Cars93$MPG.city, 20)  \np \u0026lt;- ggplot(Cars93, aes(MPG.city)) p1 \u0026lt;- p + geom_histogram(binwidth=diff(range(Cars93$MPG.city))/5) p2 \u0026lt;- p + geom_histogram(binwidth=diff(range(Cars93$MPG.city))/20) grid.arrange(p1,p2, ncol=2)  \n1.23 Diagnosing a Linear Regression\ndata(iris) m = lm( Sepal.Length ~ Sepal.Width, data=iris) par(mfrow=c(2,2)) plot(m)  \nr \u0026lt;- residuals(m) yh \u0026lt;- predict(m) scatterplot \u0026lt;- function(x,y, title=\u0026quot;\u0026quot;, xlab=\u0026quot;\u0026quot;, ylab=\u0026quot;\u0026quot;) { d \u0026lt;- data.frame(x=x,y=y) p \u0026lt;- ggplot(d, aes(x=x,y=y)) + geom_point() + ggtitle(title) + xlab(xlab) + ylab(ylab) return(p) } p1 \u0026lt;- scatterplot(yh,r, title=\u0026quot;Residuals vs Fitted\u0026quot;, xlab=\u0026quot;Fitted values\u0026quot;, ylab=\u0026quot;Residuals\u0026quot;) p1 \u0026lt;- p1 +geom_hline(yintercept=0)+geom_smooth() s \u0026lt;- sqrt(deviance(m)/df.residual(m)) rs \u0026lt;- r/s qqplot \u0026lt;- function(y, distribution=qnorm, title=\u0026quot;Normal Q-Q\u0026quot;, xlab=\u0026quot;Theretical Quantiles\u0026quot;, ylab=\u0026quot;Sample Quantiles\u0026quot;) { require(ggplot2) x \u0026lt;- distribution(ppoints(y)) d \u0026lt;- data.frame(x=x, y=sort(y)) p \u0026lt;- ggplot(d, aes(x=x, y=y)) + geom_point() + geom_line(aes(x=x, y=x)) + ggtitle(title=title) + xlab(xlab) + ylab(ylab) return(p) } p2 \u0026lt;- qqplot(rs, ylab=\u0026quot;Standardized residuals\u0026quot;) sqrt.rs \u0026lt;- sqrt(abs(rs)) p3 \u0026lt;- scatterplot(yh,sqrt.rs, title=\u0026quot;Scale-Location\u0026quot;, xlab=\u0026quot;Fitted values\u0026quot;, ylab=expression(sqrt(\u0026quot;Standardized residuals\u0026quot;))) p3 \u0026lt;- p3 + geom_smooth() hii \u0026lt;- lm.influence(m, do.coef = FALSE)$hat p4 \u0026lt;- scatterplot(hii,rs) p4 \u0026lt;- p4+ geom_hline(yintercept=0)+ geom_smooth() + geom_text(aes(x=min(hii)+diff(range(hii))*0.3, y=min(rs)+diff(range(rs))*0.04, label=\u0026quot;-- Cook's distance\u0026quot;, size=3))+ theme(legend.position=\u0026quot;none\u0026quot;) grid.arrange(p1,p2,p3,p4, ncol=2)  \n","date":1313490396,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1313490396,"objectID":"ca5313336a1b91843dc7ee254592f774","permalink":"https://guangchuangyu.github.io/2011/08/ggplot2-version-of-figures-in-25-recipes-for-getting-started-with-r/","publishdate":"2011-08-16T18:26:36+08:00","relpermalink":"/2011/08/ggplot2-version-of-figures-in-25-recipes-for-getting-started-with-r/","section":"post","summary":"In order to provide an option to compare graphs produced by basic internal plot function and ggplot2, I have recreated the figures in the book, 25 Recipes for Getting Started with R, with ggplot2.\nThe code used to create the images is in separate paragraphs, allowing easy comparison. 1.16 Creating a Scatter Plot\nplot(cars) ","tags":["ggplot2"],"title":"ggplot2 Version of Figures in \u003c25 Recipes for Getting Started with R\u003e","type":"post"},{"authors":null,"categories":["math","Visualization","R"],"content":"HardOCP has an image with an equation which apparently draws the Batman logo.\n$((\\frac{x}{7})^2 \\cdot \\sqrt{\\frac{||x|-3|}{(|x|-3)}}+ (\\frac{y}{3})^2 \\cdot \\sqrt{\\frac{|y+3 \\cdot \\frac{\\sqrt{33}}{7}|}{y+3 \\cdot \\frac{\\sqrt{33}}{7}}}-1) \\cdot (|\\frac{x}{2}|-((3 \\cdot \\frac{\\sqrt{33}-7)}{112}) \\cdot x^2-3+\\sqrt{1-(||x|-2|-1)^2}-y) \\cdot (9 \\cdot \\sqrt{\\frac{|(|x|-1) \\cdot (|x|-0.75)|}{((1-|x|)*(|x|-0.75))}}-8 \\cdot |x|-y) \\cdot (3 \\cdot |x|+0.75 \\cdot \\sqrt{\\frac{|(|x|-0.75) \\cdot (|x|-0.5)|}{((0.75-|x|) \\cdot (|x|-0.5))}}-y) \\cdot (2.25 \\cdot \\sqrt{\\frac{|(x-0.5) \\cdot (x+0.5)|}{((0.5-x) \\cdot (0.5+x))}}-y) \\cdot (\\frac{6 \\cdot \\sqrt{10}}{7}+(1.5-0.5 \\cdot |x|) \\cdot \\sqrt{\\frac{||x|-1|}{|x|-1}}-(\\frac{6 \\cdot \\sqrt{10}}{14}) \\cdot \\sqrt{4-(|x|-1)^2}-y) =0$\nThis function is very delightful for drawing such a graph, but write it down in latex is very tedious. As a product of factors is 0 if and only if any one of them is 0, multiplying these six factors puts the curves together. This graph is no more than the combination of six curves.\nAll these six curves are very simple, for instance, the first factor is the ellipse $(\\frac{x}{7})^2 + (\\frac{y}{3})^2 = 1 $, in the region where |x|\u0026gt;3 and $y\u0026gt;-3 \\frac{\\sqrt{33}}{7}$; the region were restricted by $\\sqrt{\\frac{||x|-3|}{(|x|-3)}} $ and $\\sqrt{\\frac{|y+3 \\cdot \\frac{\\sqrt{33}}{7}|}{y+3 \\cdot \\frac{\\sqrt{33}}{7}}}$\nHere\u0026rsquo;s what I got from the equation using ggplot2\u0026hellip;  require(ggplot2) f1 \u0026lt;- function(x) { y1 \u0026lt;- 3*sqrt(1-(x/7)^2) y2 \u0026lt;- -3*sqrt(1-(x/7)^2) y \u0026lt;- c(y1,y2) d \u0026lt;- data.frame(x=x,y=y) d \u0026lt;- d[d$y \u0026gt; -3*sqrt(33)/7,] return(d) } x1 \u0026lt;- c(seq(3, 7, 0.001), seq(-7, -3, 0.001)) d1 \u0026lt;- f1(x1) p1 \u0026lt;- ggplot(d1,aes(x,y)) + geom_point(color=\u0026quot;red\u0026quot;) x2 \u0026lt;- seq(-4,4, 0.001) y2 \u0026lt;- abs(x2/2)-(3*sqrt(33)-7)*x2^2/112-3 + sqrt(1-(abs(abs(x2)-2)-1)^2) #only work with ggplot2 \u0026lt;= 0.8.9 #p2 \u0026lt;- p1 + geom_point(aes(x=x2,y=y2), color=\u0026quot;yellow\u0026quot;) # in ggplot2 0.9.0, should be: d2 \u0026lt;- data.frame(x2=x2, y2=y2) p2 \u0026lt;- p1 + geom_point(data=d2, aes(x=x2,y=y2), color=\u0026quot;yellow\u0026quot;) x3 \u0026lt;- c(seq(0.75,1,0.001), seq(-1,-0.75,0.001)) y3 \u0026lt;- 9-8*abs(x3) #p3 \u0026lt;- p2+geom_point(aes(x=x3,y=y3), color=\u0026quot;green\u0026quot;) d3 \u0026lt;- data.frame(x3=x3, y3=y3) p3 \u0026lt;- p2+geom_point(data=d3, aes(x=x3,y=y3), color=\u0026quot;green\u0026quot;) x4 \u0026lt;- c(seq(0.5,0.75,0.001), seq(-0.75,-0.5,0.001)) y4 \u0026lt;- 3*abs(x4)+0.75 #p4 \u0026lt;- p3+geom_point(aes(x=x4,y=y4), color=\u0026quot;steelblue\u0026quot;) d4 \u0026lt;- data.frame(x4=x4,y4=y4) p4 \u0026lt;- p3+geom_point(data=d4, aes(x=x4,y=y4), color=\u0026quot;steelblue\u0026quot;) x5 \u0026lt;- seq(-0.5,0.5,0.001) y5 \u0026lt;- rep(2.25,length(x5)) #p5 \u0026lt;- p4+geom_point(aes(x=x5,y=y5)) d5 \u0026lt;- data.frame(x5=x5,y5=y5) p5 \u0026lt;- p4+geom_point(data=d5, aes(x=x5,y=y5)) x6 \u0026lt;- c(seq(-3,-1,0.001), seq(1,3,0.001)) y6 \u0026lt;- 6 * sqrt(10)/7 + (1.5 - 0.5 * abs(x6)) * sqrt(abs(abs(x6)-1)/(abs(x6)-1)) - 6 * sqrt(10) * sqrt(4-(abs(x6)-1)^2)/14 #p6 \u0026lt;- p5+geom_point(aes(x=x6,y=y6), colour=\u0026quot;blue\u0026quot;) d6 \u0026lt;- data.frame(x6=x6,y6=y6) p6 \u0026lt;- p5+geom_point(data=d6,aes(x=x6,y=y6), colour=\u0026quot;blue\u0026quot;) p \u0026lt;- p6+theme_bw() print(p) ","date":1313228682,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1313228682,"objectID":"efb9e629bc1434e7421927c25c2d0838","permalink":"https://guangchuangyu.github.io/2011/08/the-batman-equation/","publishdate":"2011-08-13T17:44:42+08:00","relpermalink":"/2011/08/the-batman-equation/","section":"post","summary":"HardOCP has an image with an equation which apparently draws the Batman logo.\n","tags":["ggplot2"],"title":"the batman equation","type":"post"},{"authors":null,"categories":["R"],"content":"Disease Ontology (DO) provides an open source ontology for the integration of biomedical data that is associated with human disease. DO analysis can lead to interesting discoveries that deserve further clinical investigation.\nDOSE was designed for semantic similarity measure and enrichment analysis.\nFour information content (IC)-based methods, proposed by Resnik, Jiang, Lin and Schlicker, and one graph structure-based method, proposed by Wang, were implemented. The calculation details can be referred to the vignette of R package GOSemSim.\nHypergeometric test was implemented for enrichment analysis.\nFor any other information, please refer to: http://www.bioconductor.org/packages/2.9/bioc/html/DOSE.html\nCitation G Yu, LG Wang, GR Yan, QY He. DOSE: an R/Bioconductor package for Disease Ontology Semantic and Enrichment analysis. Bioinformatics 2015, 31(4):608-609.\n\n","date":1307912290,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1307912290,"objectID":"2262d53bfcdc7b608e7fcd2a2e0c03fc","permalink":"https://guangchuangyu.github.io/2011/06/r-package-dose-released/","publishdate":"2011-06-13T04:58:10+08:00","relpermalink":"/2011/06/r-package-dose-released/","section":"post","summary":"Disease Ontology (DO) provides an open source ontology for the integration of biomedical data that is associated with human disease. DO analysis can lead to interesting discoveries that deserve further clinical investigation.\nDOSE was designed for semantic similarity measure and enrichment analysis.\nFour information content (IC)-based methods, proposed by Resnik, Jiang, Lin and Schlicker, and one graph structure-based method, proposed by Wang, were implemented. The calculation details can be referred to the vignette of R package GOSemSim.\n","tags":["BioC","DOSE"],"title":"R package DOSE released","type":"post"},{"authors":["**G Yu**","QY He*"],"categories":null,"content":"","date":1304208000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1304208000,"objectID":"a0b0b76f8a5009648dfc8c392aab087e","permalink":"https://guangchuangyu.github.io/publication/2011_virus_mirna/","publishdate":"2011-05-01T00:00:00Z","relpermalink":"/publication/2011_virus_mirna/","section":"publication","summary":"miRNAs are a class of small RNAs that regulate gene expression via RNA silencing machinery. Some viruses also encode miRNAs, contributing to the complex virus-host interactions. A better understanding of viral miRNA functions would be useful in designing new preventive strategies for treating diseases induced by viruses. To meet the challenge for how viruses module host gene expression by their encoded miRNAs, we measured the functional similarities among human viral miRNAs by using a method we reported previously. Higher order functions regulated by viral miRNAs were also identified by KEGG pathway analysis on their targets. Our study demonstrated the biological processes involved in virus-host interactions via viral miRNAs. Phylogenetic analysis suggested that viral miRNAs have distinct evolution rates compared with their corresponding genome.","tags":null,"title":"Functional similarity analysis of human virus-encoded miRNAs","type":"publication"},{"authors":null,"categories":["R"],"content":"In recently years, high-throughput experimental techniques such as microarray and mass spectrometry can identify many lists of genes and gene products. The most widely used strategy for high-throughput data analysis is to identify different gene clusters based on their expression profiles. Another commonly used approach is to annotate these genes to biological knowledge, such as Gene Ontology (GO) and Kyoto Encyclopedia of Genes and Genomes (KEGG), and identify the statistically significantly enriched categories. These two different strategies were implemented in many bioconductor packages, such as Mfuzz and BHC for clustering analysis and GOstats for GO enrichment analysis.\nAfter clustering analysis, researchers not only want to determine whether there is a common theme to a particular gene cluster, but also would like to compare the biological themes among gene clusters, which have different expression profiles.\nThere is no existing tools to bridge this gap, and I have designed an R package clusterProfiler, for comparing functional profiles among gene clusters.\nFor any further details, please refer to: http://bioconductor.org/packages/devel/bioc/html/clusterProfiler.html\nCitation Yu G, Wang L, Han Y and He Q*. clusterProfiler: an R package for comparing biological themes among gene clusters. OMICS: A Journal of Integrative Biology. 2012, 16(5):284-287.\n\n","date":1301170366,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1301170366,"objectID":"42c89edb7fcb168b78e1ace744c57c19","permalink":"https://guangchuangyu.github.io/2011/03/clusterprofiler-in-bioconductor-2.8/","publishdate":"2011-03-27T04:12:46+08:00","relpermalink":"/2011/03/clusterprofiler-in-bioconductor-2.8/","section":"post","summary":"In recently years, high-throughput experimental techniques such as microarray and mass spectrometry can identify many lists of genes and gene products. The most widely used strategy for high-throughput data analysis is to identify different gene clusters based on their expression profiles. Another commonly used approach is to annotate these genes to biological knowledge, such as Gene Ontology (GO) and Kyoto Encyclopedia of Genes and Genomes (KEGG), and identify the statistically significantly enriched categories. These two different strategies were implemented in many bioconductor packages, such as Mfuzz and BHC for clustering analysis and GOstats for GO enrichment analysis.\n","tags":["clusterProfiler","BioC"],"title":"clusterProfiler in Bioconductor 2.8","type":"post"},{"authors":null,"categories":null,"content":"","date":1298937600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1298937600,"objectID":"7de26a8662ca239823160924e2c87e40","permalink":"https://guangchuangyu.github.io/project/clusterprofiler/","publishdate":"2011-03-01T00:00:00Z","relpermalink":"/project/clusterprofiler/","section":"project","summary":"The clusterProfiler package implements methods to analyze and visualize functional profiles of genomic coordinates (supported by ChIPseeker), gene and gene clusters.","tags":["bioc"],"title":"clusterProfiler","type":"project"},{"authors":["**G Yu**†","CL Xiao†","X Bo","CH Lu","Y Qin","S Zhan","QY He*"],"categories":null,"content":"","date":1296518400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1296518400,"objectID":"7e25288f97ed7fba94081db7a42ccdec","permalink":"https://guangchuangyu.github.io/publication/2011_mirna/","publishdate":"2011-02-01T00:00:00Z","relpermalink":"/publication/2011_mirna/","section":"publication","summary":"MicroRNAs (miRNAs) are a group of small RNAs with regulatory roles at post-transcriptional level. Although they have been clustered based on their sequence or structure similarities, there is still no effective method to determine their functional similarities due to the lack of miRNAs functional annotation. To address this critical need, we presented here a novel method for systematic study of functional similarities among human miRNAs by using their target genes GO semantic similarities. The functional similarities were validated by comparing with miRNA expression similarities. To extract the highly significant clusters, we used multi-scale bootstrap re-sampling in clustering miRNAs functional similarities. The clustering of human miRNAs based on target genes molecular function annotation led to 44 significant clusters. The clustering results were coherent with biological knowledge. Our analysis suggests that systematic clustering based on target genes GO semantic similarities can aid to reveal the functional diversity of miRNA families. Additionally, this method can be extended to other species and used to predict novel miRNA functions.","tags":null,"title":"A new method for measuring functional similarity of microRNAs","type":"publication"},{"authors":["**G Yu**†","CL Xiao†","CH Lu†","HT Jia","F Ge","W Wang","XF Yin","HL Jia","JX He*","QY He*"],"categories":null,"content":"","date":1296518400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1296518400,"objectID":"20c5ca86c94adf353a6db82becfd7e69","permalink":"https://guangchuangyu.github.io/publication/2011_a549/","publishdate":"2011-02-01T00:00:00Z","relpermalink":"/publication/2011_a549/","section":"publication","summary":"As an in vitro model for type II human lung cancer, A549 cells resist cytotoxicity via phosphorylation of proteins as demonstrated by many studies. However, to date, no large-scale phosphoproteome investigation has been conducted on A549. Here, we performed a systematical analysis of the phosphoproteome of A549 by using mass spectrometry (MS)-based strategies. This investigation led to the identification of 337 phosphorylation sites on 181 phosphoproteins. Among them, 67 phosphoproteins and 230 phosphorylation sites identified appeared to be novel with no previous characterization in lung cancer. Based on their known functions as reported in the literature, these phosphoproteins were functionally organized into highly interconnected networks. Western blotting and immunohistochemistry analyses were performed to validate the expression of a bottleneck phosphoprotein YAP1 in cancer cell lines and tissues. This dataset provides a valuable resource for further studies on phosphorylation and lung carcinogenesis.","tags":null,"title":"Phosphoproteome profile of human lung cancer cell line A549","type":"publication"},{"authors":null,"categories":["Calculus"],"content":"Optimization means to seek minima or maxima of a funtion within a given defined domain.\nIf a function reach its maxima or minima, the derivative at that point is approaching to 0. If we apply Newton-Raphson method for root finding to f', we can get the optimized f.\nf2df \u0026lt;- function(fun) { fun.list = as.list(fun) var \u0026lt;- names(fun.list[1]) fun.exp = fun.list[[2]] diff.fun = D(fun.exp, var) df = list(x=0, diff.fun) df = as.function(df) return(df) } newton \u0026lt;- function(fun, x0, tol=1e-7, niter=100) { df = f2df(fun) for (i in 1:niter) { x = x0 - fun(x0)/df(x0) if (abs(fun(x)) \u0026lt; tol) return(x) x0 = x } stop(\u0026quot;exceeded allowed number of iterations\u0026quot;) } newton_optimize \u0026lt;- function(fun, x0, tol=1e-7, niter=100) { df \u0026lt;- f2df(fun) x = newton(df, x0, tol, niter) ddf \u0026lt;- f2df(df) if (ddf(x) \u0026gt; 0) { cat (\u0026quot;minima:\\t\u0026quot;, x, \u0026quot;\\n\u0026quot;) } else { cat (\u0026quot;maxima:\\t\u0026quot;, x, \u0026quot;\\n\u0026quot;) } return(x) }  The golden-section method does not need f'. And it is similar to the root-bracketing technique for root finding.\ngSection \u0026lt;- function(f, x1, x2, x3, tol=1e-7) { r \u0026lt;- 2 - (1+sqrt(5))/2 x4 \u0026lt;- x2 + (x3-x2)*r if ( abs(x3-x1) \u0026lt; tol ){ return(x2) } if (f(x4) \u0026lt; f(x2)) { gSection(f, x2, x4, x3, tol) } else { gSection(f, x4, x2, x1, tol) } }  \u0026gt; f \u0026lt;- function(x) (x-1/3)^2 \u0026gt; newton_optimize(f, 0, tol=1e-7) minima: 0.3333333 [1] 0.3333333 \u0026gt; gSection(f, 0,0.5,1) [1] 0.3333333 \u0026gt; optimize(f, c(0,1), tol=1e-7) $minimum [1] 0.3333333 $objective [1] 0 ","date":1293843168,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1293843168,"objectID":"b2290b25a74e9c7a940e63f4a53d8ef7","permalink":"https://guangchuangyu.github.io/2011/01/single-variable-optimization/","publishdate":"2011-01-01T08:52:48+08:00","relpermalink":"/2011/01/single-variable-optimization/","section":"post","summary":"Optimization means to seek minima or maxima of a funtion within a given defined domain.\nIf a function reach its maxima or minima, the derivative at that point is approaching to 0. If we apply Newton-Raphson method for root finding to f', we can get the optimized f.\n","tags":["optimization"],"title":"Single variable optimization","type":"post"},{"authors":null,"categories":["Calculus","Programming"],"content":" The foundamental idea of numerical integration is to estimate the area of the region in the xy-plane bounded by the graph of function f(x). The integral was esimated by dividing x into small intervals, then adds all the small approximations to give a total approximation.\nTrapezoidal rule Numerical integration can be done by trapezoidal rule, simpson\u0026rsquo;s rule and quadrature rules. R has a built-in function, integrate, which performs adaptive quadrature.\nTrapezoidal rule works by approximating the region under the graph f(x) as a trapezoid and calculating its area.\ntrapezoid \u0026lt;- function(fun, a, b, n=100) { # numerical integral of fun from a to b # using the trapezoid rule with n subdivisions # assume a \u0026lt; b and n is a positive integer h \u0026lt;- (b-a)/n x \u0026lt;- seq(a, b, by=h) y \u0026lt;- fun(x) s \u0026lt;- h * (y[1]/2 + sum(y[2:n]) + y[n+1]/2) return(s) }  Simpson\u0026rsquo;s rule Simpson\u0026rsquo;s rule subdivides the interval [a,b] into n subintervals, where n is even, then on each consecutive pairs of subintervals, it approximates the behaviour of f(x) by a parabola (polynomial of degree 2) rather than by the straight lines used in the trapezoidal rule.\nsimpson \u0026lt;- function(fun, a, b, n=100) { # numerical integral using Simpson's rule # assume a \u0026lt; b and n is an even positive integer h \u0026lt;- (b-a)/n x \u0026lt;- seq(a, b, by=h) if (n == 2) { s \u0026lt;- fun(x[1]) + 4*fun(x[2]) +fun(x[3]) } else { s \u0026lt;- fun(x[1]) + fun(x[n+1]) + 2*sum(fun(x[seq(2,n,by=2)])) + 4 *sum(fun(x[seq(3,n-1, by=2)])) } s \u0026lt;- s*h/3 return(s) }  To calculate an integrate over infinite interval, one way is to transform it into an integral over a finite interval as introduce in wiki.\nsimpson_v2 \u0026lt;- function(fun, a, b, n=100) { # numerical integral using Simpson's rule # assume a \u0026lt; b and n is an even positive integer if (a == -Inf \u0026amp; b == Inf) { f \u0026lt;- function(t) (fun((1-t)/t) + fun((t-1)/t))/t^2 s \u0026lt;- simpson_v2(f, 0, 1, n) } else if (a == -Inf \u0026amp; b != Inf) { f \u0026lt;- function(t) fun(b-(1-t)/t)/t^2 s \u0026lt;- simpson_v2(f, 0, 1, n) } else if (a != -Inf \u0026amp; b == Inf) { f \u0026lt;- function(t) fun(a+(1-t)/t)/t^2 s \u0026lt;- simpson_v2(f, 0, 1, n) } else { h \u0026lt;- (b-a)/n x \u0026lt;- seq(a, b, by=h) y \u0026lt;- fun(x) y[is.nan(y)]=0 s \u0026lt;- y[1] + y[n+1] + 2*sum(y[seq(2,n,by=2)]) + 4 *sum(y[seq(3,n-1, by=2)]) s \u0026lt;- s*h/3 } return(s) }  \u0026gt; phi \u0026lt;- function(x) exp(-x^2/2)/sqrt(2*pi) ##normal distribution \u0026gt; simpson_v2(phi, 0, Inf, n=100) [1] 0.4986569 \u0026gt; simpson_v2(phi, -Inf,3, n=100) [1] 0.998635 \u0026gt; pnorm(3) [1] 0.9986501  Simpson\u0026rsquo;s rule is more accuracy than trapezoidal rule. To compare the accuracy between simpson\u0026rsquo;s rule and trapezoidal rule, I estimated $ \\int_{0.01}^{1} \\frac{1}{x} dx = -\\log(0.01)$ for a sequence of increasing values of n.\nf \u0026lt;- function(x) 1/x #integrate(f, 0.01, 1) == -log(0.01) S.trapezoid \u0026lt;- function(n) trapezoid(f, 0.01, 1, n) S.simpson \u0026lt;- function(n) simpson(f, 0.01, 1, n) n \u0026lt;- seq(10, 1000, by = 10) St \u0026lt;- sapply(n, S.trapezoid) Ss \u0026lt;- sapply(n, S.simpson) opar \u0026lt;- par(mfrow = c(2, 2)) plot(n,St + log(0.01), type=\u0026quot;l\u0026quot;, xlab=\u0026quot;n\u0026quot;, ylab=\u0026quot;error\u0026quot;, main=\u0026quot;Trapezoidal rule\u0026quot;) plot(n,Ss + log(0.01), type=\u0026quot;l\u0026quot;, xlab=\u0026quot;n\u0026quot;, ylab=\u0026quot;error\u0026quot;,main=\u0026quot;Simpson's rule\u0026quot;) plot(log(n), log(St+log(0.01)),type=\u0026quot;l\u0026quot;, xlab=\u0026quot;log(n)\u0026quot;, ylab=\u0026quot;log(error)\u0026quot;,main=\u0026quot;Trapezoidal rule\u0026quot;) plot(log(n), log(Ss+log(0.01)),type=\u0026quot;l\u0026quot;, xlab=\u0026quot;log(n)\u0026quot;, ylab=\u0026quot;log(error)\u0026quot;,main=\u0026quot;Simpson's rule\u0026quot;)  The plot showed that log(error) against log(n) appears to have a slope of -1.90 and -3.28 for trapezoidal rule and simpson\u0026rsquo;s rule respectively.\nAnother way to compare their accuracy is to calculate how large of the partition size n for reaching a specific tolerance.\nyIntegrate \u0026lt;- function(fun, a, b, tol=1e-8, method= \u0026quot;simpson\u0026quot;, verbose=TRUE) { # numerical integral of fun from a to b, assume a \u0026lt; b # with tolerance tol n \u0026lt;- 4 h \u0026lt;- (b-a)/4 x \u0026lt;- seq(a, b, by=h) y \u0026lt;- fun(x) yIntegrate_internal \u0026lt;- function(y, h, n, method) { if (method == \u0026quot;simpson\u0026quot;) { s \u0026lt;- y[1] + y[n+1] + 4*sum(y[seq(2,n,by=2)]) + 2 *sum(y[seq(3,n-1, by=2)]) s \u0026lt;- s*h/3 } else if (method == \u0026quot;trapezoidal\u0026quot;) { s \u0026lt;- h * (y[1]/2 + sum(y[2:n]) + y[n+1]/2) } else { } return(s) } s \u0026lt;- yIntegrate_internal(y, h, n, method) s.diff \u0026lt;- tol + 1 # ensures to loop at once. while (s.diff \u0026gt; tol ) { s.old \u0026lt;- s n \u0026lt;- 2*n h \u0026lt;- h/2 y[seq(1, n+1, by=2)] \u0026lt;- y ##reuse old fun values y[seq(2,n, by=2)] \u0026lt;- sapply(seq(a+h, b-h, by=2*h), fun) s \u0026lt;- yIntegrate_internal(y, h, n, method) s.diff \u0026lt;- abs(s-s.old) } if (verbose) { cat(\u0026quot;partition size\u0026quot;, n, \u0026quot;\\n\u0026quot;) } return(s) }  \u0026gt; fun \u0026lt;- function(x) exp(x) - x^2 \u0026gt; yIntegrate(fun, 3,5,tol=1e-8, method=\u0026quot;simpson\u0026quot;) partition size 512 [1] 95.66096 \u0026gt; yIntegrate(fun, 3,5,tol=1e-8, method=\u0026quot;trapezoidal\u0026quot;) partition size 131072 [1] 95.66096  As show above, simpson\u0026rsquo;s rule converge much faster than trapezoidal rule.\nQuadrature rule Quadrature rule is more efficient than traditional algorithms. In adaptive quadrature, the subinterval width h is not constant over the interval [a,b], but instead adapts to the function. Here, I presented the adaptive simpson\u0026rsquo;s method.\nquadrature \u0026lt;- function(fun, a, b, tol=1e-8) { # numerical integration using adaptive quadrature quadrature_internal \u0026lt;- function(S.old, fun, a, m, b, tol, level) { level.max \u0026lt;- 100 if (level \u0026gt; level.max) { cat (\u0026quot;recursion limit reached: singularity likely\\n\u0026quot;) return (NULL) } S.left \u0026lt;- simpson(fun, a, m, n=2) S.right \u0026lt;- simpson(fun, m, b, n=2) S.new \u0026lt;- S.left + S.right if (abs(S.new-S.old) \u0026gt; tol) { S.left \u0026lt;- quadrature_internal(S.left, fun, a, (a+m)/2, m, tol/2, level+1) S.right \u0026lt;- quadrature_internal(S.right, fun, m, (m+b)/2, b, tol/2, level+1) S.new \u0026lt;- S.left + S.right } return(S.new) } level = 1 S.old \u0026lt;- (b-a) * (fun(a) + fun(b))/2 S.new \u0026lt;- quadrature_internal(S.old, fun, a, (a+b)/2, b, tol, level+1) return(S.new) }  Quadrature rule is effective when f(x) is steep.\n\u0026gt; fun \u0026lt;- function(x) return(1.5 * sqrt(x)) \u0026gt; system.time(yIntegrate(fun, 0,1, tol=1e-9, method=\u0026quot;simpson\u0026quot;)) partition size 524288 user system elapsed 1.58 0.00 1.58 \u0026gt; system.time(quadrature(fun, 0,1, tol=1e-9)) user system elapsed 0.25 0.00 0.25  Reference  Robinson A., O. Jones, and R. Maillardet. 2009. Introduction to Scientific Programming and Simulation Using R. Chapman and Hall. http://en.wikipedia.org/wiki/Numerical_integration http://en.wikipedia.org/wiki/Trapezoidal_rule http://en.wikipedia.org/wiki/Simpson%27s_rule http://en.wikipedia.org/wiki/Adaptive_quadrature  ","date":1293244822,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1293244822,"objectID":"c7aa15e532e42547b4dea39488fe50c5","permalink":"https://guangchuangyu.github.io/2010/12/one-dimensional-integrals/","publishdate":"2010-12-25T10:40:22+08:00","relpermalink":"/2010/12/one-dimensional-integrals/","section":"post","summary":"The foundamental idea of numerical integration is to estimate the area of the region in the xy-plane bounded by the graph of function f(x). The integral was esimated by dividing x into small intervals, then adds all the small approximations to give a total approximation.\nTrapezoidal rule Numerical integration can be done by trapezoidal rule, simpson\u0026rsquo;s rule and quadrature rules. R has a built-in function, integrate, which performs adaptive quadrature.","tags":["integrals"],"title":"one-dimensional integrals","type":"post"},{"authors":null,"categories":["Calculus","Programming"],"content":"Numerical root finding methods use iteration, producing a sequence of numbers that hopefully converge towards a limits which is a root. This post only focuses four basic algorithms on root finding, and covers bisection method, fixed point method, Newton-Raphson method, and secant method.\nThe simplest root finding algorithms is the bisection method. It works when f is a continuous function and it requires previous knowledge of two initial gueeses, u and v, such that f(u) and f(v) have opposite signs. This method is reliable, but converges slowly. For detail, see https://guangchuangyu.github.io/cn/2008/11/bisect-to-solve-equation/ .\nRoot finding can be reduced to the problem of finding fixed points of the function g(x) = c*f(x) +x, where c is a non-zero constant. It is clearly that f(a) = 0 if and only if g(a) = a. This is the so called fixed point algorithm.\nfixedpoint \u0026lt;- function(fun, x0, tol=1e-07, niter=500){ ## fixed-point algorithm to find x such that fun(x) == x ## assume that fun is a function of a single variable ## x0 is the initial guess at the fixed point xold \u0026lt;- x0 xnew \u0026lt;- fun(xold) for (i in 1:niter) { xold \u0026lt;- xnew xnew \u0026lt;- fun(xold) if ( abs((xnew-xold)) \u0026lt; tol ) return(xnew) } stop(\u0026quot;exceeded allowed number of iterations\u0026quot;) }  \u0026gt; f \u0026lt;- function(x) log(x) - exp(-x) \u0026gt; gfun \u0026lt;- function(x) x - log(x) + exp(-x) \u0026gt; fixedpoint(gfun, 2) [1] 1.309800 \u0026gt; x=fixedpoint(gfun, 2) \u0026gt; f(x) [1] 3.260597e-09  The fixed point algorithm is not reliable, since it cannot guaranteed to converge. Another disavantage of this method is that the speed is relatively slow.\nNewtom-Raphson method converge more quickly than bisection method and fixed point method. It assumes the function f to have a continuous derivative. For detail, see http://guangchuangyu.github.io/cn/2007/06/newton-raphson-method/ .\nThe secant method does not require the computation of a derivative, it only requires that the function f is continuous. The secant method is based on a linear approximation to the function f. The convergence properties of the secant method are similar to those of the Newton-Raphson method.\nsecant \u0026lt;- function(fun, x0, x1, tol=1e-07, niter=500){ for ( i in 1:niter ) { x2 \u0026lt;- x1-fun(x1)*(x1-x0)/(fun(x1)-fun(x0)) if (abs(fun(x2)) \u0026lt; tol) return(x2) x0 \u0026lt;- x1 x1 \u0026lt;- x2 } stop(\u0026quot;exceeded allowed number of iteractions\u0026quot;) }  \u0026gt; f \u0026lt;- function(x) log(x) - exp(-x) \u0026gt; secant(f, x0=1, x1=2) [1] 1.309800 ","date":1291430422,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1291430422,"objectID":"1ad9fd43cb5fa187e20c30fca387c889","permalink":"https://guangchuangyu.github.io/2010/12/root-finding/","publishdate":"2010-12-04T10:40:22+08:00","relpermalink":"/2010/12/root-finding/","section":"post","summary":"Numerical root finding methods use iteration, producing a sequence of numbers that hopefully converge towards a limits which is a root. This post only focuses four basic algorithms on root finding, and covers bisection method, fixed point method, Newton-Raphson method, and secant method.\nThe simplest root finding algorithms is the bisection method. It works when f is a continuous function and it requires previous knowledge of two initial gueeses, u and v, such that f(u) and f(v) have opposite signs. This method is reliable, but converges slowly. For detail, see https://guangchuangyu.github.io/cn/2008/11/bisect-to-solve-equation/ .\nRoot finding can be reduced to the problem of finding fixed points of the function g(x) = c*f(x) +x, where c is a non-zero constant. It is clearly that f(a) = 0 if and only if g(a) = a. This is the so called fixed point algorithm.\n","tags":["root"],"title":"Root finding","type":"post"},{"authors":null,"categories":["Programming","R"],"content":"R currently supports two internal OOP systems (S3 and S4), and several others as add-on packages, such as R.oo, and OOP.\nS3 is easy to use but not reliable enough for large software projects. The S3 system emphasize on generic functions and polymorphism. It\u0026rsquo;s a function centric system which is different from class centric system like JAVA.\nComputations are carried out by methods. In many OOP languages, that is, a call to obj.method() which will find the first ancestor class of obj that has a method .method(). R makes the same dicision in a different way, it turns the idea of inheritance \u0026ldquo;inside out\u0026rdquo;. In R, a special type of function called generic function decides which method to invoke. Methods are defined in the same way as a normal function, but with a tag describing what type of object they were designed to process.\nObject Class The class of an object is defined by a character vector of class names.\n\u0026gt; x \u0026lt;- 1 \u0026gt; class(x) \u0026lt;- \u0026quot;foo\u0026quot; #or \u0026gt; attr(x, \u0026quot;class\u0026quot;) \u0026lt;- \u0026quot;foo\u0026quot; #or \u0026gt; x \u0026lt;- structure(1, class=\u0026quot;foo\u0026quot;) \u0026gt; x [1] 1 attr(,\u0026quot;class\u0026quot;) [1] \u0026quot;foo\u0026quot;  Objects can have many classes:\n\u0026gt; class(x) \u0026lt;- c(\u0026quot;foo\u0026quot;, \u0026quot;bar\u0026quot;) \u0026gt; x [1] 1 attr(,\u0026quot;class\u0026quot;) [1] \u0026quot;foo\u0026quot; \u0026quot;bar\u0026quot;  Generic functions and method dispatch A generic function is a function that examines the class of its first argument, and thus decides which specific method to dispatch to.\nGeneric functions are defined by UseMethod with the generic name and the object to dispatch on as its parameters.\nThe following example shows how to define a generic function:\nsound \u0026lt;- function(x) UseMethod(\u0026quot;sound\u0026quot;, x)  Methods are defined with a naming convention: generic.class:\nsound.dog \u0026lt;- function(x) \u0026quot;bark\u0026quot; sound.cow \u0026lt;- function(x) \u0026quot;moo\u0026quot; sound.default \u0026lt;- function(x) \u0026quot;animal sound\u0026quot;  The methods function can find out which classes a generic function was designed for.\n\u0026gt; methods(\u0026quot;sound\u0026quot;) [1] sound.cow sound.default sound.dog  R looks for methods in the order in which they appear in the class vector until it found the appropriate method to operate on.\n\u0026gt; x \u0026lt;- structure(\u0026quot;cat\u0026quot;, class = c(\u0026quot;cat\u0026quot;, \u0026quot;dog\u0026quot;, \u0026quot;cow\u0026quot;)) \u0026gt; sound(x) [1] \u0026quot;bark\u0026quot;  Inheritance In S3 system, evaluation may be passed to a less specific method by calling NextMethod which provide a simple inheritance mechanism. NextMethod will dispatch on the second element of the class vector:\n\u0026gt; class(x) \u0026lt;- c(\u0026quot;dog\u0026quot;, \u0026quot;cow\u0026quot;) \u0026gt; sound(x) [1] \u0026quot;bark\u0026quot; \u0026gt; sound.dog \u0026lt;- function(x) NextMethod() \u0026gt; sound(x) [1] \u0026quot;moo\u0026quot; ","date":1287098670,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1287098670,"objectID":"7434d8aecac7b1cbcc45804927e2e5b4","permalink":"https://guangchuangyu.github.io/2010/10/the-s3-oop-system/","publishdate":"2010-10-15T07:24:30+08:00","relpermalink":"/2010/10/the-s3-oop-system/","section":"post","summary":"R currently supports two internal OOP systems (S3 and S4), and several others as add-on packages, such as R.oo, and OOP.\nS3 is easy to use but not reliable enough for large software projects. The S3 system emphasize on generic functions and polymorphism. It\u0026rsquo;s a function centric system which is different from class centric system like JAVA.\n","tags":["OOP","S3"],"title":"The S3 OOP system","type":"post"},{"authors":null,"categories":["R","Publication"],"content":"\nAbstract SUMMARY: The semantic comparisons of Gene Ontology (GO) annotations provide quantitative ways to compute similarities between genes and gene groups, and have became important basis for many bioinformatics analysis approaches. GOSemSim is an R package for semantic similarity computation among GO terms, sets of GO terms, gene products and gene clusters. Four information content (IC)- and a graph-based methods are implemented in the GOSemSim package, multiple species including human, rat, mouse, fly and yeast are also supported. The functions provided by the GOSemSim offer flexibility for applications, and can be easily integrated into high-throughput analysis pipelines. AVAILABILITY: GOSemSim is released under the GNU General Public License within Bioconductor project, and freely available at http://bioconductor.org/packages/2.6/bioc/html/GOSemSim.html.\nCitation Yu G†, Li F†, Qin Y, Bo X*, Wu Y and Wang S*. GOSemSim: an R package for measuring semantic similarity among GO terms and gene products. Bioinformatics. 2010, 26(7):976-978.\n \n","date":1274994386,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1274994386,"objectID":"7e060a6e6c1544db96915972b7db9cee","permalink":"https://guangchuangyu.github.io/2010/05/gosemsim-an-r-package-for-measuring-semantic-similarity-among-go-terms-and-gene-products/","publishdate":"2010-05-28T05:06:26+08:00","relpermalink":"/2010/05/gosemsim-an-r-package-for-measuring-semantic-similarity-among-go-terms-and-gene-products/","section":"post","summary":"\nAbstract SUMMARY: The semantic comparisons of Gene Ontology (GO) annotations provide quantitative ways to compute similarities between genes and gene groups, and have became important basis for many bioinformatics analysis approaches. GOSemSim is an R package for semantic similarity computation among GO terms, sets of GO terms, gene products and gene clusters. Four information content (IC)- and a graph-based methods are implemented in the GOSemSim package, multiple species including human, rat, mouse, fly and yeast are also supported. The functions provided by the GOSemSim offer flexibility for applications, and can be easily integrated into high-throughput analysis pipelines. AVAILABILITY: GOSemSim is released under the GNU General Public License within Bioconductor project, and freely available at http://bioconductor.org/packages/2.6/bioc/html/GOSemSim.html.\n","tags":["GOSemSim"],"title":"GOSemSim an R package for measuring semantic similarity among GO terms and gene products","type":"post"},{"authors":["**G Yu**†","F Li†","Y Qin","X Bo*","Y Wu","S Wang*"],"categories":null,"content":"","date":1270080000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1270080000,"objectID":"c9fc5781a6f045ccccc46caefbde0c06","permalink":"https://guangchuangyu.github.io/publication/gosemsim/","publishdate":"2010-04-01T00:00:00Z","relpermalink":"/publication/gosemsim/","section":"publication","summary":"The semantic comparisons of Gene Ontology (GO) annotations provide quantitative ways to compute similarities between genes and gene groups, and have became important basis for many bioinformatics analysis approaches. GOSemSim is an R package for semantic similarity computation among GO terms, sets of GO terms, gene products and gene clusters. Four information content (IC)- and a graph-based methods are implemented in the GOSemSim package, multiple species including human, rat, mouse, fly and yeast are also supported. The functions provided by the GOSemSim offer flexibility for applications, and can be easily integrated into high-throughput analysis pipelines.","tags":null,"title":"GOSemSim: an R package for measuring semantic similarity among GO terms and gene products","type":"publication"},{"authors":null,"categories":["R","Visualization"],"content":"when I recalled the switch function, it always gave the first element, no matter what the parameter is.\nwhen organism changed to \u0026ldquo;yeast\u0026rdquo;, and called switch function, species supposed to be changed to \u0026ldquo;Sc\u0026rdquo;, but it remains it\u0026rsquo;s original value.\nAfter I read the manual, I change \u0026ldquo;\u0026lt;-\u0026rdquo; to \u0026ldquo;=\u0026rdquo;, and it works as I expected.\nIn R, the assignment token is \u0026ldquo;\u0026lt;-\u0026rdquo; but not \u0026ldquo;=\u0026rdquo;. \u0026ldquo;=\u0026rdquo; is equivalent to \u0026ldquo;\u0026lt;-\u0026rdquo; when assign a value. At this time, it\u0026rsquo;s not to assign a value but to name an alternative.\nIt\u0026rsquo;s curious but this is the syntax of R.\nThe authors of R once said: syntax is superficial.\nI know syntax is not the essential of a language, but it\u0026rsquo;s the way how we express our ideas. At this point, it\u0026rsquo;s the most important thing. This maybe the reason why they chose S as the syntax of R, since S is designed for statistical computing.\nI really hate the syntax sometimes.\nHere is the explanation from \u0026lsquo;The R Inferno\u0026rsquo; page 78 ","date":1236576924,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1236576924,"objectID":"50bb8189a235cf7546134049468abc29","permalink":"https://guangchuangyu.github.io/2009/03/assignment-token-of-r/","publishdate":"2009-03-09T13:35:24+08:00","relpermalink":"/2009/03/assignment-token-of-r/","section":"post","summary":"when I recalled the switch function, it always gave the first element, no matter what the parameter is.\nwhen organism changed to \u0026ldquo;yeast\u0026rdquo;, and called switch function, species supposed to be changed to \u0026ldquo;Sc\u0026rdquo;, but it remains it\u0026rsquo;s original value.\n","tags":["syntax","semantic"],"title":"Assignment token of R","type":"post"},{"authors":null,"categories":null,"content":"","date":1228089600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1228089600,"objectID":"3746fa4c4fb6720716ef66364431e939","permalink":"https://guangchuangyu.github.io/project/gosemsim/","publishdate":"2008-12-01T00:00:00Z","relpermalink":"/project/gosemsim/","section":"project","summary":"The semantic comparisons of Gene Ontology (GO) annotations provide quantitative ways to compute similarities between genes and gene groups, and have became important basis for many bioinformatics analysis approaches. GOSemSim is an R package for semantic similarity computation among GO terms, sets of GO terms, gene products and gene clusters. GOSemSim implemented five methods proposed by Resnik, Schlicker, Jiang, Lin and Wang respectively.","tags":["bioc"],"title":"GOSemSim","type":"project"},{"authors":null,"categories":["R","Biology"],"content":"Sequence alignment by dynamic programming.\n ## by YGC ## August 7, 2008 ## guangchuangyu AT gmail.com X \u0026lt;- 'TTCATA' Y \u0026lt;- 'TGCTCGTA' seq.x \u0026lt;- unlist(strsplit(X, '')) seq.y \u0026lt;- unlist(strsplit(Y, '')) seq.x \u0026lt;- c(0,seq.x) seq.y \u0026lt;- c(0,seq.y) match \u0026lt;- 5 mismatch \u0026lt;- -2 indel \u0026lt;- -6 ## initial the score matrix score \u0026lt;- matrix(NA, length(seq.x), length(seq.y)) score[,1] \u0026lt;- sapply(1:length(seq.x)-1, function(x) x * indel) score[1,] \u0026lt;- sapply(1:length(seq.y)-1, function(x) x * indel) ## The dynamic programming, global alignment recursion for (i in 2:length(seq.x)) { for (j in 2:length(seq.y)){ # seq.x[i] , seq.y[j] are aligned if ( seq.x[i] == seq.y[j]) { score[i,j] \u0026lt;- score[i-1, j-1] + match } else { score[i,j] \u0026lt;- score[i-1, j-1] + mismatch } # seq.x[i] aligned to - sc \u0026lt;- score[i-1,j] + indel if (sc \u0026gt; score[i,j]) score[i,j] = sc # seq.y[j] aligned to - sc \u0026lt;- score[i,j-1] + indel if (sc \u0026gt; score[i,j]) score[i,j] = sc } } ## Traceback i \u0026lt;- length(seq.x) j \u0026lt;- length(seq.y) ax \u0026lt;- character() ay \u0026lt;- character() while (i \u0026gt; 1 \u0026amp;\u0026amp; j \u0026gt;1){ ## case 1: best was seq.x[i] aligned to seq.y[j] sc \u0026lt;- score[i-1,j-1] if (seq.x[i] == seq.y[j]) { sc \u0026lt;- sc + match } else { sc \u0026lt;- sc + mismatch } if (sc == score[i,j]) { ax \u0026lt;- c(seq.x[i], ax) ay \u0026lt;- c(seq.y[j], ay) i \u0026lt;- i -1 j \u0026lt;- j-1 next } ## case 2: best was seq.x[i] aligned to - if ((score[i-1,j] + indel) == score[i,j]) { ax \u0026lt;- c(seq.x[i], ax) ay \u0026lt;- c(\u0026quot;-\u0026quot;, ay) i \u0026lt;- i-1 next } ## case 3: best was seq.y[j] aligned to - if ((score[i,j-1] + indel) == score[i,j]) { ax \u0026lt;- c(\u0026quot;-\u0026quot;, ax) ay \u0026lt;- c(seq.y[j], ay) j \u0026lt;- j-1 next } } cat (\u0026quot;Sequence X: \u0026quot;, X,\u0026quot;\\n\u0026quot;) cat (\u0026quot;Sequence Y: \u0026quot;, Y,\u0026quot;\\n\u0026quot;) cat (\u0026quot;Scoring system: \u0026quot;, match, \u0026quot; for match; \u0026quot;, mismatch, \u0026quot; for mismatch; \u0026quot;, indel, \u0026quot; for gap\u0026quot;, \u0026quot;\\n\\n\u0026quot;) cat (\u0026quot;Dynamic programming matrix:\\n\u0026quot;) print (score) cat (\u0026quot;\\nAlignment:\\n\u0026quot;) cat (paste(ax, collapse=''), \u0026quot;\\n\u0026quot;) cat (paste(ay, collapse=''),\u0026quot;\\n\\n\u0026quot;) cat (\u0026quot;Optimum alignment score: \u0026quot;, score[length(score)],\u0026quot;\\n\u0026quot;)  ","date":1218082415,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1218082415,"objectID":"91d4f03728b5bb86f08473b0061b9457","permalink":"https://guangchuangyu.github.io/2008/08/sequence-alignment-program-written-in-r/","publishdate":"2008-08-07T12:13:35+08:00","relpermalink":"/2008/08/sequence-alignment-program-written-in-r/","section":"post","summary":"Sequence alignment by dynamic programming.\n","tags":["alignment"],"title":"sequence alignment program written in R","type":"post"}]