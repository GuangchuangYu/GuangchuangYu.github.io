<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>G. Yu</title>
    <link>http://guangchuangyu.github.io/</link>
    <description>Recent content on G. Yu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Dec 2015 00:42:26 +0800</lastBuildDate>
    <atom:link href="http://guangchuangyu.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>喜新厌旧之hello Hugo</title>
      <link>http://guangchuangyu.github.io/2015/12/%E5%96%9C%E6%96%B0%E5%8E%8C%E6%97%A7%E4%B9%8Bhello-hugo/</link>
      <pubDate>Fri, 04 Dec 2015 00:42:26 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/12/%E5%96%9C%E6%96%B0%E5%8E%8C%E6%97%A7%E4%B9%8Bhello-hugo/</guid>
      <description>

&lt;h1 id=&#34;installation:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;Installation&lt;/h1&gt;

&lt;p&gt;安装hugo对于Mac用户来说，太容易，brew大法搞定。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install hubo
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;mathjax-support:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;MathJax support&lt;/h1&gt;

&lt;p&gt;把下面的代码:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;
  src=&amp;quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&amp;gt;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;加入到文件&lt;code&gt;themes/hyde-x/layouts/partials/foot.html&lt;/code&gt;中，就可以实现&lt;code&gt;$\LaTeX$&lt;/code&gt;公式的解析。&lt;/p&gt;

&lt;h1 id=&#34;migrate-wordpress-to-hugo:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;migrate wordpress to hugo&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;Disqus Comment System plugin&lt;/code&gt; 点击&lt;code&gt;Export comments to Disqus&lt;/code&gt;搞定&lt;/p&gt;

&lt;h2 id=&#34;convert-wordpress-posts-to-markdown-files:3ff7f092e18423fcdd26eedc8fc08766&#34;&gt;convert Wordpress posts to markdown files&lt;/h2&gt;

&lt;p&gt;试用了多个插件或脚本，都是各种出错。最后发现了神器&lt;a href=&#34;https://github.com/jprichardson/potter-wordpress&#34;&gt;potter-wordpress&lt;/a&gt;，通过npm安装：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install -g pottercms-wordpress
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后一个语句:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;potter-wordpress -h WORDPRESS_SITE_URL -u USER_NAME -p PASSWORD --dir PATH_TO_STORE_MD_FILES
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;自动从线上把posts抓下来，并转化为&lt;code&gt;markdown&lt;/code&gt;。在之前各种搞不定之后，看到下面的输出有种莫名的快感。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;  Fetching articles...

       Got : [Sun Nov 29 2015] R kernel in Jupyter notebook 3
       Got : [Mon Nov 09 2015] phylomoji with ggtree
       Got : [Tue Nov 17 2015] 合体中的操作系统
       Got : [Mon Nov 02 2015] Comparison of clusterProfiler and GSEA-P
       Got : [Thu Oct 01 2015] ChIPseq data mining with ChIPseeker
       Got : [Tue Oct 06 2015] TRIE
       Got : [Thu Oct 15 2015] [BioC 3.2] NEWS of my BioC packages
       Got : [Wed Oct 21 2015] use simplify to remove redundancy of enriched GO terms
       
       ...
       
       Got : [Mon May 14 2007] Edit partition table in NetBSD/macppc
       Got : [Mon May 14 2007] 我的emacs配置文件
       Got : [Mon May 14 2007] pkgsrc tips
       Got : [Thu May 03 2007] scilab三维平面绘图
       Got : [Sat Jun 24 2006] qvwm窗口管理器的windows2000主题
       Got : [Wed Jun 14 2006] 安装os9和netbsd双系统
       Got : [Sat May 28 2005] 在emacs里使用maxima
       Got : [Mon Mar 14 2005] scau校园网认证
       Got : [Fri Jan 14 2005] Powerbook G3上安装gentoo

  Done.
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>R kernel in Jupyter notebook 3</title>
      <link>http://guangchuangyu.github.io/2015/11/r-kernel-in-jupyter-notebook-3/</link>
      <pubDate>Sun, 29 Nov 2015 14:13:35 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/11/r-kernel-in-jupyter-notebook-3/</guid>
      <description>

&lt;p&gt;I followed the post, &lt;a href=&#34;http://www.michaelpacer.com/maths/r-kernel-for-ipython-notebook&#34;&gt;Installing an R kernel for IPython/jupyter
notebook 3 on
OSX&lt;/a&gt;,
to install jupyter with python3 and R kernels in my iMac.&lt;/p&gt;

&lt;p&gt;I have &lt;a href=&#34;https://elementary.io/&#34;&gt;elementaryOS&lt;/a&gt; on my Macbook Pro and also
want to have jupyter on it. The installation process is quite similar.&lt;/p&gt;

&lt;h3 id=&#34;install-jupyter:63d628ceb7549de75a7f4dbd963976d3&#34;&gt;Install Jupyter&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install python3-pip
sudo pip3 install jupyter
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then we can use the following command to start jupyter:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;ipython notebook
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-irkernel:63d628ceb7549de75a7f4dbd963976d3&#34;&gt;Install IRkernel&lt;/h3&gt;

&lt;p&gt;To compile IRkernel, we should firstly have zmq lib installed.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install libzmq3-dev python-zmq
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In R, run the following command to install
&lt;a href=&#34;https://github.com/IRkernel/IRkernel&#34;&gt;IRkernel&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;
install.packages(c(&#39;rzmq&#39;,&#39;repr&#39;,&#39;IRkernel&#39;,&#39;IRdisplay&#39;),
                  repos = c(&#39;http://irkernel.github.io/&#39;,     
                  getOption(&#39;repos&#39;)),
                  type = &#39;source&#39;)
IRkernel::installspec()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can use R in jupyter. Inline image is a great feature especially
for demonstration.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/screenshots/Screenshot%202015-11-04%2010.54.29.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;With &lt;a href=&#34;https://cran.r-project.org/web/views/Phylogenetics.html&#34;&gt;many phylogenetic
packages&lt;/a&gt;
available in R and my package
&lt;a href=&#34;https://github.com/GuangchuangYu/ggtree&#34;&gt;ggtree&lt;/a&gt;, R in jupyter can be a
great environment for phylogenetics.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>合体中的操作系统</title>
      <link>http://guangchuangyu.github.io/2015/11/%E5%90%88%E4%BD%93%E4%B8%AD%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Tue, 17 Nov 2015 16:06:59 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/11/%E5%90%88%E4%BD%93%E4%B8%AD%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;更新EI Capitan已经近一个月，第一感觉就是明显变慢了。这是去年买的27&amp;rsquo;
iMac，必须不慢。MS
office程序可以打开，但打开文档直接闪退。升级安装总会有些问题，就像我去年在笔记本上&lt;a href=&#34;http://ygc.name/2014/11/14/hello-yosemite/&#34;&gt;升级yosemite&lt;/a&gt;一样，最后两分钟始终过不去，迫使我&lt;a href=&#34;http://ygc.name/2014/11/14/hello-yosemite/&#34;&gt;全新安装&lt;/a&gt;，当时我看后台记录就发现了是MacTex拷不过去，后来MacTex的网站上也写了升级Yosemite有这个问题。升级有些小问题是可以预见的，但很少有像EI
Capitan这么多的问题。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.macworld.com/article/2987277/operating-systems/os-x-el-capitan-review-mac-upgrade-thats-as-solid-as-a-rock.html&#34;&gt;Macworld EI Capitan
review&lt;/a&gt;文章中有人这样评论：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;haha nice review ! did you tried the update ?? slow connection safari
freezes on launch outlook crash printer does not work anymore great
job from Apple . My confidence in Apple has been seriously dented!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;最不可思议的是开发者发现升级后&lt;a href=&#34;https://ohthehugemanatee.org/blog/2015/10/01/how-i-got-el-capitain-working-with-my-developer-tools/&#34;&gt;开发工具都有问题&lt;/a&gt;了：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Last night I installed OSX’s new “El Capitain” update, and it broke
most of the tools I use in my daily life as a developer, including
homebrew and git.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;git我倒没发现有问题，不过subversion每次都要求我输入密码了，&lt;a href=&#34;https://discussions.apple.com/thread/7276820&#34;&gt;keychain&lt;/a&gt;问题也是普遍存在的。&lt;/p&gt;

&lt;p&gt;第一时间升级EI Capitan的原因是我想要Split View，做为一个&lt;a href=&#34;http://ygc.name/2014/06/01/use-linux-desktop-again/&#34;&gt;tiling window
manager&lt;/a&gt;的爱好者，Split
View是有吸引力的，分屏确实是有助于提高工作效率，然后我发现它竟然&lt;a href=&#34;http://www.cnet.com/how-to/how-to-use-split-view-in-os-x-el-capitan/&#34;&gt;没有键盘操作&lt;/a&gt;！！！WTF，这个功能显然又是iPad送的，Apple并不是为了所谓的提高工作效率，而是为了消耗iPad过多的计算能力，可以让你一边聊天一边还在打游戏，顺道又送给了OS
X。&lt;/p&gt;

&lt;p&gt;总的来说，我的吐槽只有一点，电脑长得越来越像手机了，但手机我已经有了，我不需要也不想电脑跟手机一样。&lt;/p&gt;

&lt;p&gt;PC的发展历程中经历了一次成功的合体，那就是工作站X了桌面系统，不管是微软还是苹果，都是这样。&lt;/p&gt;

&lt;p&gt;微软当年9x系列的桌面系统，NT系列的工作站系统，首次尝试合体是windows
2000，但2k与其说是合体，倒不如说是把NT推向大众的桌面，所以不太成功，因为大量的游戏不兼容，用户不买帐，但用户又喜欢2k的漂亮界面。微软给出了两个方案，一个是2k上面打游戏补丁，一个是9x内核+2k界面的ME系统。最终合体成功的是XP，XP两个字母来自于eXPerience，旨在给用户更好的体验。实际上2k比XP稳定，且2k土灰土灰的界面，如果长期盯着电脑看的话，对眼睛比较友好。是我所喜欢的经典系统之一。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2006/06/qvwm.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;当年苹果笔记本(Power构架) + NetBSD + 仿2k界面，这样的合体非常好👍。&lt;/p&gt;

&lt;p&gt;很多人不知道win7为什么版本是7，因为NT出到4，2k是版本5，XP是6，不要跟我说什么Vista，那只是微软进展太慢，而苹果每年一新版本，压力太大，把半成品拿出来，微软自己也没给Vista个主版本号。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/os9.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;苹果也经历了这样的合体，当年的os
9当然比win98好很多，但如果要跟工作站出身的2k比的话，完全没法比。乔帮主被苹果赶走了，专心在搞工作站，推出了NeXTStep操作系统。苹果笔记本
+ NetBSD + 仿NeXTStep界面，这样的合体也非常好💪。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/wmaker.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;乔帮主回到苹果后，也是一次合体，于是有了OS X，就像2k一样，刚出来的OS
X用户也不买帐，同样的原因，软件不兼容。到了10.2
Jaguar情况才好转，而到了10.4
Tiger的时候，速度提升了很多，系统已经非常现代化，而XP界面是如此粗糙，苹果再一次领先，且因为走了Intel路线，微软压力山大。&lt;/p&gt;

&lt;p&gt;一直到OS X 10.6 Snow Leopard和Windows
7，都是这次合体的延续，都是成功的，至此经典系统宣布结束。从10.7
Lion开始，苹果开始尝试让手机系统和桌面系统合体，微软后来跟上，推出Win8，应该说OS
X还是没有太多的违和感，但微软合体的结果就是同时拥有鼠标键盘操作和触屏操作两套界面，违和感太强！已吐槽无力。Ubuntu所采用的Unity也是为手持设备设计的，实际上Canonical已经开始在做手持设备了。所以我也不喜欢Unity，&lt;a href=&#34;http://ygc.name/2014/06/01/use-linux-desktop-again/&#34;&gt;i3是最好的选择&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;从最初iPad送来了LaunchPad，到现在EI Capitan的Split
View。对于有键盘的电脑来说，Spotlight是最好的程序启动器，而Split
View嘛，还得靠BTT：
&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/screenshots/Screenshot%202015-11-13%2011.33.50.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;现在这些系统做得好像你对着电脑屏幕用手指戳就行了，他们完全不在乎你的电脑压根就戳不动，就算戳得动，用处也不大，键盘是工作中最好的人机交互👻。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BioC 3.2: NEWS of my BioC packages</title>
      <link>http://guangchuangyu.github.io/2015/10/bioc-3.2-news-of-my-bioc-packages/</link>
      <pubDate>Thu, 15 Oct 2015 16:13:57 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/10/bioc-3.2-news-of-my-bioc-packages/</guid>
      <description>

&lt;p&gt;In BioC 3.2 release, all my packages including
&lt;a href=&#34;http://www.bioconductor.org/packages/GOSemSim&#34;&gt;GOSemSim&lt;/a&gt;,
&lt;a href=&#34;http://www.bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt;,
&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/DOSE.html&#34;&gt;DOSE&lt;/a&gt;,
&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/ReactomePA.html&#34;&gt;ReactomePA&lt;/a&gt;,
and &lt;a href=&#34;http://www.bioconductor.org/packages/ChIPseeker&#34;&gt;ChIPseeker&lt;/a&gt; switch
from Sweave to R Markdown for package vignettes.&lt;/p&gt;

&lt;h3 id=&#34;gosemsim:a6fd95faa6e3c06222501cbf40403a13&#34;&gt;GOSemSim&lt;/h3&gt;

&lt;p&gt;To make it consistent between
&lt;a href=&#34;http://www.bioconductor.org/packages/GOSemSim&#34;&gt;GOSemSim&lt;/a&gt; and
&lt;a href=&#34;http://www.bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt;,
&amp;lsquo;worm&amp;rsquo; was deprecated and instead we should use &amp;lsquo;celegans&amp;rsquo;. As usual,
information content data was updated.&lt;/p&gt;

&lt;h3 id=&#34;clusterprofiler:a6fd95faa6e3c06222501cbf40403a13&#34;&gt;clusterProfiler&lt;/h3&gt;

&lt;p&gt;Enrichment results may contains terms that are very general (less
informative) and we do not want to use them. In this release, we provide
&lt;em&gt;dropGO&lt;/em&gt; function that can be used to drop selected GO terms or specific
level of GO terms. It can be applied to output from both &lt;em&gt;enrichGO&lt;/em&gt; and
&lt;em&gt;compareCluster&lt;/em&gt;. This is a feature request from
&lt;a href=&#34;https://github.com/GuangchuangYu/clusterProfiler/issues/26&#34;&gt;@ahorvath&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another feature request is to visualize GO enrichment result with GO
topology. I implement &lt;em&gt;plotGOgraph&lt;/em&gt; function by extending
&lt;a href=&#34;http://www.bioconductor.org/packages/topGO&#34;&gt;topGO&lt;/a&gt; to support output of
both &lt;em&gt;enrichGO&lt;/em&gt; or &lt;em&gt;gseGO&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&#34;http://ygc.name/2015/06/23/dotplot-for-enrichment-result/&#34;&gt;dotplot&lt;/a&gt;&lt;/em&gt;
is another feature request and was implemented in
&lt;a href=&#34;http://www.bioconductor.org/packages/DOSE&#34;&gt;DOSE&lt;/a&gt; as a general function
for visualize enrichment result.
&lt;a href=&#34;http://www.bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt;
import this function.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;merge_result&lt;/em&gt; function was implemented for merging enrichment results
and then the results can be visualized simultaneously for comparison.
This function was developed for comparing &lt;a href=&#34;http://ygc.name/2015/08/13/functional-enrichment-for-gtex-paper/&#34;&gt;functional enrichment of GTEx
paper&lt;/a&gt;.
An example of comparing results from
&lt;a href=&#34;http://www.bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt;
and DAVID can be found in
&lt;a href=&#34;https://github.com/GuangchuangYu/enrichment4GTEx_clusterProfiler/blob/master/GO_BP.md&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A section &amp;lsquo;Functional analysis of NGS data&amp;rsquo; was added in the vignette.
&lt;a href=&#34;http://ygc.name/2015/05/11/use-clusterprofiler-as-an-universal-enrichment-analysis-tool&#34;&gt;The blog
post&lt;/a&gt;
illustrated using &lt;em&gt;enricher&lt;/em&gt; and &lt;em&gt;GSEA&lt;/em&gt; function to analyze user defined
annotation.&lt;/p&gt;

&lt;h3 id=&#34;dose:a6fd95faa6e3c06222501cbf40403a13&#34;&gt;DOSE&lt;/h3&gt;

&lt;p&gt;Network of Cancer Genes data was updated to version 4.9.0, contributed
by &lt;a href=&#34;https://github.com/GuangchuangYu/DOSE/pull/8&#34;&gt;@dalloliogm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;dotplot&lt;/em&gt; function was implemented for visualizing enrichment result and
was imported to
&lt;a href=&#34;http://www.bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt;
and &lt;a href=&#34;http://www.bioconductor.org/packages/ReactomePA&#34;&gt;ReactomePA&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With new release of ChIPseeker, DOSE can be applied to &lt;a href=&#34;http://ygc.name/2015/08/21/functional-enrichment-analysis-with-ngs-data/&#34;&gt;NGS
data&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Several bugs were removed and small improvement were incorporated.&lt;/p&gt;

&lt;h3 id=&#34;reactomepa:a6fd95faa6e3c06222501cbf40403a13&#34;&gt;ReactomePA&lt;/h3&gt;

&lt;p&gt;Now fly (Drosophila melanogaster) is supported.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;viewPathway&lt;/em&gt; supports other organisms, which was contributed by
&lt;a href=&#34;https://github.com/GuangchuangYu/ReactomePA/pull/1&#34;&gt;@vladpetyuk&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Import &lt;em&gt;dotplot&lt;/em&gt; from DOSE and add &amp;lsquo;Pathway analysis of NGS data&amp;rsquo;
section in vignette.&lt;/p&gt;

&lt;h3 id=&#34;chipseeker:a6fd95faa6e3c06222501cbf40403a13&#34;&gt;ChIPseeker&lt;/h3&gt;

&lt;p&gt;Implement
&lt;em&gt;&lt;a href=&#34;http://ygc.name/2015/08/21/functional-enrichment-analysis-with-ngs-data/&#34;&gt;seq2gene&lt;/a&gt;&lt;/em&gt;
function for linking genomic regions to genes by many-to-many mapping.
With this function, enrichment analysis of
&lt;a href=&#34;http://www.bioconductor.org/packages/clusterProfiler&#34;&gt;clusterProfiler&lt;/a&gt;,
&lt;a href=&#34;http://www.bioconductor.org/packages/DOSE&#34;&gt;DOSE&lt;/a&gt; and
&lt;a href=&#34;http://www.bioconductor.org/packages/ReactomePA&#34;&gt;ReactomePA&lt;/a&gt; can be
applied to NGS data.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ygc.name/2015/07/28/upsetplot-in-chipseeker/&#34;&gt;upsetplot&lt;/a&gt;
function is implemented for viewing overlap of ChIP annotation.&lt;/p&gt;

&lt;p&gt;Better implementation of internal function &lt;em&gt;getFirstHitIndex&lt;/em&gt;
contributed by
&lt;a href=&#34;https://support.bioconductor.org/p/70432/#70545&#34;&gt;@hpages&lt;/a&gt;. Now
annotating a BED file of size about 1GB only take several minutes.&lt;/p&gt;

&lt;p&gt;An issue of BED file that using &lt;a href=&#34;http://ygc.name/2015/08/07/parsing-bed-coordinates/&#34;&gt;the 0-based coordinate
system&lt;/a&gt; was fixed.&lt;/p&gt;

&lt;p&gt;GEO data information was updated, now ChIPseeker contains more than
18,000 BED file information. User can compare their own data with those
deposited in GEO to &lt;a href=&#34;http://ygc.name/2015/10/01/chipseq-data-mining-with-chipseeker/&#34;&gt;identify co-occurrence binding
proteins&lt;/a&gt;
that maybe cooperated with the one we are interested in.&lt;/p&gt;

&lt;h3 id=&#34;ggtree:a6fd95faa6e3c06222501cbf40403a13&#34;&gt;ggtree&lt;/h3&gt;

&lt;p&gt;My major focus in the past half year is on developing
&lt;a href=&#34;http://www.bioconductor.org/packages/ggtree&#34;&gt;ggtree&lt;/a&gt;.
&lt;a href=&#34;http://www.bioconductor.org/packages/ggtree&#34;&gt;ggtree&lt;/a&gt; has a lot of
changes. Some of the updates can be found in &lt;a href=&#34;http://bioconductor.org/help/newsletters/2015_October/&#34;&gt;Bioconductor
Newsletter&lt;/a&gt;
(Oct. 2015). In addition, I would like to emphasize the
&lt;em&gt;&lt;a href=&#34;http://ygc.name/2015/08/31/subview/&#34;&gt;subview&lt;/a&gt;&lt;/em&gt; function which works
fine with all the ggplot objects and was applied to &lt;a href=&#34;http://stackoverflow.com/questions/10368180/plotting-pie-graphs-on-map-in-ggplot/32380396#32380396&#34;&gt;plot pie graph on a
map&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.bioconductor.org/packages/ggtree&#34;&gt;ggtree&lt;/a&gt; can be fun by
using &lt;a href=&#34;http://ygc.name/2015/06/12/ggtree-with-funny-fonts/&#34;&gt;symbolic
fonts&lt;/a&gt;, &lt;a href=&#34;http://ygc.name/2015/09/08/comic-phylogenetic-tree-with-ggtree-and-comicr/&#34;&gt;cartoonize
the
tree&lt;/a&gt;
or annotating the tree &lt;a href=&#34;http://ygc.name/2015/11/09/phylomoji-with-ggtree/&#34;&gt;with
emoji&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are many updates that based on the github version of ggplot2.
Since the new features of ggplot2 are currently not available in CRAN. I
do not commit the change to Bioconductor and will introduce these new
feature to ggtree user when new version of ggplot2 is available in CRAN.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ChIPseq data mining with ChIPseeker</title>
      <link>http://guangchuangyu.github.io/2015/10/chipseq-data-mining-with-chipseeker/</link>
      <pubDate>Thu, 01 Oct 2015 09:08:06 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/10/chipseq-data-mining-with-chipseeker/</guid>
      <description>

&lt;p&gt;ChIP-seq is rapidly becoming a common technique and there are a large
number of dataset available in the public domain. Results from
individual experiments provide a limited understanding of chromatin
interactions, as there is many factors cooperate to regulate
transcription. Unlike other tools that designed for single dataset,
&lt;a href=&#34;http://www.bioconductor.org/packages/ChIPseeker&#34;&gt;ChIPseeker&lt;/a&gt; is
designed for comparing profiles of ChIP-seq datasets at different
levels.&lt;/p&gt;

&lt;p&gt;We provide functions to compare profiles of peaks binding to TSS
regions, annotation, and enriched functional profiles. More importantly,
ChIPseeker incorporates statistical testing of co-occurrence of
different ChIP-seq datasets and can be used to identify co-factors.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; library(ChIPseeker)
&amp;gt; ff=getSampleFiles()
&amp;gt; x = enrichPeakOverlap(ff[[5]], unlist(ff[1:4]), nShuffle=10000, pAdjustMethod=&amp;quot;BH&amp;quot;, chainFile=NULL)
&amp;gt;&amp;gt; permutation test of peak overlap...       2015-09-24 14:23:43
  |======================================================================| 100%
&amp;gt; x
                                                      qSample
ARmo_0M    GSM1295077_CBX7_BF_ChipSeq_mergedReps_peaks.bed.gz
ARmo_1nM   GSM1295077_CBX7_BF_ChipSeq_mergedReps_peaks.bed.gz
ARmo_100nM GSM1295077_CBX7_BF_ChipSeq_mergedReps_peaks.bed.gz
CBX6_BF    GSM1295077_CBX7_BF_ChipSeq_mergedReps_peaks.bed.gz
                                                      tSample qLen tLen N_OL
ARmo_0M                       GSM1174480_ARmo_0M_peaks.bed.gz 1663  812    0
ARmo_1nM                     GSM1174481_ARmo_1nM_peaks.bed.gz 1663 2296    8
ARmo_100nM                 GSM1174482_ARmo_100nM_peaks.bed.gz 1663 1359    3
CBX6_BF    GSM1295076_CBX6_BF_ChipSeq_mergedReps_peaks.bed.gz 1663 1331  968
               pvalue   p.adjust
ARmo_0M    0.88901110 0.88901110
ARmo_1nM   0.15118488 0.30236976
ARmo_100nM 0.37296270 0.49728360
CBX6_BF    0.00009999 0.00039996
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/Bioconductor/ChIPseeker/Screenshot%202015-09-24%2015.05.08.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The enrichment analysis of peak overlap is based on permutation test.
&lt;em&gt;nShuffle&lt;/em&gt; of random ChIP data were generated to estimate the background
null distribution of the overlap and p-value is then calculated by the
probability of observing more extreme overlap. Multiple comparison
correction is also incorporated.&lt;/p&gt;

&lt;p&gt;The most exciting feature in ChIPseeker is that it collected more than
18,000 bed file information from GEO database and make this co-factor
inference available to the community. With these datasets, we can
compare our own dataset to those deposited in GEO to identify
co-occurrence binding proteins that maybe cooperated with the one we are
interested in. Hypothesis can be generated by this inference and serve
as a starting point for further study.&lt;/p&gt;

&lt;h3 id=&#34;reference:b5b0ae7141a3dcd30d9a3b4fda249992&#34;&gt;Reference&lt;/h3&gt;

&lt;p&gt;G Yu, LG Wang, QY He. &lt;a href=&#34;http://bioinformatics.oxfordjournals.org/cgi/content/abstract/btv145&#34;&gt;ChIPseeker: an R/Bioconductor package for ChIP
peak annotation, comparison and
visualization&lt;/a&gt;.
Bioinformatics. 2015, 31(14):2382-2383.
PMID:&lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pubmed/25765347&#34;&gt;25765347&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BMC Favor Plagiarism</title>
      <link>http://guangchuangyu.github.io/2015/06/bmc-favor-plagiarism/</link>
      <pubDate>Mon, 08 Jun 2015 13:22:22 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/06/bmc-favor-plagiarism/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://cran.r-project.org/web/packages/ppiPre/index.html&#34;&gt;ppiPre&lt;/a&gt;抄袭了&lt;a href=&#34;https://github.com/GuangchuangYu/GOSemSim&#34;&gt;GOSemSim&lt;/a&gt;的代码，证据当然非常充分，比对一下代码就知道了，我在&lt;a href=&#34;http://ygc.name/2014/11/23/proper-use-of-gosemsim/&#34;&gt;Proper
use of
GOSemSim&lt;/a&gt;一文中，做出了一些比较，另外也可以参考&lt;a href=&#34;https://github.com/cran/ppiPre/commit/c267700ca09a599dab77326959a0aa6a2980ceed&#34;&gt;github&lt;/a&gt;页面，github记录了ppiPre被暴光抄袭之后所做的修改。
从我给BMC Systems
Biology的编辑反馈这件事开始，在这铁板钉钉的事实面前，编辑拖了整整一年，而这一年时间过去了，ppiPre仍没有被编辑部受理。从最早反应这件事情，编辑信誓旦旦说他们很重视这种事情，到后面对我的邮件视而不见，我愿意相信编辑部处理这些事情，需要时间，他们有自己的规则，但一年的时间，不回邮件，冷处理以淡化此事，这绝对不是应该有的规则。
在编辑一直无视我的情况下，我写出了&lt;a href=&#34;http://ygc.name/2014/11/23/proper-use-of-gosemsim/&#34;&gt;Proper use of
GOSemSim&lt;/a&gt;一文，列举了一些一模一样的代码，并告知CRAN，当ppiPre被CRAN移除时，我写信给编辑，这时候，编辑告诉我说他们准备要去联系作者了，这时候已经过去半年了，是的！你没有看错，半年过去了，编辑说他们还没去联系作者！我是不相信的。必然是联系了之后，有某些不为人知的原因，所以编辑态度反常，对抄袭这种打鸡血的事情，不断在打太极。
再过二个月，ppiPre的作者&lt;a href=&#34;http://web.xidian.edu.cn/dengyue/&#34;&gt;邓岳&lt;/a&gt;给我写了信：
&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/plagiarism/Screenshot%202015-06-08%2020.19.23.png&#34; alt=&#34;&#34; /&gt;
按照我在&lt;a href=&#34;http://ygc.name/2014/11/23/proper-use-of-gosemsim/&#34;&gt;Proper use of
GOSemSim&lt;/a&gt;中说的:&amp;ldquo;你们可以抄我的代码，但要注明出处，引用我的文章&amp;rdquo;，进行了修改。我给他回信就是我可以接受这样的版本。事实上如果他们基于现在的版本发表文章，我没有任何问题。但现在的版本是迫于抄袭暴光所做出的修改，而发表文章时，抄代码不注出处，更改函数名，刻意回避我的文章，而且对抄袭部分在他们的文章中宣称是自己的实现，这是恶意抄袭。
回信说现在的版本OK之后，我觉得这会给出错误信息，于是我再写一封信，强调抄袭的严重性：
&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/plagiarism/Screenshot%202015-06-08%2020.18.52.png&#34; alt=&#34;&#34; /&gt;
从他的回信中，我感觉得出，态度并不好。他觉得只是对open
source的版权不够重视而已，这不单单是版权的问题，还是出版伦理（publication
ethics）的问题，再怎么对版权无知，你不能发表文章说别人做的东西是你做的。
事实上邓岳并没有意识到问题，2015年继续发表抄袭的R包&lt;a href=&#34;http://www.ncbi.nlm.nih.gov/pmc/articles/PMC4321842/&#34;&gt;HPOSim&lt;/a&gt;，这个包的代码抄袭了哈医大李霞实验室的&lt;a href=&#34;http://www.biomedcentral.com/1471-2105/12/266&#34;&gt;DOSim&lt;/a&gt;，而DOSim又是抄了&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/GOSim.html&#34;&gt;GOSim&lt;/a&gt;，我手贱对比了一下代码，竟然发现抄袭链条，而且抄袭者都发了文章，但发完文章，相应的包也就被CRAN移除了，要么是不维护，要么是主动要求移除。这个圈子好乱有木有！
我也没必要去跟他掐，而是等待编辑的处理，我期望编辑给他上一课，做科研没有这样的捷径。
最终编辑给出的邮件是：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-style=&amp;quot;word-wrap: break-word; white-space: pre-wrap; white-space: -moz-pre-wrap&amp;quot;&#34;&gt;Dear Guangchuang,

Looking back through my emails, I did receive a response back from the authors previously. They in turn said that the email address I had originally been trying to contact them with earlier last year was no longer in use, so they only received my emails when I found an additional alternative email address for the authors in my more recent emails.

Their explanation for the use of your code was that as the similarity measures were not their main focus of their study they had intended to either implement existing methods themselves or as in the case of GoSemSim, import the packages. However they had some problems with this and instead utilised the source code directly. Their rationale was that as the code was GPL licenced that this was acceptable, without realising that it was also required to cite the original source.

They say they have now created an updated version which they say has the following changes:

(1) ppiPre imports GOSemSim.
(2) ppiPre calls function geneSim() exported by GOSemSim to calculate Wang’s measure, instead of deriving code from GOSemSim directly.
(3) Several internal functions of ppiPre (TCSSGetAncestors, GetOntology, GetGOParents, GetLatestCommonAncestor, TCSSCompute_ICA) are derived from GOSemSim since GOSemSim don’t export them. In source code (.R) and manuals (.RD), acknowledgement has been added including the information of author and publication of GOSemSim.
(4) The author of GOSemSim (Guangchuang Yu) has been added in the ‘Author’ filed as contributor, as required by CRAN Repository Policy.
(5) All the information content data in data directory of ppiPre have been removed. ppiPre directly obtained data from GOSemSim.

This version has been available in SourceForge (https://sourceforge.net/p/ppipre/). And we are submitting ppiPre to CRAN. We will notify you after ppiPre is available on CRAN.

They also apologise for failing to cite you correctly and have asked if they may submit a correction to their article to rectify this. This would be within our policy if this sounds acceptable to you. Please let me know if you would need more details or if you need to get in touch with the authors
 
Best wishes,
Tim
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列举的几点跟邓岳给我的中文信一样，但多了两点： 1.
强调这是由于对版权的无知。 2. 抄袭的，不是文章的重点。
1是给自己找个借口，犯错是因为无知。2则淡化的抄袭的严重性。完全没有认错的意思。我们完全可以想像，所谓的“they
may submit a correction to their article to rectify
this”是什么样子的。所以我不能接受。
如果是真心认错，不遮遮掩掩，大胆地接受所犯的错误，那么发表声明，对此事进行道歉，我可以接受。
但在作者没有认错的情况下，在编辑最后明显倾向性的言语中，我无法接受，无知是对版权，你做科研，能发paper说别人的东西是自己的？总不能这样无知吧？代码2/3是抄GOSemSim的，并且文章中大篇幅在说实现了这些算法，还能睁眼说瞎话，说不是重点，就差说出来not
a big deal了。
我坚决不能同意，于是回信给了编辑，然而编辑又再次遁了！一年以来，不是我不断给编辑压力，编辑根本就无视我，而最后到了该给个说法的时候了，又继续玩消失。要说没有内幕，有人相信么？我反正是不信。
对于抄袭，这是铁的事实，开源和版权，不是重点，这本身是严重的出版伦理问题。而这一整年编辑的表现，又使这一事情，呈现出更严重的一面，编辑一直在袒护抄袭者，这是非常反常的，编辑对这种事情，一直应该是打鸡血的，他们善于站在道德的制高点，对科研工作者指手画脚，而BMC也一直以此宣传他们，像今年撤了四十多篇中国的文章，说是manipulating
review process，这种事情大家也是非常支持的，再怎么想文章，不能走偏门。
正如&lt;a href=&#34;http://www.stat.columbia.edu/~gelman/&#34;&gt;Andrew
Gelman&lt;/a&gt;在评论ppiPre抄袭这件事时说的：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-style=&amp;quot;word-wrap: break-word; white-space: pre-wrap; white-space: -moz-pre-wrap&amp;quot;&#34;&gt; we’re talking about people who already are skating on the ethical edge (as scientists, we should always respond to serious criticism; if we don’t, that’s bordering on ethical violation already)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;做为科研工作者，我们已经在道德的边缘上如履薄冰，对严重批评不做出回应，则已然是违反道德。
BMC现在就是在做违反道德的事情，非常反常！这可能是比&amp;rsquo;manipulating review
process&amp;rsquo; 更严重的mainipulating editorial
board。我知道掐这事于我没有任何好处，还会得罪很多人，但科研的正义必须维护，抄袭的行为必须打击，编辑部腐败更不能容忍！这件事情必须得有个说法。
ppiPre是发表在&lt;a href=&#34;http://www.aporc.org/ISB/2012/&#34;&gt;ISB
2012&lt;/a&gt;会议上的，这个会议明显是和BMC
Systems Biology合作的，会议文章发表在BMC Systems
Biology专刊上，而ppiPre的通讯作者&lt;a href=&#34;http://web.xidian.edu.cn/lgao/&#34;&gt;高琳&lt;/a&gt;是会议的Program
Chairs，而某些BMC Systems Biology的编委是General
Chairs，通讯作者和BMC编委是认识的，于是我空穴来风地猜测了一下，某些编委不顾道德伦理在袒护ppiPre的抄袭行为。事情真相到底是什么，期待BMC最终能给个说法。如果抄袭都能不撤稿，如果编委都能被操控，我们有什么理由相信科研！还不如趁早转工业界去赚点养家糊口的钱。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BMC favors source code plagiarism</title>
      <link>http://guangchuangyu.github.io/2015/05/bmc-favors-source-code-plagiarism/</link>
      <pubDate>Wed, 27 May 2015 13:38:44 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/05/bmc-favors-source-code-plagiarism/</guid>
      <description>&lt;p&gt;I found source code plagiarism a year ago and reported this case to &lt;a href=&#34;http://www.biomedcentral.com/bmcsystbiol&#34;&gt;BMC
Systems Biology&lt;/a&gt;:
&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/0f22f6ad87427adb59941160130b016ee1e41004/2015/plagiarism/Screenshot%202015-05-27%2019.56.58.png&#34; alt=&#34;&#34; /&gt;
I listed source code of many functions that are exactly copied from
&lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/GOSemSim.html&#34;&gt;GOSemSim&lt;/a&gt;
with only function name changed in my email. The detail of source code
plagiarism can also be found at &lt;strong&gt;&lt;a href=&#34;http://ygc.name/2014/11/23/proper-use-of-gosemsim/&#34;&gt;Proper use of
GOSemSim&lt;/a&gt;&lt;/strong&gt;. I got
reply from the Editor 3 days after (see
&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/0f22f6ad87427adb59941160130b016ee1e41004/2015/plagiarism/Screenshot%202015-05-27%2019.58.16.png&#34;&gt;screenshot&lt;/a&gt;).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;MS: 1069569029107167
Research
ppiPre: predicting protein-protein interactions by combining heterogeneous features
BMC Systems Biology 2013, 7:S8&lt;/p&gt;

&lt;p&gt;Dear Dr Yu,&lt;/p&gt;

&lt;p&gt;Thank you for your message and bringing this to our attention. Firstly I would like to assure you that we do take cases of plagiarism very seriously. We are members of the Committee on Publication Ethics (&lt;a href=&#34;http://publicationethics.org&#34;&gt;http://publicationethics.org&lt;/a&gt;) follow their guidelines for circumstances such as this.&lt;/p&gt;

&lt;p&gt;As a first step we will be investigating the overlap between this publication in BMC Systems Biology and your previously published work, to establish the extent of the duplication.&lt;/p&gt;

&lt;p&gt;Could I just check, have you compared all the code in the ppiPRE article for similarity with your own code? That is, is there any possibility that more of your code has been duplicated without attribution? We will of course have to examine the code for unattributed use of other authors code in addition to your own&lt;/p&gt;

&lt;p&gt;Please do let us know if there are more relevant details you are aware of. We will be in contact again in due course as our investigations proceed, but do not hesitate to contact me in the meantime if you would like an update&lt;/p&gt;

&lt;p&gt;Best wishes,
Tim&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The editor assured me that they &amp;lsquo;&lt;strong&gt;do take cases of plagiarism very
seriously&lt;/strong&gt;&amp;rsquo; and will investigate the overlap. I was waiting for their
update. But 5 months passed, I never receive any reply from them even I
sent several emails to ask for updates. I have no idea how long their
&amp;lsquo;&lt;strong&gt;due course&lt;/strong&gt;&amp;rsquo; is. As I did not receive any reply, I wrote a blog post
(see &lt;a href=&#34;http://ygc.name/2014/11/23/proper-use-of-gosemsim/&#34;&gt;Proper use of
GOSemSim&lt;/a&gt;) to bring
this to the R community and CRAN did remove the ppiPre package at that
time. I told the Editor that this package had been removed from CRAN and
again asked for update. This time, he did reply me (see
&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/plagiarism/Screenshot%202015-05-27%2020.11.54.png&#34;&gt;screenshot&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;MS: 1069569029107167
Research
ppiPre: predicting protein-protein interactions by combining heterogeneous features
BMC Systems Biology 2013, 7:S8&lt;/p&gt;

&lt;p&gt;Dear Guangchuang,&lt;/p&gt;

&lt;p&gt;Thank you for your message and my apologies for the delay in this investigation. We had been trying to identify if any other code had also been plagiarised in the publication, although we did not find any evidence of this. Thank you also for drawing our attention to the removal of ppiPre from CRAN. We will be in touch with the article authors and will let you know when there is a further update.&lt;/p&gt;

&lt;p&gt;Regards,
Tim&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As we can find in the editor&amp;rsquo;s email, &amp;lsquo;&lt;strong&gt;We will be in touch with the
article authors&lt;/strong&gt;&amp;rsquo;, they never contact the authors after 5 months passed
from my report. In the following 2 months, I never receive any reply
again. I was angry and sent an email to several Editors of BMC to
complain that they are ruinning the reputation of BMC. Then again as
expected, I got email (see
&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/plagiarism/Screenshot%202015-05-27%2020.33.30.png&#34;&gt;screenshot&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dear Guangchuang,&lt;/p&gt;

&lt;p&gt;We are continuing to pursue this case. As you will understand, as well as the clear evidence of plagiarism of your code, we are concerned about possible unacknowledged reuse of other code as well. We have been trying to contact the authors for a full explanation, as this will affect how we can address the issue. Until very recently we had not been successful in contacting them, although they have very recently got back to us  and have said that they are considering their response, so we expect an update soon. From our perspective it is highly preferable for the authors to come clean about the issues and for any correction or retraction notice to come from them rather than from the editors, and for this reason it is often a drawn out process.&lt;/p&gt;

&lt;p&gt;Thank you for your patience, and I can again assure you that this will be addressed formally in due course.&lt;/p&gt;

&lt;p&gt;Yours sincerely,
Tim&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am very happy to see this as the editor told me they have contacted
the authors and will have an update soon. I wait another 3 months
without any update as usual. I asked for update again and this time they
did give me an update (see
&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/plagiarism/Screenshot%202015-04-23%2021.31.55.png&#34;&gt;screenshot&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dear Guangchuang,&lt;/p&gt;

&lt;p&gt;Looking back through my emails, I did receive a response back from the authors previously. They in turn said that the email address I had originally been trying to contact them with earlier last year was no longer in use, so they only received my emails when I found an additional alternative email address for the authors in my more recent emails.&lt;/p&gt;

&lt;p&gt;Their explanation for the use of your code was that as the similarity measures were not their main focus of their study they had intended to either implement existing methods themselves or as in the case of GoSemSim, import the packages. However they had some problems with this and instead utilised the source code directly. Their rationale was that as the code was GPL licenced that this was acceptable, without realising that it was also required to cite the original source.&lt;/p&gt;

&lt;p&gt;They say they have now created an updated version which they say has the following changes:&lt;/p&gt;

&lt;p&gt;(1) ppiPre imports GOSemSim.
(2) ppiPre calls function geneSim() exported by GOSemSim to calculate Wang’s measure, instead of deriving code from GOSemSim directly.
(3) Several internal functions of ppiPre (TCSSGetAncestors, GetOntology, GetGOParents, GetLatestCommonAncestor, TCSSCompute_ICA) are derived from GOSemSim since GOSemSim don’t export them. In source code (.R) and manuals (.RD), acknowledgement has been added including the information of author and publication of GOSemSim.
(4) The author of GOSemSim (Guangchuang Yu) has been added in the ‘Author’ filed as contributor, as required by CRAN Repository Policy.
(5) All the information content data in \data directory of ppiPre have been removed. ppiPre directly obtained data from GOSemSim.&lt;/p&gt;

&lt;p&gt;This version has been available in SourceForge (&lt;a href=&#34;https://sourceforge.net/p/ppipre/&#34;&gt;https://sourceforge.net/p/ppipre/&lt;/a&gt;). And we are submitting ppiPre to CRAN. We will notify you after ppiPre is available on CRAN.&lt;/p&gt;

&lt;p&gt;They also apologise for failing to cite you correctly and have asked if they may submit a correction to their article to rectify this. This would be within our policy if this sounds acceptable to you. Please let me know if you would need more details or if you need to get in touch with the authors&lt;/p&gt;

&lt;p&gt;Best wishes,
Tim&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After the changes, ppiPre is back to CRAN. Now in CRAN, what we can find
is that ppiPre use source code from GOSemSim properly with
acknowledgement. They removed all previous source tarball so that their
source code plagiarism was gone. Fortunately, github recorded all the
&lt;a href=&#34;https://github.com/cran/ppiPre/commit/c267700ca09a599dab77326959a0aa6a2980ceed&#34;&gt;changes&lt;/a&gt;.
The editor delay the processing to give the authors enough time to
remove their bad records. I think CRAN shouldn&amp;rsquo;t accept re-submitted
package if it was removed for plagiarism issue. In the email, the editor
not only conveyed explanation from the author, but also have expressed
their opinion: &amp;lsquo;&lt;strong&gt;They also apologise for failing to cite you correctly
and have asked if they may submit a correction to their article to
rectify this. This would be within our policy if this sounds acceptable
to you&lt;/strong&gt;&amp;rsquo;. This is why I think BMC do favor source code plagiarism.
Their judgement/opinion is not fair! I can&amp;rsquo;t accept their explanation
and replied to the editor (see
&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/plagiarism/Screenshot%202015-04-23%2021.45.33.png&#34;&gt;screenshot&lt;/a&gt;):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dear Prof. Sands,&lt;/p&gt;

&lt;p&gt;Thanks for your email. That makes it more clear.&lt;/p&gt;

&lt;p&gt;I can&amp;rsquo;t accept their explanation.&lt;/p&gt;

&lt;p&gt;The ppiPre is a die package, they didn&amp;rsquo;t update any source code or IC data after publication, with the fact that annotation packages for calculating IC data have updated several times. The recent changes were forced by my report of plagiarism.&lt;/p&gt;

&lt;p&gt;The recent update follows the requirement of GPL license which requires the derivative work also GPL licensed and acknowledge original works. That&amp;rsquo;s good, but remember it was forced to happen after my report of source code plagiarism.&lt;/p&gt;

&lt;p&gt;In the version they published the paper, it is indeed source codes copied without any acknowledgement and the proportion is very large (about &lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt; of ppiPre was copied from GOSemSim).&lt;/p&gt;

&lt;p&gt;In their explanation, the author claimed that similarity measures were not their main focus. Can I ask what&amp;rsquo;s their main focus? SVM for protein-pretein interaction prediction as indicated in the title of the paper and in the package name? The SVM in that package is less than 80 lines, &lt;a href=&#34;https://github.com/cran/ppiPre/blob/master/R/SVMPredict.r&#34;&gt;https://github.com/cran/ppiPre/blob/master/R/SVMPredict.r&lt;/a&gt; with more than half in calling similarity measures, and several empty lines, paramter checking and preparing input and output. They did nothing in svm; they just call e1071::svm in line 28 and and e1071::predict in line 16 with default parameters (users even don&amp;rsquo;t have chance to change kernel function in their package). If that&amp;rsquo;s their main focus, what&amp;rsquo;s their contribution of their paper? In the Method session, their only use a small paragraph, Prediction framework, that only mention they used svm for prediction but with many paragraphs emphasizing they have implemented many GO semantic similarity measures. They call svm implemented in e1071 package to train features calculated by source codes from GOSemSim. How do they explain this?  I do have no idea of their so call main focus.&lt;/p&gt;

&lt;p&gt;They also mentioned that they had problems in importing GOSemSim. This is also un-acceptable. As they copied most of the functions without any change, it is easy to import these functions using GOSemSim:::un-exported_function if the function is not exported. If they don&amp;rsquo;t know this feature and did not google search how to do it. They should contact me for help or ask for my permission of re-using my codes. But they didn&amp;rsquo;t. They may believe they can use my source code freely as it is GPL licensed, they should know that open source license also have requirement of acknowledgement. Even that&amp;rsquo;s due to their ignorance, why they only change the function names to pretend that&amp;rsquo;s their own functions? If these are not their main focus, why more than half of the text in the paper explaining the calculation of these algorithms and claim they were implemented in their package?&lt;/p&gt;

&lt;p&gt;If they are not intended to do this, they will have acknowledgement in their source code, they will have citation in their paper and they will not just change function name that was copied without other changes. They intended to do so to cheat editor, reviewers and readers.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;(2) ppiPre calls function geneSim() exported by GOSemSim to calculate Wang’s measure, instead of deriving code from GOSemSim directly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Besides, most of the source code is not &amp;lsquo;derived&amp;rsquo; but copied from GOSemSim with only function name changed which can still be detected in the updated version, &lt;a href=&#34;https://github.com/cran/ppiPre/blob/master/R/GOKEGGSims.r&#34;&gt;https://github.com/cran/ppiPre/blob/master/R/GOKEGGSims.r&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Best Regards,
Guangchuang&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;AND again, the editor just ignore my email!&lt;/strong&gt; 1 year passed and the
case is very clear that they copied my source code and intended to
pretend that&amp;rsquo;s their original work and use it to publish a paper. That&amp;rsquo;s
definitely plagiarism. The editor replied me very quickly at the
beginning and assured me that BMC do take cases like this seriously. I
don&amp;rsquo;t know what happened after they contacted the authors. The editor
always ignore my email except I put some pressure to them, they delay
the process and try to persuade me that this is due to the author&amp;rsquo;s
ignorance of open source license and an apology from the author is
enough to solve this issue. If you see this post, you are welcome to
comment and please help share it to social media. This will helps to
give BMC some pressure and I will contact COPE if they won&amp;rsquo;t addressing
this.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>an example of drawing beast tree using ggtree</title>
      <link>http://guangchuangyu.github.io/2015/04/an-example-of-drawing-beast-tree-using-ggtree/</link>
      <pubDate>Wed, 01 Apr 2015 01:50:04 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2015/04/an-example-of-drawing-beast-tree-using-ggtree/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://beast.bio.ed.ac.uk/figtree&#34;&gt;FigTree&lt;/a&gt; is designed for viewing
beast output as demonstrated by their example data:
&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/Screenshot%202015-03-10%2018.15.57.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;BEAST output is well supported by
&lt;a href=&#34;https://github.com/GuangchuangYu/ggtree&#34;&gt;ggtree&lt;/a&gt; and it&amp;rsquo;s easy to
reproduce such a tree view.
&lt;a href=&#34;https://github.com/GuangchuangYu/ggtree&#34;&gt;ggtree&lt;/a&gt; supports parsing beast
output by read.beast function. We can visualize the tree directly by
using ggtree function. Since this is a time scale tree, we can set the
parameter &lt;strong&gt;&lt;em&gt;mrsd&lt;/em&gt;&lt;/strong&gt; to most recent sampling date.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;require(ggplot2)
require(ggtree)
x &amp;lt;- read.beast(&amp;quot;/Applications/FigTree/influenza.tree&amp;quot;)
cols &amp;lt;- scale_color(x, by=&amp;quot;height&amp;quot;)
ggtree(x, right=TRUE, mrsd=&amp;quot;2005-04-02&amp;quot;, color=cols) + theme_tree2() +
    geom_text(aes(x=max(x), label=label), size=1, color=cols, hjust=-.3) +
        scale_x_continuous(breaks=c(1992, 1995, 1997, 2000, 2002, 2005), minor_breaks=seq(1992, 2005, 1)) +
            geom_segment(aes(xend=max(x)+.20, yend=y), linetype=&amp;quot;dotted&amp;quot;, size=.1, color=cols) +
                theme(panel.grid.major   = element_line(color=&amp;quot;black&amp;quot;, size=.2),
                      panel.grid.minor   = element_line(color=&amp;quot;grey&amp;quot;, size=.2),
                      panel.grid.major.y = element_blank(),
                      panel.grid.minor.y = element_blank()) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2015/Screenshot%202015-03-10%2018.16.14.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>screenshot</title>
      <link>http://guangchuangyu.github.io/2007/06/screenshot/</link>
      <pubDate>Sat, 16 Jun 2007 00:18:00 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2007/06/screenshot/</guid>
      <description>

&lt;h2 id=&#34;os-9-2:ba11a7898e0e392a3a4c1229a801e666&#34;&gt;OS 9.2&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/os9.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;xfce4-2:ba11a7898e0e392a3a4c1229a801e666&#34;&gt;xfce4.2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2005/01/070329182457.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2005/01/070329182457.png&#34; alt=&#34;070329182457&#34; title=&#34;070329182457&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;xfce4-4:ba11a7898e0e392a3a4c1229a801e666&#34;&gt;xfce4.4&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/xfce44.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/xfce44.png&#34; alt=&#34;xfce44&#34; title=&#34;xfce44&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;qvwm:ba11a7898e0e392a3a4c1229a801e666&#34;&gt;qvwm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2006/06/qvwm.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2006/06/qvwm.png&#34; alt=&#34;qvwm&#34; title=&#34;qvwm&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;icewm:ba11a7898e0e392a3a4c1229a801e666&#34;&gt;icewm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/icewm.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/icewm.png&#34; alt=&#34;icewm&#34; title=&#34;icewm&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;fluxbox:ba11a7898e0e392a3a4c1229a801e666&#34;&gt;fluxbox&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/flubox.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/flubox.png&#34; alt=&#34;flubox&#34; title=&#34;flubox&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;wmaker:ba11a7898e0e392a3a4c1229a801e666&#34;&gt;wmaker&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/wmaker.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/wmaker.png&#34; alt=&#34;wmaker&#34; title=&#34;wmaker&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;越来越喜欢windowmaker&amp;hellip;&amp;hellip;喜欢它最小化到图标&lt;/p&gt;

&lt;h2 id=&#34;wmii:ba11a7898e0e392a3a4c1229a801e666&#34;&gt;wmii&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/wmii.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/06/wmii.png&#34; alt=&#34;wmii&#34; title=&#34;wmii&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最后是wmii，全屏的感觉就是爽。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Newton-Raphson Method估算函数的根</title>
      <link>http://guangchuangyu.github.io/2007/06/newton-raphson-method%E4%BC%B0%E7%AE%97%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%B9/</link>
      <pubDate>Sat, 02 Jun 2007 13:53:00 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2007/06/newton-raphson-method%E4%BC%B0%E7%AE%97%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%B9/</guid>
      <description>

&lt;h2 id=&#34;newton-raphson-method:8c998fd44af3436f18eebfbca2f9fb1d&#34;&gt;Newton-Raphson Method&lt;/h2&gt;

&lt;p&gt;曲线&lt;code&gt;f(x)&lt;/code&gt;有根c,取曲线上一点$(x_1,f(x_1))$, 过此点的切线交x轴$x_2$,过曲线上$(x_2,f(x_2))$的切线交x轴$x_3$，如此反复得到一个序列 $x_1,x_2,\cdot \cdot \cdot,x_n$ 逼近c值.&lt;/p&gt;

&lt;p&gt;过&lt;code&gt;$(x_n,f(x_n))$&lt;/code&gt;的切线方程为 &lt;code&gt;$y-f(x_n) = f&#39;(x_n)\,(x-x_n)$&lt;/code&gt;,假设此方程与x轴的交点为&lt;code&gt;$x_{n+1}$&lt;/code&gt;, 即有: &lt;code&gt;$0 - f(x_n) = f&#39;(x_n)(x_n+1 - x_n)$&lt;/code&gt;， 即&lt;code&gt;$x_{n+1} = x_n - \frac{f(x_n)}{f&#39;(x_n)}$&lt;/code&gt; &lt;code&gt;&amp;lt;Eq. 1&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;下面利用此法来求一个数的开方。 $f(x) = x^2 - a$ 有根$\sqrt{a}$,
由&lt;code&gt;$f&#39;(x_n) = 2x_n$&lt;/code&gt;, 代入式&lt;code&gt;&amp;lt;Eq. 1&amp;gt;&lt;/code&gt;可得$x_{n+1} = (x_n + a/x_n)/2$; 当i -&amp;gt; INF 时, x_i -&amp;gt; $\sqrt{a}$;&lt;/p&gt;

&lt;h2 id=&#34;c-implementation:8c998fd44af3436f18eebfbca2f9fb1d&#34;&gt;C implementation&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include

int main(void){
    int a,error;
    double x0,x1 = 1;
    do {
        printf(&amp;quot;Input a positive integer: &amp;quot;);
        scanf(&amp;quot;%d&amp;quot;,&amp;amp;a);
        if (error = (a &amp;lt;=0))
            printf(&amp;quot;\nERROR: Do it again!\n\n&amp;quot;);
        }
    while (error);

 while (x0 != x1) {
        x0 = x1; /* save the current value of x1 */
        x1 = 0.5 * (x1 + a / x1); /* compute a new value of x1 */
    }
    printf(&amp;quot;%lf\n&amp;quot;,x1);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;r-implemantation:8c998fd44af3436f18eebfbca2f9fb1d&#34;&gt;R implemantation&lt;/h2&gt;

&lt;p&gt;2010-01-11 用R来实现一下，不单是求开方，估算函数的根。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;newton &amp;lt;- function(fun, x0, tol=1e-7, niter=100) { 
    fun.list = as.list(fun)
    var &amp;lt;- names(fun.list[1])
    fun.exp = fun.list[[2]] 
    diff.fun = D(fun.exp, var) 
    df = list(x=0, diff.fun) 
    df = as.function(df) 
    for (i in 1:niter) { 
        x = x0 - fun(x0)/df(x0) 
        if (abs(fun(x)) &amp;lt; tol) 
            return(x) 
        x0 = x      
    } 
    stop(&amp;quot;exceeded allowed number of iterations&amp;quot;) 
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;    &amp;gt; f = function(x) x^2 – 5
    &amp;gt; newton(f, 4)
    [1] 2.236068
    &amp;gt; g = function(x) x^3 – 5
    &amp;gt; newton(g, 4)
    [1] 1.709976
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>我制作的pkgsrc</title>
      <link>http://guangchuangyu.github.io/2007/05/%E6%88%91%E5%88%B6%E4%BD%9C%E7%9A%84pkgsrc/</link>
      <pubDate>Wed, 16 May 2007 04:36:00 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2007/05/%E6%88%91%E5%88%B6%E4%BD%9C%E7%9A%84pkgsrc/</guid>
      <description>

&lt;h2 id=&#34;xlyrics-unix下的歌词秀软件:62e13d3f4ba7021ace12bca4646b8a10&#34;&gt;xlyrics: unix下的歌词秀软件   &lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://files.getdropbox.com/u/774072/software/pkgsrc/xlyrics-0.4.6.tar.bz2&#34;&gt;点此下载&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;eva-kde下的qq客户端:62e13d3f4ba7021ace12bca4646b8a10&#34;&gt;EVA: KDE下的QQ客户端     &lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://files.getdropbox.com/u/774072/software/pkgsrc/eva-20070327.tar.bz2&#34;&gt;点此下载&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#cd /usr/pkgsrc/wip-cn 
#tar xjvf eva.tar.bz2 
#cd eva 
#make install clean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就可以啦。在我的机子（NetBSD 3.0.1 macppc）上测试通过。。
更新到eva-20070327&lt;/p&gt;

&lt;p&gt;参考资料：&lt;a href=&#34;http://www.netbsd.org/docs/pkgsrc/&#34;&gt;http://www.netbsd.org/docs/pkgsrc/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Edit partition table in NetBSD/macppc</title>
      <link>http://guangchuangyu.github.io/2007/05/edit-partition-table-in-netbsd/macppc/</link>
      <pubDate>Mon, 14 May 2007 04:43:00 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2007/05/edit-partition-table-in-netbsd/macppc/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#disklabel wd0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以看到原始分区如下: 7 partitions:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    #        size    offset     fstype [fsize bsize cpg/sgs]
    a:  20971520  25167648     4.2BSD      0     0     0  # (Cyl.  24967*-  45772*)
    b:   1048576  46139168       swap                     # (Cyl.  45772*-  46813*)
    c: 117210240         0     unused      0     0        # (Cyl.      0 - 116279)
    d:  25165824      1824        HFS                     # (Cyl.      1*-  24967*)
    e:  28079456  89130784        HFS                     # (Cyl.  88423*- 116279)
    g:  41943040  47187744     4.2BSD      0     0     0  # (Cyl.  46813*-  88423*)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;a为netbsd的/分区，b为swap分区,c为整个硬盘，d为mac
os的系统盘。e为两系统共享分区(在os9下格式化为fat)，g为netbsd下的/home分区。
原本是两系统，os9.2一直都很少用，所以想删了，腾出空间来放数据。因为wd0d和wd0e不在连续的柱面上，所以无法将它们合并。&lt;/p&gt;

&lt;p&gt;新的分区方案如下：wd0d删了，分成两个，一个15M(需要一个HFS类型的分区来放置&lt;code&gt;ofwboot.xcf&lt;/code&gt;，因为openfirmwire不支持从netbsd分区里加载loader),剩下的作为&lt;code&gt;/home&lt;/code&gt;分区。把原来的&lt;code&gt;/home&lt;/code&gt;分区(&lt;code&gt;wd0g&lt;/code&gt;)和共享数据的分区(&lt;code&gt;wd0e&lt;/code&gt;)合并为一个分区，用于放置数据。
1. 第一步，也是最关键的一步，先备份好数据。&lt;/p&gt;

&lt;p&gt;2. 安装hfsutils。用于操作那个15M的HFS分区（格式化，拷贝文件等工具）。hfsutils是命令行的，xhfs是tk界面的。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    #cd /usr/pkgsrc/sysutils/hfsutils
    #make install
    #cd ../xhfs
    #make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.    分区 pdisk : Apple partition table editor&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;    # pdisk /dev/wd0c
    pdisk /dev/wd0c
    Edit /dev/wd0c -
    Command (? for help): p
    p

    Partition map (with 512 byte blocks) on &#39;/dev/wd0c&#39;
    #:                type name              length   base     ( size )
    1: Apple_partition_map Apple                 63 @ 1
    2:      Apple_Driver43*Macintosh             56 @ 64
    3:      Apple_Driver43*Macintosh             56 @ 120
    4:    Apple_Driver_ATA*Macintosh             56 @ 176
    5:    Apple_Driver_ATA*Macintosh             56 @ 232
    6:      Apple_FWDriver Macintosh            512 @ 288
    7:  Apple_Driver_IOKit Macintosh            512 @ 800
    8:       Apple_Patches Patch Partition      512 @ 1312
    9:           Apple_HFS MacOS           25165824 @ 1824     ( 12.0G)
    10:     Apple_UNIX_SVR2 NetBSD          20971520 @ 25167648 ( 10.0G) S0 RUFS k0  /
    11:     Apple_UNIX_SVR2 swap             1048576 @ 46139168 (512.0M) S1  SFS k0  (swap)
    12:     Apple_UNIX_SVR2 home            41943040 @ 47187744 ( 20.0G) S2  UFS k0  /usr
    13:           Apple_HFS Share           28079456 @ 89130784 ( 13.4G)

    Device block size=512, Number of Blocks=117210240 (55.9G)
    DeviceType=0x0, DeviceId=0x0
    Drivers-
    1:  23 @ 64, type=0x1
    2:  36 @ 120, type=0xffff
    3:  21 @ 176, type=0x701
    4:  34 @ 232, type=0xf8ff

##可以看出9分区即为wd0d,10分区为wd0a,11分区为wd0b,12分区为wd0g,13分区为wd0e。

##删9分区 Command (? for help): d d Partition number: 9 9
##创建15M分区(ofwboot.xcf只有52k,这个分区只须大于100k)

    Command (? for help): C
    C
    First block: 9p
    9p
    Length in blocks: 15m
    15m
    Name of partition: Loader
    Loader
    Type of partition: Apple_HFS
    Apple_HFS

    Command (? for help): C
    C
    First block: 10p
    10p
    Length in blocks: 10p
    10p
    Name of partition: home
    home
    Type of partition: Apple_UNIX_SVR2
    Apple_UNIX_SVR2
    Available partition slices for Apple_UNIX_SVR2:
    a   root partition
    b   swap partition
    c   do not set any bzb bits
    g   user partition
    Other lettered values will create user partitions
    Select a slice for default bzb values: i
    i

#保存退出

    Command (? for help): w
    w
    Writing the map destroys what was there before. Is that okay? [n/y]: y
    y
    Command (? for help): q
    q
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4. 改完分区后重新启动。此时netbsd的/分区已由10分区变为11分区，而硬盘上已经没有&lt;code&gt;ofwboot.xcf&lt;/code&gt;可用来启动系统。这个时候需要用到netbsd的安装盘，开机时按住&lt;code&gt;command+option+o+f&lt;/code&gt;四键。进入&lt;code&gt;openfirmwire&lt;/code&gt;。放入光盘，敲命令：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;boot
cd:,\ofwboot.xcf
hd:11,/netbsd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用光盘上的ofwboot.xcf来引导硬盘上的系统。系统启动到了挂载分区时出错。提示wd0g非法。wd0g为/home分区，并无修改。&lt;/p&gt;

&lt;p&gt;5.    安装光盘启动。在&lt;code&gt;openfirmwire&lt;/code&gt;里敲&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;boot cd:,\ofwboot.xcf netbsd.macppc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;先择运行Shell. 查看分区&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    #disklabel wd0
    7 partitions:
    #        size    offset     fstype [fsize bsize cpg/sgs]
    a:  20971520  25167648     4.2BSD      0     0     0  # (Cyl.  24967*-  45772*)
    b:   1048576  46139168       swap                     # (Cyl.  45772*-  46813*)
    c: 117210240         0     unused      0     0        # (Cyl.      0 - 116279)
    d:     30720      1824        HFS                     # (Cyl.      1*-     32*)
    e:  41943040  47187744     4.2BSD      0     0     0  # (Cyl.  46813*-  88423*)
    f:  28079456  89130784     4.2BSD      0     0     0  # (Cyl.  88423*- 116279)
    g:  25135104     32544     4.2BSD      0     0     0  # (Cyl.     32*-  24967*)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;原来的wd0g变成了wd0e,我也不知道为何。但是问题还是很好解决的。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#mount /dev/wd0a /mnt 
#chroot /mnt 
##修改fstab，改wd0g为wd0e
#vi /etc/fstab 
#reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;6. 返回第4步启动系统。正常启动后。由第5步disklabel中的输出知道，9分区是wd0d.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;## 将其格式化为hfs
#hformat -l loader /dev/wd0d  
$sudo xhfs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行xhfs，把ofwboot.xcf拷入此分区。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2007/05/xhfs.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;7.  改变home分区&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#newfs /dev/wd0g 
#cd /home 
##打包用户数据，并保留原始权限
#tar cjpvf ygc.tar.bz2 ygc     
#mount /dev/wd0g /mnt/share 
#cd /mnt/share 
#tar xjvpf ygc.tar.bz2 
#vim /etc/fstab
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;把wd0e换成wd0g，修改home分区的挂载设备。&lt;/p&gt;

&lt;p&gt;8.  合并wd0e,wd0f 也就是原来的home分区和两系统的共享分区。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    #pdisk /dev/wd0c
    Command (? for help): d
    d
    Partition number: 14
    14
    Command (? for help): d
    d
    Partition number: 13
    13
    Command (? for help): C
    C
    First block: 13p
    13p
    Length in blocks: 13p
    13p
    Name of partition: data
    data
    Type of partition: Apple_UNIX_SVR2
    Apple_UNIX_SVR2
    Available partition slices for Apple_UNIX_SVR2:
    a   root partition
    b   swap partition
    c   do not set any bzb bits
    g   user partition
    Other lettered values will create user partitions
    Select a slice for default bzb values: h
    h

    Command (? for help): w
    w
    Writing the map destroys what was there before. Is that okay? [n/y]: y
    y
    Command (? for help): q
    q
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;9.    重设openfirmwire
修改后保存重启，进入&lt;code&gt;openfirmwire&lt;/code&gt;.使用&lt;code&gt;setenv&lt;/code&gt;命令重设启动的环境变量&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;setenv
boot-device hd:9,\ofwboot.xcf hd:11,/netbsd 
reset-all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新设置后，开机就会自动进入netbsd.&lt;/p&gt;

&lt;p&gt;10.    重启进入系统后&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    #disklabel wd0
    6 partitions:
    #        size    offset     fstype [fsize bsize cpg/sgs]
    a:  20971520  25167648     4.2BSD      0     0     0  # (Cyl.  24967*-  45772*)
    b:   1048576  46139168       swap                     # (Cyl.  45772*-  46813*)
    c: 117210240         0     unused      0     0        # (Cyl.      0 - 116279)
    d:     30720      1824        HFS                     # (Cyl.      1*-     32*)
    e:  70022496  47187744     4.2BSD      0     0     0  # (Cyl.  46813*- 116279)
    g:  25135104     32544     4.2BSD      0     0     0  # (Cyl.     32*-  24967*)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;新建的分区是wd0e&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#newfs /dev/wd0e 
#chmod 777 /dev/wd0e      
##让用户对其有读写执行的权限 
#chmod 777 /data ## 在/etc/fstab里添加：
/dev/wd0e    /data        ffs    rw,softdep    1    2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就按照原来的设想修改了分区。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>pkgsrc tips</title>
      <link>http://guangchuangyu.github.io/2007/05/pkgsrc-tips/</link>
      <pubDate>Mon, 14 May 2007 04:37:00 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2007/05/pkgsrc-tips/</guid>
      <description>

&lt;h2 id=&#34;1-cpuflags:9e5aca7625f61216ac68fadbe5625718&#34;&gt;1.cpuflags&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;devel/cpuflags:Determine compiler flags to best target current cpu&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#cd /usr/pkgsrc/devel/cpuflags 
#make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后在/etc/mk.conf中加入:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;.sinclude &amp;quot;/usr/pkg/share/mk/cpuflags.mk&amp;quot;
.sinclude &amp;quot;/usr/pkg/share/mk/optimize_gcc.mk&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样make时便能够根据cpuflags进行优化编译了。&lt;/p&gt;

&lt;h2 id=&#34;2-pkgclean:9e5aca7625f61216ac68fadbe5625718&#34;&gt;2.pkgclean&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;pkgtools/pkgclean:Quickly clean up all work directories in
pkgsrc&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#cd /usr/pkgsrc/pkgtools/pkgclean 
#make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行pkgclean快速清除所有work&lt;/p&gt;

&lt;h2 id=&#34;3-fetch-cmd:9e5aca7625f61216ac68fadbe5625718&#34;&gt;3.FETCH_CMD&lt;/h2&gt;

&lt;p&gt;在/etc/mk.conf中加入： &lt;code&gt;FETCH_CMD=/usr/pkg/bin/wget -cT 20&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;使用wget来下载源码包。 -c 为断点续传，T 20为20秒没响应则断开重连。&lt;/p&gt;

&lt;h2 id=&#34;4-pkg-tarup:9e5aca7625f61216ac68fadbe5625718&#34;&gt;4.pkg_tarup&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;pkgtools/pkg_tarup:Generates binary package(s) from
installed pkg(s)&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#cd /usr/pkgsrc/pkgtools/pkg_tarup 
#make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行&lt;code&gt;pkg_tarup pkg_name&lt;/code&gt;将生成&lt;code&gt;pkg_name&lt;/code&gt;的相应二进制包。
运行&lt;code&gt;pkg_tarup_all&lt;/code&gt;将把所有通过pkgsrc安装的软件都生成二进制包。&lt;/p&gt;

&lt;p&gt;待续&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>scilab三维平面绘图</title>
      <link>http://guangchuangyu.github.io/2007/05/scilab%E4%B8%89%E7%BB%B4%E5%B9%B3%E9%9D%A2%E7%BB%98%E5%9B%BE/</link>
      <pubDate>Thu, 03 May 2007 10:27:00 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2007/05/scilab%E4%B8%89%E7%BB%B4%E5%B9%B3%E9%9D%A2%E7%BB%98%E5%9B%BE/</guid>
      <description>

&lt;p&gt;三维绘图可以分为两大类型：矩阵型和曲面型。&lt;/p&gt;

&lt;h2 id=&#34;矩阵型:8b9e6891715644f541f979f699d9fdf4&#34;&gt;矩阵型&lt;/h2&gt;

&lt;p&gt;通常是声明一个矩阵，以矩阵的长宽为x,y范围，以矩阵里面的数值为高z，
使用&lt;code&gt;plot3d(t1,t2,Z,alpha=a,theta=b)&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;t1:y轴方向的范围&lt;/li&gt;
&lt;li&gt;t2:x轴方向的范围&lt;/li&gt;
&lt;li&gt;Z:矩阵&lt;/li&gt;
&lt;li&gt;alpha&lt;/li&gt;
&lt;li&gt;theta参数用于指定角度，让图绘出来以某个特定的角度呈现出来。(optional)&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-scilab&#34;&gt;-&amp;gt;clear -&amp;gt;A=[1 2 5 4 3;0 3 2 8 6;2 4 6 7 5;2 3 4 3 1];
-&amp;gt;t1=1:4; -&amp;gt;t2=1:5;
//plot3d1与plot3d语法类似，能够嵌入多种颜色
-&amp;gt;plot3d(t1,t2,A,alpha=45,theta=45);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;mesh不需要边界声明， &lt;code&gt;-&amp;gt;mesh(A);&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;曲面型:8b9e6891715644f541f979f699d9fdf4&#34;&gt;曲面型&lt;/h2&gt;

&lt;p&gt;则是先声明一个连续函数，再选取x,y范围来绘图。
&lt;code&gt;fplot3d()&lt;/code&gt;指令用来绘制连续函数。
用&lt;code&gt;fplot3d&lt;/code&gt;之前，用&lt;code&gt;deff&lt;/code&gt;或&lt;code&gt;function&lt;/code&gt;声明函数z,然后再声明函数范围x,y.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scilab&#34;&gt;-&amp;gt;deff(&#39;z=f(x,y)&#39;,&#39;z=x\*y&#39;); 
-&amp;gt;x=-10:8; -&amp;gt;y=-6:12;
-&amp;gt;fplot3d(x,y,f);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;柱状图:8b9e6891715644f541f979f699d9fdf4&#34;&gt;柱状图&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-scilab&#34;&gt;-&amp;gt;A=[1 3 5 7;2 6 10 14]; //声明一个矩阵 
-&amp;gt;hist3d(A);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;空间立体曲线图:8b9e6891715644f541f979f699d9fdf4&#34;&gt;空间立体曲线图&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;param3d&lt;/code&gt;绘制的是线，而非面。 &lt;code&gt;param3d(xf,yf,zf);&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;xf:x方向的函数&lt;/li&gt;
&lt;li&gt;yf:y方向的函数&lt;/li&gt;
&lt;li&gt;zf:z方向的函数&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-scilab&#34;&gt;-&amp;gt;t=linspace(-%pi,%pi);
-&amp;gt;param3d(sin(t),cos(t),t);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>qvwm窗口管理器的windows2000主题</title>
      <link>http://guangchuangyu.github.io/2006/06/qvwm%E7%AA%97%E5%8F%A3%E7%AE%A1%E7%90%86%E5%99%A8%E7%9A%84windows2000%E4%B8%BB%E9%A2%98/</link>
      <pubDate>Sat, 24 Jun 2006 04:33:00 +0800</pubDate>
      
      <guid>http://guangchuangyu.github.io/2006/06/qvwm%E7%AA%97%E5%8F%A3%E7%AE%A1%E7%90%86%E5%99%A8%E7%9A%84windows2000%E4%B8%BB%E9%A2%98/</guid>
      <description>&lt;p&gt;&lt;em&gt;qvwm&lt;/em&gt; is a window manager for the X Window system which provides a user
experience very close to Windows &lt;sup&gt;95&lt;/sup&gt;&amp;frasl;&lt;sub&gt;98&lt;/sub&gt;. It is small and extremely fast.&lt;/p&gt;

&lt;p&gt;可从其&lt;a href=&#34;http://qvwm.sourceforge.net/index_en.html&#34;&gt;主页&lt;/a&gt;上看到它的介绍及下载源码。&lt;/p&gt;

&lt;p&gt;这是我做的一个windows2000的主题。。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/files/qvwm2ktheme.tar.bz2&#34;&gt;点击下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/GuangchuangYu/ygc_name/master/2006/06/qvwm.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>